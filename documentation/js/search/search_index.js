var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.343,1,0.962]],["body/components/AppComponent.html",[0,0.569,1,1.693,2,1.436,3,0.307,4,0.307,5,1.277,6,1.277,7,1.277,8,0.227,9,3.171,10,1.186,11,2.097,12,2.088,13,2.447,14,1.546,15,1.334,16,1.664,17,5.467,18,1.931,19,4.915,20,2.085,21,4.915,22,0.438,23,0.632,24,5.467,25,0.695,26,0.028,27,0.95,28,1.186,29,1.102,30,1.792,31,3.616,32,3.616,33,1.277,34,3.772,35,0.455,36,0.695,37,1.375,38,0.307,39,0.754,40,1.277,41,1.546,42,1.546,43,0.95,44,1.961,45,1.277,46,1.092,47,1.277,48,1.102,49,1.277,50,1.277,51,1.102,52,1.277,53,1.102,54,1.277,55,1.102,56,1.277,57,1.102,58,1.277,59,1.102,60,1.277,61,1.102,62,1.277,63,1.102,64,1.277,65,1.102,66,1.277,67,1.102,68,0.905,69,1.277,70,1.102,71,1.102,72,1.186,73,1.024,74,1.186,75,1.277,76,0.021,77,0.021]],["title/interfaces/AppState.html",[78,0.511,79,2.164]],["body/interfaces/AppState.html",[3,0.388,4,0.388,8,0.287,22,0.553,23,0.731,25,0.877,26,0.029,35,0.526,38,0.463,68,1.185,76,0.024,77,0.024,78,0.739,79,3.736,80,1.736,81,3.502,82,3.743,83,4.778,84,2.37,85,3.736,86,4.761,87,1.871,88,3.502]],["title/injectables/AuthService.html",[89,1.115,90,1.294]],["body/injectables/AuthService.html",[3,0.199,4,0.199,8,0.147,13,1.218,22,0.284,23,0.467,25,1.093,26,0.029,27,1.566,28,1.611,29,1.668,33,2.121,35,0.497,36,0.451,38,0.353,39,0.489,46,1.024,76,0.015,77,0.015,87,1.702,89,1.23,90,1.427,91,1.327,92,1.799,93,2.419,94,2.351,95,3.642,96,3.642,97,3.187,98,4.332,99,4.332,100,1.541,101,4.795,102,3.632,103,3.632,104,3.632,105,3.632,106,3.642,107,2.851,108,3.632,109,3.642,110,3.949,111,4.332,112,2.446,113,2.357,114,2.517,115,3.632,116,2.446,117,3.015,118,4.199,119,2.173,120,4.332,121,4.049,122,3.632,123,2.446,124,3.632,125,2.446,126,3.632,127,3.833,128,2.446,129,3.632,130,2.446,131,3.187,132,2.446,133,2.848,134,2.446,135,3.632,136,2.446,137,3.053,138,2.446,139,2.672,140,2.446,141,3.632,142,2.446,143,3.632,144,2.446,145,2.446,146,2.446,147,2.446,148,2.446,149,2.446,150,2.446,151,2.056,152,2.056,153,1.037,154,1.218,155,2.056,156,1.454,157,2.446,158,2.446,159,1.327,160,1.799,161,1.799,162,2.056,163,1.799,164,2.056,165,1.454,166,2.351,167,5.123,168,5.123,169,1.799,170,2.446,171,2.446,172,1.608,173,2.446,174,2.446,175,2.446,176,2.446,177,2.446,178,2.446,179,2.446,180,2.056,181,2.446,182,2.446,183,2.446,184,2.446,185,2.446,186,2.446,187,2.16,188,2.446,189,2.446,190,2.446,191,2.446,192,2.446]],["title/interfaces/BroadcastMessage.html",[78,0.511,193,2.164]],["body/interfaces/BroadcastMessage.html",[3,0.236,4,0.236,8,0.175,13,1.442,22,0.336,23,0.528,25,0.756,26,0.029,35,0.507,36,0.533,37,1.056,38,0.334,39,0.579,68,0.756,71,0.846,76,0.017,77,0.017,78,0.449,80,1.056,84,1.442,87,1.874,89,1.39,90,1.613,93,2.248,94,1.571,107,3.086,114,2.482,119,2.023,165,1.722,166,1.884,187,1.722,193,3.601,194,1.903,195,5.44,196,4.305,197,2.973,198,3.451,199,3.451,200,2.227,201,1.884,202,1.722,203,1.571,204,1.903,205,2.434,206,2.13,207,3.02,208,2.13,209,1.442,210,1.442,211,1.903,212,3.451,213,2.434,214,2.434,215,2.434,216,2.13,217,1.903,218,1.571,219,1.722,220,2.434,221,2.434,222,1.571,223,2.434,224,2.434,225,3.451,226,3.451,227,2.434,228,4.399,229,2.434,230,2.434,231,2.434,232,1.903,233,2.434,234,3.135,235,2.434,236,2.13,237,2.434,238,2.434,239,2.434,240,2.434,241,2.434,242,4.362,243,2.434,244,2.434,245,2.434,246,2.434,247,2.434,248,2.434,249,3.451,250,2.434,251,2.434,252,2.434,253,2.434,254,2.434,255,2.434,256,2.434,257,2.434,258,2.13,259,2.434,260,4.009,261,2.434,262,2.434,263,2.434,264,2.434,265,2.434,266,2.13,267,4.009,268,2.023,269,2.434,270,3.451,271,3.02,272,3.02,273,2.434,274,1.571,275,2.434,276,2.13,277,2.434,278,2.13,279,2.434,280,2.434,281,2.434,282,2.434,283,2.434]],["title/interfaces/CarRentalExpenseModel.html",[78,0.511,284,2.164]],["body/interfaces/CarRentalExpenseModel.html",[3,0.362,4,0.362,8,0.268,22,0.517,23,0.702,25,1.163,26,0.028,27,1.668,30,1.622,35,0.412,38,0.362,76,0.023,77,0.023,78,0.69,80,1.622,284,3.586,285,3.741,286,2.646,287,2.925,288,3.586,289,2.938,290,5.172,291,6.152,292,5.172,293,6.152,294,5.172,295,2.948,296,2.925]],["title/injectables/CommunicationService.html",[89,1.115,210,1.64]],["body/injectables/CommunicationService.html",[3,0.191,4,0.191,8,0.142,13,1.17,22,0.273,23,0.453,25,0.928,26,0.029,27,0.592,28,0.739,29,0.687,33,1.953,35,0.466,36,0.433,37,0.857,38,0.287,39,0.469,46,0.845,68,0.779,71,0.687,76,0.015,77,0.015,78,0.365,84,1.17,87,1.662,89,1.193,90,1.847,91,1.275,93,2.356,94,2.295,100,1.495,107,3.145,113,2.243,114,2.592,117,2.295,119,2.136,165,1.397,166,1.617,187,2.096,193,3.476,194,1.544,195,5.363,196,3.89,197,2.732,198,3.951,199,2.963,200,2.55,201,2.157,202,1.397,203,1.275,204,1.544,205,1.975,206,1.728,207,3.112,208,1.728,209,1.17,210,1.755,211,1.544,212,4.233,213,2.963,214,3.556,215,2.963,216,2.593,217,2.317,218,2.295,219,2.515,220,3.556,221,1.975,222,1.275,223,1.975,224,1.975,225,3.556,226,3.556,227,1.975,228,4.389,229,1.975,230,1.975,231,2.963,232,2.317,233,2.963,234,2.78,235,2.963,236,2.593,237,2.963,238,2.963,239,1.975,240,1.975,241,1.975,242,4.742,243,2.963,244,2.963,245,2.963,246,2.963,247,2.963,248,2.963,249,2.963,250,1.975,251,1.975,252,1.975,253,1.975,254,1.975,255,1.975,256,1.975,257,1.975,258,1.728,259,1.975,260,3.556,261,1.975,262,1.975,263,1.975,264,3.951,265,1.975,266,1.728,267,4.233,268,2.136,269,3.951,270,2.963,271,2.593,272,2.593,273,3.951,274,1.275,275,1.975,276,1.728,277,2.963,278,2.593,279,2.963,280,2.963,281,2.963,282,3.951,283,1.975,297,3.525,298,3.525,299,2.349,300,3.525,301,2.349,302,2.349,303,2.349,304,2.317,305,2.349,306,2.349,307,2.349,308,1.975,309,2.349]],["title/components/ConfirmDialogComponent.html",[0,0.343,48,0.962]],["body/components/ConfirmDialogComponent.html",[0,0.558,1,1.056,2,1.397,3,0.294,4,0.294,5,1.224,6,1.224,7,1.224,8,0.218,10,1.137,11,2.086,12,2.077,14,1.503,15,1.297,16,1.618,18,1.878,20,2.027,22,0.42,23,0.615,26,0.028,28,1.137,29,1.056,33,1.224,35,0.496,36,0.666,38,0.294,39,0.722,40,1.224,41,1.503,42,1.503,43,0.911,44,1.929,45,1.224,46,1.07,47,1.224,48,1.665,49,2.102,50,1.224,51,1.056,52,1.224,53,1.056,54,1.224,55,1.056,56,1.224,57,1.056,58,1.224,59,1.056,60,1.224,61,1.056,62,1.224,63,1.056,64,1.224,65,1.056,66,1.224,67,1.056,68,1.121,69,1.224,70,1.056,71,1.056,72,1.137,73,0.981,74,1.137,75,1.224,76,0.02,77,0.02,94,2.905,153,1.533,274,3.091,308,4.018,310,4.018,311,3.516,312,3.038,313,4.018,314,5.355,315,4.779,316,4.779,317,4.501,318,4.779,319,3.614,320,3.038,321,4.018,322,4.779]],["title/components/DashboardComponent.html",[0,0.343,51,0.962]],["body/components/DashboardComponent.html",[0,0.584,1,1.162,2,1.486,3,0.324,4,0.324,5,1.346,6,1.346,7,1.346,8,0.24,10,1.251,11,2.109,12,2.102,14,1.6,15,1.38,16,1.346,18,1.998,20,2.157,26,0.028,35,0.368,36,0.733,38,0.324,39,0.795,40,1.346,41,1.6,42,1.6,43,1.002,44,2.001,45,1.346,46,1.12,47,1.346,48,1.162,49,1.346,50,1.346,51,1.727,52,1.346,53,1.162,54,1.346,55,1.162,56,1.346,57,1.162,58,1.346,59,1.162,60,1.346,61,1.162,62,1.346,63,1.162,64,1.346,65,1.162,66,1.346,67,1.162,68,0.937,69,1.346,70,1.162,71,1.162,72,1.251,73,1.079,74,1.251,75,1.346,76,0.022,77,0.022,323,3.343,324,4.968,325,5.085,326,5.085,327,5.085]],["title/interfaces/ExpenseBaseModel.html",[78,0.511,289,1.64]],["body/interfaces/ExpenseBaseModel.html",[3,0.378,4,0.378,8,0.28,22,0.539,23,0.72,25,1.15,26,0.028,27,1.68,38,0.378,76,0.024,77,0.024,78,0.721,80,1.693,119,2.376,289,2.789,328,3.905,329,3.905,330,2.648,331,5.248,332,5.248,333,5.248,334,3.576]],["title/interfaces/FlightExpenseModel.html",[78,0.511,335,2.164]],["body/interfaces/FlightExpenseModel.html",[3,0.363,4,0.363,8,0.269,22,0.518,23,0.703,25,1.164,26,0.028,27,1.669,30,1.626,35,0.413,38,0.363,76,0.023,77,0.023,78,0.692,80,1.626,287,2.931,288,3.591,289,2.941,295,2.95,296,2.931,335,3.591,336,3.749,337,4.53,338,6.157,339,6.157,340,6.157,341,6.157]],["title/components/FooterComponent.html",[0,0.343,53,0.962]],["body/components/FooterComponent.html",[0,0.585,1,1.167,2,1.49,3,0.325,4,0.325,5,1.352,6,1.352,7,1.352,8,0.241,10,1.256,11,2.11,12,2.103,14,1.604,15,1.384,16,1.352,18,2.004,20,2.163,26,0.028,35,0.37,36,0.736,38,0.325,39,0.798,40,1.352,41,1.604,42,1.604,43,1.006,44,2.004,45,1.352,46,1.122,47,1.352,48,1.167,49,1.352,50,1.352,51,1.167,52,1.352,53,1.73,54,1.352,55,1.167,56,1.352,57,1.167,58,1.352,59,1.167,60,1.352,61,1.167,62,1.352,63,1.167,64,1.352,65,1.167,66,1.352,67,1.167,68,0.939,69,1.352,70,1.167,71,1.167,72,1.256,73,1.084,74,1.256,75,1.352,76,0.022,77,0.022,342,3.357,343,5.099,344,5.099,345,5.099]],["title/components/HeaderComponent.html",[0,0.343,55,0.962]],["body/components/HeaderComponent.html",[0,0.53,1,0.955,2,1.305,3,0.266,4,0.266,5,1.106,6,1.106,7,1.106,8,0.197,10,1.028,11,2.059,12,2.049,14,1.405,15,1.212,16,1.512,18,1.755,20,1.894,22,0.379,23,0.574,26,0.029,28,1.6,29,1.487,30,1.628,31,3.285,32,3.285,33,1.851,35,0.547,36,0.602,37,1.191,38,0.266,39,0.653,40,1.106,41,1.405,42,1.405,43,0.823,44,1.851,45,1.106,46,1.017,47,1.106,48,0.955,49,1.106,50,1.106,51,0.955,52,1.106,53,0.955,54,1.106,55,1.598,56,1.106,57,0.955,58,1.106,59,0.955,60,1.106,61,0.955,62,1.106,63,0.955,64,1.106,65,0.955,66,1.106,67,0.955,68,0.823,69,1.106,70,0.955,71,0.955,72,1.028,73,0.887,74,1.028,75,1.106,76,0.019,77,0.019,90,2.149,93,2.155,100,1.894,107,3.252,113,1.386,114,1.894,153,1.386,197,1.773,201,1.499,202,1.943,210,1.627,218,2.76,266,2.404,346,2.747,347,4.466,348,3.743,349,3.743,350,4.466,351,4.466,352,3.743,353,5.469,354,3.268,355,3.285,356,3.268,357,2.656,358,3.268,359,2.656,360,3.268,361,2.404,362,2.404,363,3.268,364,3.268,365,3.268,366,3.754]],["title/interfaces/HotelExpenseModel.html",[78,0.511,367,2.164]],["body/interfaces/HotelExpenseModel.html",[3,0.37,4,0.37,8,0.274,22,0.528,23,0.711,25,1.142,26,0.028,27,1.627,30,2.015,35,0.421,38,0.37,76,0.023,77,0.023,78,0.705,80,1.657,288,3.633,289,2.966,295,2.963,296,2.987,367,3.633,368,3.821,369,3.821,370,5.21,371,5.21,372,5.21,373,4.559]],["title/components/LayoutComponent.html",[0,0.343,57,0.962]],["body/components/LayoutComponent.html",[0,0.562,1,1.073,2,1.411,3,0.299,4,0.299,5,1.243,6,1.243,7,1.243,8,0.221,10,1.154,11,2.09,12,2.081,14,1.518,15,1.31,16,1.634,18,1.897,20,2.048,26,0.029,35,0.566,36,0.676,37,1.338,38,0.299,39,0.733,40,1.243,41,1.518,42,1.518,43,0.925,44,1.94,45,1.243,46,1.078,47,1.243,48,1.073,49,1.243,50,1.243,51,1.073,52,1.243,53,1.675,54,1.243,55,1.675,56,1.243,57,1.675,58,1.243,59,1.073,60,1.243,61,1.073,62,1.243,63,1.675,64,1.243,65,1.073,66,1.243,67,1.073,68,0.889,69,1.243,70,1.073,71,1.073,72,1.154,73,0.996,74,1.154,75,1.243,76,0.02,77,0.02,374,3.085,375,3.173,376,3.173,377,4.828,378,3.208,379,3.546,380,4.828,381,4.828,382,1.991,383,2.412,384,3.67,385,3.67,386,3.67]],["title/components/LoginComponent.html",[0,0.343,59,0.962]],["body/components/LoginComponent.html",[0,0.509,1,0.887,2,1.24,3,0.247,4,0.247,5,1.027,6,1.027,7,1.027,8,0.183,10,0.954,11,2.038,12,2.026,14,1.334,15,1.152,16,1.436,18,1.667,20,1.799,22,0.352,23,0.546,25,0.559,26,0.029,28,1.666,29,1.548,33,1.887,35,0.549,36,0.559,37,1.106,38,0.247,39,0.606,40,1.027,41,1.334,42,1.334,43,0.764,44,1.793,45,1.027,46,1.185,47,1.027,48,0.887,49,1.027,50,1.027,51,0.887,52,1.027,53,0.887,54,1.027,55,0.887,56,1.027,57,0.887,58,1.027,59,1.548,60,1.027,61,0.887,62,1.027,63,0.887,64,1.027,65,0.887,66,1.027,67,0.887,68,0.781,69,1.027,70,0.887,71,0.887,72,0.954,73,1.438,74,0.954,75,1.027,76,0.018,77,0.018,90,1.192,93,2.241,100,1.799,106,4.856,113,1.287,114,1.799,153,1.287,154,1.51,156,2.523,172,1.994,201,1.392,218,2.654,219,2.909,357,2.523,359,2.523,378,2.909,382,1.646,387,2.55,388,3.599,389,4.242,390,4.242,391,4.112,392,4.112,393,4.453,394,3.034,395,3.034,396,3.566,397,3.034,398,3.034,399,4.112,400,3.566,401,4.453,402,3.897,403,3.034,404,2.55,405,2.55,406,1.994,407,3.034,408,3.034,409,3.034,410,3.034,411,3.034,412,3.034,413,2.55,414,2.232]],["title/components/NotFoundComponent.html",[0,0.343,61,0.962]],["body/components/NotFoundComponent.html",[0,0.561,1,1.071,2,1.409,3,0.298,4,0.298,5,1.632,6,1.24,7,1.24,8,0.221,10,1.152,11,2.089,12,2.081,14,1.517,15,1.309,16,1.632,26,0.028,35,0.446,36,0.675,37,1.335,38,0.298,39,0.732,40,1.24,41,1.517,42,1.517,43,0.923,44,1.939,45,1.24,46,1.077,47,1.24,48,1.071,49,1.24,50,1.24,51,1.071,52,1.24,53,1.071,54,1.24,55,1.071,56,1.24,57,1.071,58,1.24,59,1.071,60,1.24,61,1.674,62,1.24,63,1.071,64,1.24,65,1.071,66,1.24,67,1.071,68,0.888,69,1.24,70,1.071,71,1.071,72,1.152,73,0.994,74,1.152,75,1.24,76,0.02,77,0.02,375,3.169,376,3.169,379,3.543,383,2.408,415,3.543,416,3.079,417,3.079,418,3.079,419,4.822,420,5.39,421,5.39,422,5.39,423,4.822,424,5.39,425,4.822,426,5.39,427,5.39,428,4.531,429,5.39,430,3.663,431,3.663]],["title/components/SidenavComponent.html",[0,0.343,63,0.962]],["body/components/SidenavComponent.html",[0,0.571,1,1.111,2,1.444,3,0.31,4,0.31,5,1.287,6,1.287,7,1.287,8,0.229,10,1.196,11,2.099,12,2.09,14,1.554,15,1.341,16,1.673,18,1.941,20,2.096,26,0.028,35,0.457,36,0.7,37,1.386,38,0.31,39,0.76,40,1.287,41,1.554,42,1.554,43,0.958,44,1.967,45,1.287,46,1.097,47,1.287,48,1.111,49,1.287,50,1.287,51,1.111,52,1.287,53,1.111,54,1.287,55,1.111,56,1.287,57,1.111,58,1.287,59,1.111,60,1.287,61,1.111,62,1.287,63,1.698,64,1.287,65,1.111,66,1.287,67,1.111,68,0.91,69,1.287,70,1.111,71,1.111,72,1.196,73,1.032,74,1.196,75,1.287,76,0.021,77,0.021,232,3.247,268,2.096,324,4.153,375,3.247,376,3.247,379,3.607,383,2.499,432,3.196,433,4.94,434,4.94,435,4.94,436,4.94,437,4.94,438,4.94]],["title/interfaces/TaxiExpenseModel.html",[78,0.511,439,2.164]],["body/interfaces/TaxiExpenseModel.html",[3,0.387,4,0.387,8,0.286,22,0.551,23,0.73,25,1.118,26,0.028,27,1.644,30,1.731,35,0.44,38,0.387,76,0.024,77,0.024,78,0.737,80,1.731,287,3.121,288,3.73,289,3.023,295,2.786,296,3.121,439,3.73,440,3.992,441,6.289]],["title/injectables/ToastService.html",[89,1.115,159,1.787]],["body/injectables/ToastService.html",[3,0.483,4,0.212,8,0.157,13,1.296,22,0.302,23,0.489,25,1.166,26,0.029,27,1.383,28,1.413,29,0.761,33,1.858,35,0.241,36,0.479,38,0.212,39,0.52,42,1.828,46,0.898,76,0.016,77,0.016,87,1.494,89,1.287,91,1.412,93,2.25,100,1.613,113,2.096,114,2.096,117,2.437,119,1.905,159,2.063,165,1.548,166,1.745,216,3.305,228,4.623,234,3.725,304,2.953,334,3.125,442,2.188,443,4.492,444,4.492,445,4.941,446,4.492,447,4.492,448,3.802,449,2.603,450,4.275,451,3.819,452,5.81,453,2.603,454,3.247,455,6.497,456,4.941,457,5.926,458,2.603,459,5.926,460,2.603,461,3.81,462,2.603,463,3.802,464,3.802,465,3.196,466,5.488,467,4.492,468,4.941,469,2.603,470,2.603,471,3.802,472,3.802,473,3.802,474,3.802,475,2.603,476,2.603,477,2.603,478,2.603,479,2.603,480,2.603,481,2.603,482,2.603,483,3.802,484,2.603,485,2.603,486,2.603,487,1.711,488,2.603,489,2.603,490,3.802,491,2.603,492,2.603,493,2.603,494,2.603]],["title/components/ToasterComponent.html",[0,0.343,65,0.962]],["body/components/ToasterComponent.html",[0,0.579,1,1.143,2,1.47,3,0.318,4,0.318,5,1.703,6,1.324,7,1.324,8,0.236,10,1.23,11,2.105,12,2.098,14,1.583,15,1.366,16,1.703,26,0.029,35,0.466,36,0.72,38,0.318,39,0.782,40,1.324,41,1.583,42,1.583,43,0.985,44,1.988,45,1.324,46,1.112,47,1.324,48,1.143,49,1.324,50,1.324,51,1.143,52,1.324,53,1.143,54,1.324,55,1.143,56,1.324,57,1.143,58,1.324,59,1.143,60,1.324,61,1.143,62,1.324,63,1.143,64,1.324,65,1.716,66,1.324,67,1.143,68,0.927,69,1.324,70,1.143,71,1.143,72,1.23,73,1.062,74,1.23,75,1.324,76,0.021,77,0.021,375,3.307,376,3.307,378,3.308,382,2.122,383,2.571,415,3.656,495,3.288,496,5.032]],["title/directives/TogglePasswordDirective.html",[43,0.83,73,0.894]],["body/directives/TogglePasswordDirective.html",[3,0.345,4,0.345,8,0.256,10,1.334,11,1.666,14,1.666,15,1.438,22,0.493,23,0.681,26,0.029,28,1.334,29,1.24,33,1.956,35,0.393,36,0.781,38,0.345,39,0.848,43,1.335,72,1.334,73,1.438,74,1.666,76,0.022,77,0.022,87,1.667,93,2.106,100,2.247,113,1.799,114,1.799,153,1.799,402,3.897,497,5.086,498,3.566,499,5.776,500,6.05,501,5.297,502,5.297,503,5.297,504,3.566,505,5.297,506,5.297,507,4.242,508,4.242,509,4.242,510,5.297,511,4.242,512,4.242,513,4.242,514,5.297,515,4.242]],["title/components/TripDetailComponent.html",[0,0.343,67,0.962]],["body/components/TripDetailComponent.html",[0,0.279,1,0.349,2,0.597,3,0.097,4,0.097,5,0.404,6,0.404,7,0.404,8,0.072,10,0.376,11,1.671,12,1.643,14,0.642,15,1.284,16,0.691,18,0.803,20,0.866,22,0.139,23,0.263,25,0.764,26,0.029,27,0.515,28,1.643,29,1.685,30,0.745,33,1.952,35,0.529,36,0.22,37,0.435,38,0.097,39,0.239,40,0.404,41,0.642,42,0.642,43,0.301,44,1.072,45,0.404,46,1,47,0.404,48,0.349,49,0.404,50,0.404,51,0.349,52,0.404,53,0.349,54,0.404,55,0.349,56,0.404,57,0.349,58,0.404,59,0.349,60,0.404,61,0.349,62,0.404,63,0.349,64,0.404,65,0.349,66,0.404,67,0.926,68,1.079,69,0.404,70,0.349,71,0.349,72,0.376,73,0.324,74,0.376,75,0.404,76,0.009,77,0.009,84,0.595,87,1.916,90,0.469,93,2.135,97,1.969,100,0.866,113,1.646,114,1.936,117,0.648,119,0.507,131,2.33,133,1.759,139,1.503,153,0.507,154,0.595,156,0.71,159,0.648,160,0.879,166,0.937,169,2.854,172,0.785,180,1.717,196,2.619,197,0.648,200,0.648,201,0.548,202,0.71,203,0.648,204,0.785,210,0.595,211,1.342,217,1.759,218,1.452,219,1.591,276,0.879,278,2.33,286,1.215,290,1.717,292,1.717,294,1.717,295,2.543,330,1.759,332,3.675,333,3.486,334,1.215,337,2.33,348,1.969,349,1.969,352,1.969,355,1.503,357,1.215,359,1.215,361,0.879,362,0.879,370,1.717,371,1.717,372,1.717,373,3.216,378,1.591,382,0.648,388,1.969,391,2.25,392,1.717,393,2.663,396,1.717,399,2.25,400,4.208,401,4.208,404,1.004,405,1.004,406,0.785,414,0.879,428,1.717,450,0.879,461,1.884,487,1.342,516,4.276,517,4.886,518,1.004,519,2.25,520,2.042,521,2.25,522,2.25,523,2.676,524,2.676,525,2.676,526,2.042,527,2.042,528,2.676,529,2.992,530,3.56,531,3.486,532,3.56,533,4.146,534,3.56,535,2.676,536,2.042,537,2.663,538,3.168,539,3.168,540,3.168,541,2.042,542,1.772,543,1.194,544,1.194,545,1.194,546,1.194,547,1.194,548,1.194,549,1.194,550,1.194,551,1.194,552,2.042,553,1.194,554,1.194,555,1.717,556,1.194,557,1.194,558,3.262,559,1.717,560,1.194,561,3.05,562,1.194,563,1.717,564,1.194,565,1.717,566,1.194,567,1.194,568,1.194,569,2.676,570,1.194,571,1.503,572,1.717,573,3.588,574,4.372,575,1.503,576,2.33,577,3.842,578,3.168,579,2.25,580,1.503,581,1.717,582,2.042,583,2.042,584,2.854,585,2.33,586,2.042,587,2.042,588,2.33,589,2.042,590,1.194,591,1.194,592,1.194,593,1.004,594,0.785,595,0.879,596,1.004,597,1.004,598,1.004,599,1.004,600,1.194,601,1.194,602,1.194,603,0.71,604,1.004,605,0.785,606,1.004,607,0.879,608,1.004,609,1.194,610,1.194,611,3.56,612,1.194,613,1.194,614,1.194,615,1.194,616,1.342,617,1.194,618,1.194,619,2.042,620,4.146,621,2.992,622,2.042,623,2.619,624,2.042,625,1.004,626,1.194,627,2.676,628,1.194,629,1.194,630,1.194,631,1.194,632,1.194,633,1.194,634,1.194,635,1.194,636,3.168,637,2.676,638,2.042,639,1.194,640,2.25,641,2.676,642,2.676,643,3.168,644,2.25,645,1.004,646,2.042,647,1.194,648,1.194,649,1.194,650,1.194,651,1.194,652,2.042,653,1.194,654,1.004,655,1.969,656,2.042,657,1.717,658,1.969,659,2.042,660,1.194,661,2.042,662,1.194,663,2.042,664,1.194,665,2.042,666,1.194,667,1.503,668,1.717,669,1.717,670,3.481,671,1.503,672,1.503,673,1.503,674,2.33,675,3.168,676,3.675,677,2.663,678,1.717,679,2.042,680,2.042,681,1.717,682,2.042,683,1.717,684,1.503,685,1.717]],["title/injectables/TripEffects.html",[89,1.115,686,2.164]],["body/injectables/TripEffects.html",[3,0.215,4,0.215,8,0.159,22,0.306,23,0.494,26,0.03,28,1.79,29,1.663,33,1.927,35,0.489,36,0.486,38,0.215,39,0.527,68,1.113,76,0.016,77,0.016,89,1.3,91,1.432,93,2.01,153,1.119,154,1.314,155,4.442,203,1.432,209,2.254,268,1.629,330,2.474,451,3.971,686,2.524,687,2.218,688,4.528,689,4.528,690,3.331,691,3.331,692,3.331,693,2.976,694,3.841,695,2.639,696,3.841,697,2.639,698,6.121,699,6.042,700,3.841,701,6.121,702,3.841,703,3.841,704,3.841,705,3.841,706,6.042,707,3.841,708,4.903,709,2.639,710,3.841,711,3.841,712,3.841,713,3.841,714,2.639,715,3.841,716,3.841,717,3.841,718,3.841,719,3.841,720,2.639,721,3.841,722,3.841,723,3.841,724,3.841,725,3.841,726,2.639,727,3.841,728,3.841,729,3.841,730,3.841,731,3.841,732,2.639,733,2.218,734,2.639,735,2.218,736,2.218,737,2.639,738,1.734,739,2.639]],["title/components/TripListComponent.html",[0,0.343,70,0.962]],["body/components/TripListComponent.html",[0,0.334,1,0.449,2,0.738,3,0.125,4,0.125,5,0.52,6,0.52,7,0.52,8,0.093,10,0.483,11,1.79,12,1.766,14,0.794,15,0.685,16,0.854,18,0.992,22,0.178,23,0.325,25,0.897,26,0.029,27,1.034,28,1.707,29,1.586,30,0.92,33,2.053,35,0.568,36,0.283,37,0.56,38,0.125,39,0.307,40,0.52,41,0.794,42,0.794,43,0.387,44,1.258,45,0.52,46,1.037,47,0.52,48,0.738,49,0.52,50,0.52,51,0.449,52,0.52,53,0.449,54,0.52,55,0.449,56,0.52,57,0.449,58,0.52,59,0.449,60,0.52,61,0.449,62,0.52,63,0.449,64,0.52,65,0.449,66,0.52,67,0.449,68,1.034,69,0.52,70,1.086,71,0.938,72,0.483,73,0.417,74,0.483,75,0.52,76,0.011,77,0.011,79,1.01,84,0.765,87,0.604,90,0.604,93,2.144,94,1.742,97,2.362,100,1.07,113,1.872,114,2.139,117,1.742,119,1.362,121,2.111,133,2.111,139,1.857,153,0.652,154,0.765,156,0.914,159,0.834,160,1.131,166,0.705,172,1.01,197,0.834,200,0.834,201,0.705,202,0.914,203,0.834,204,1.01,210,0.765,211,1.659,217,2.111,218,1.742,219,1.91,222,1.742,258,1.131,268,1.362,272,1.131,274,1.369,295,1.706,311,1.131,313,2.699,317,2.699,320,3.451,321,1.292,330,1.577,348,2.362,349,2.362,352,2.362,355,1.857,357,1.501,359,1.501,361,1.131,362,1.131,378,1.91,379,2.111,382,0.834,388,2.362,406,1.01,413,1.292,414,1.131,415,1.01,454,1.659,461,2.211,504,2.122,516,4.488,519,2.699,521,2.699,522,2.699,529,3.451,531,4.238,537,3.125,542,1.851,555,2.122,558,3.71,559,2.122,563,2.122,565,2.122,571,1.857,573,2.735,576,1.857,577,1.857,579,1.292,593,2.122,594,1.01,596,1.292,597,1.292,598,1.292,599,1.292,603,0.914,604,1.292,605,2.9,606,1.292,607,1.131,608,1.292,621,2.122,623,1.857,625,3.125,644,1.292,667,1.857,670,1.857,733,3.125,740,5.128,741,1.292,742,3.211,743,3.211,744,3.211,745,2.524,746,3.211,747,2.524,748,3.211,749,3.211,750,4.106,751,3.211,752,3.211,753,3.717,754,2.524,755,2.524,756,2.524,757,3.717,758,1.537,759,2.524,760,3.717,761,1.537,762,1.537,763,2.524,764,1.537,765,2.524,766,1.537,767,1.537,768,1.537,769,1.537,770,1.537,771,1.537,772,1.537,773,3.211,774,1.537,775,2.524,776,1.537,777,1.537,778,1.537,779,1.537,780,1.537,781,1.537,782,3.211,783,2.524,784,1.537,785,3.211,786,2.524,787,1.537,788,1.537,789,1.537,790,1.537,791,1.537,792,1.537,793,1.537,794,1.537,795,1.537,796,1.131,797,1.131,798,1.537,799,1.537,800,1.537,801,1.537,802,1.537,803,2.524,804,1.537,805,1.537,806,1.537,807,1.537,808,1.537,809,1.537,810,2.524,811,1.537,812,1.537,813,1.537,814,2.524,815,2.524,816,1.537,817,1.537,818,1.537,819,1.537,820,1.537,821,1.537,822,1.537,823,1.537,824,1.537,825,1.537,826,1.537,827,1.537,828,2.524,829,2.524,830,2.524,831,2.524,832,4.363,833,2.524,834,3.717,835,2.122,836,2.524]],["title/interfaces/TripModel.html",[78,0.511,542,1.64]],["body/interfaces/TripModel.html",[3,0.297,4,0.297,8,0.22,22,0.423,23,0.618,25,1.212,26,0.029,27,1.648,30,1.328,35,0.565,38,0.297,46,1.142,76,0.02,77,0.02,78,0.565,80,1.328,119,2.424,284,3.157,286,2.166,295,2.799,330,2.424,334,3.628,335,3.157,367,3.157,439,3.157,461,3.398,542,2.392,571,4.204,572,4.804,573,4.204,575,4.644,576,4.204,580,4.204,581,3.062,584,3.534,585,3.534,588,3.534,605,3.756,607,3.534,674,2.679,837,3.062,838,5.714,839,5.714,840,4.803,841,3.642,842,3.642,843,5.375,844,3.642]],["title/injectables/TripService.html",[89,1.115,738,2.164]],["body/injectables/TripService.html",[3,0.24,4,0.24,8,0.178,13,1.468,22,0.342,23,0.535,25,1.016,26,0.029,27,1.56,28,1.308,29,1.215,33,1.992,35,0.484,36,0.543,38,0.24,39,0.589,46,1.045,68,1.218,76,0.018,77,0.018,89,1.408,91,1.6,93,2.087,94,2.614,95,4.05,96,4.05,100,1.764,113,2.626,117,2.839,119,2.219,133,4.347,137,3.496,151,2.479,152,2.479,153,1.251,154,1.468,165,1.754,166,2.531,187,2.473,209,2.071,222,2.256,234,3.626,268,1.764,274,2.256,304,3.439,330,2.752,454,2.734,542,2.929,594,1.938,645,3.496,657,4.638,693,2.734,738,2.734,845,2.479,846,4.159,847,4.159,848,5.232,849,4.159,850,2.949,851,3.496,852,4.159,853,2.949,854,4.159,855,2.949,856,2.949,857,4.159,858,2.949,859,3.496,860,4.159,861,4.159,862,2.949,863,2.949,864,2.949,865,2.949,866,2.949,867,2.949,868,2.949]],["title/interfaces/TripState.html",[78,0.511,82,1.958]],["body/interfaces/TripState.html",[3,0.271,4,0.271,8,0.2,15,1.227,22,0.386,23,0.581,25,1.015,26,0.029,27,1.293,35,0.475,38,0.418,68,1.095,76,0.019,77,0.019,78,0.516,80,1.212,82,3.053,84,1.655,85,2.185,87,1.776,118,2.446,121,4.168,169,3.777,203,1.804,268,2.714,330,1.917,451,4.168,542,3.026,561,4.052,594,2.185,616,4.363,736,2.795,869,2.446,870,5.331,871,4.995,872,3.799,873,3.324,874,2.795,875,2.795,876,2.795,877,2.795,878,2.795,879,2.795,880,2.795,881,4.315,882,3.799,883,2.795,884,3.799,885,2.795,886,2.795,887,2.795]],["title/interfaces/UserModel.html",[78,0.511,127,2.164]],["body/interfaces/UserModel.html",[3,0.361,4,0.361,8,0.267,22,0.514,23,0.7,25,1.182,26,0.029,27,1.693,35,0.41,38,0.361,46,1.227,76,0.023,77,0.023,78,0.687,80,1.615,109,5.164,127,3.576,330,2.605,334,3.502,402,4.519,603,3.905,888,3.723,889,6.143,890,4.429]],["title/coverage.html",[891,3.774]],["body/coverage.html",[0,0.639,1,0.738,8,0.152,9,2.124,25,0.466,26,0.029,30,0.921,43,0.637,48,0.738,51,0.738,53,0.738,55,0.738,57,0.738,59,0.738,61,0.738,63,0.738,65,0.738,67,0.738,70,0.738,73,0.686,76,0.016,77,0.016,78,0.928,79,1.661,81,2.737,82,1.503,85,1.661,88,1.859,89,1.758,90,0.993,92,3.249,127,1.661,159,1.371,161,1.859,163,1.859,193,1.661,194,2.445,209,1.258,210,1.258,222,1.371,284,1.661,285,2.124,286,1.503,287,2.903,289,1.258,310,2.124,311,1.859,312,2.124,323,2.124,328,2.124,329,2.124,335,1.661,336,2.124,342,2.124,346,2.124,367,1.661,368,2.124,369,2.124,374,2.124,387,2.124,416,2.124,417,2.124,418,2.124,432,2.124,439,1.661,440,2.124,442,2.124,495,2.124,497,2.124,498,2.124,516,2.737,517,2.124,518,2.124,542,1.258,577,5.035,595,1.859,686,1.661,687,2.124,690,1.859,691,1.859,692,1.859,693,1.661,738,1.661,740,2.124,741,2.124,796,1.859,797,1.859,837,2.124,845,2.124,869,3.249,873,1.859,888,2.124,891,2.124,892,2.527,893,2.527,894,2.527,895,4.416,896,2.124,897,6.699,898,2.124,899,6.75,900,2.527,901,3.712,902,2.124,903,2.124,904,2.124,905,2.124,906,2.124,907,4.416,908,4.871,909,2.527,910,2.527,911,2.527,912,2.527,913,2.527,914,2.527,915,2.527,916,2.124,917,1.859,918,3.721,919,3.721,920,2.527,921,2.527,922,2.124,923,2.124,924,5.296,925,2.124,926,2.124,927,2.124,928,2.124,929,2.124,930,2.124,931,2.124,932,2.124,933,2.124,934,2.124,935,2.527,936,4.721,937,2.124,938,2.124,939,2.124,940,2.124,941,2.527,942,2.527]],["title/dependencies.html",[943,2.314,944,2.913]],["body/dependencies.html",[26,0.029,36,0.841,37,1.665,76,0.024,77,0.024,84,2.76,154,2.274,200,2.478,382,2.478,406,3.002,735,3.839,944,3.36,945,4.567,946,6.603,947,4.567,948,5.544,949,4.567,950,4.567,951,5.544,952,4.66,953,4.567,954,6.36,955,4.567,956,4.567,957,3.839,958,4.567,959,4.567,960,4.567,961,4.567,962,4.567]],["title/miscellaneous/enumerations.html",[963,1.809,964,3.328]],["body/miscellaneous/enumerations.html",[22,0.514,26,0.029,29,1.964,76,0.023,77,0.023,107,3.236,110,3.258,194,2.911,197,2.952,206,3.258,207,3.258,208,3.258,209,2.205,487,2.911,575,4.003,603,3.236,605,3.576,640,4.574,655,3.258,658,4.003,668,3.723,669,4.574,671,4.003,672,4.003,673,3.258,684,4.003,963,2.911,964,3.723,965,4.429,966,4.429,967,6.143,968,4.429,969,4.429,970,4.429,971,4.429,972,4.429,973,4.429,974,4.429,975,4.429]],["title/index.html",[22,0.32,976,2.752,977,2.752]],["body/index.html",[0,0.265,2,1.094,8,0.154,12,1.538,13,1.863,26,0.028,30,1.783,31,4.007,32,3.264,41,0.801,46,1.041,68,1.037,76,0.016,77,0.016,110,2.753,131,1.874,187,1.515,200,2.653,201,1.169,222,1.382,232,1.674,236,2.753,268,2.388,271,2.753,286,1.515,295,2.39,304,2.46,331,3.146,337,1.874,373,3.264,415,1.674,454,3.214,461,1.515,465,2.141,487,2.916,580,3.832,584,2.753,585,1.874,588,1.874,603,2.638,616,1.674,654,2.141,655,2.753,658,2.753,667,3.597,670,3.597,671,3.264,672,1.874,673,1.874,674,2.753,676,4.111,677,3.146,678,2.141,681,3.73,683,3.146,684,2.753,685,2.141,835,2.141,917,1.874,944,1.874,952,2.141,957,2.141,978,2.547,979,3.743,980,2.547,981,5.209,982,2.547,983,2.547,984,2.547,985,2.547,986,4.437,987,2.547,988,4.379,989,2.547,990,3.743,991,4.437,992,4.89,993,2.547,994,2.547,995,2.547,996,2.547,997,3.146,998,2.547,999,2.547,1000,2.547,1001,2.547,1002,2.547,1003,2.547,1004,5.209,1005,2.547,1006,2.547,1007,2.547,1008,2.547,1009,2.547,1010,2.547,1011,2.547,1012,2.547,1013,2.547,1014,2.547,1015,2.547,1016,2.547,1017,2.547,1018,2.547,1019,2.547,1020,4.437,1021,4.89,1022,4.89,1023,4.955,1024,3.743,1025,2.547,1026,2.547,1027,3.743,1028,2.547,1029,2.547,1030,2.547,1031,2.547,1032,3.743,1033,3.743,1034,2.547,1035,2.547,1036,2.547,1037,2.547,1038,2.547,1039,2.547,1040,2.547,1041,2.547,1042,3.743,1043,3.743,1044,5.209,1045,4.89,1046,2.547,1047,2.547,1048,2.547,1049,3.743,1050,4.89,1051,4.89,1052,3.743,1053,3.743,1054,5.209,1055,3.743,1056,2.547,1057,3.743,1058,2.547,1059,2.141,1060,2.547,1061,2.547,1062,2.547,1063,2.547,1064,2.547,1065,2.547,1066,2.547,1067,2.547,1068,2.547,1069,2.547,1070,3.743,1071,2.547,1072,3.146,1073,2.547,1074,3.743,1075,2.547,1076,2.547,1077,2.547,1078,3.743,1079,2.547,1080,2.547,1081,3.743,1082,2.547,1083,2.547,1084,2.547,1085,2.547,1086,2.547,1087,2.547,1088,2.547,1089,3.743,1090,2.547,1091,3.743,1092,2.547,1093,2.547,1094,2.547,1095,2.547,1096,2.547,1097,3.743,1098,2.547,1099,2.547,1100,2.547,1101,2.547,1102,2.547,1103,2.547,1104,2.547,1105,2.547,1106,2.547,1107,2.547,1108,2.547,1109,2.547,1110,2.547,1111,2.547,1112,2.547,1113,3.743,1114,2.547,1115,2.547,1116,4.437,1117,3.743,1118,2.547,1119,2.547,1120,2.547,1121,3.743,1122,2.141,1123,2.547,1124,2.141]],["title/modules.html",[1125,3.774]],["body/modules.html",[26,0.026,76,0.026,77,0.026,1125,4.471]],["title/overview.html",[1126,3.774]],["body/overview.html",[2,1.52,26,0.025,43,1.311,76,0.025,77,0.025,80,1.897,91,2.823,1126,4.373,1127,5.203,1128,5.203,1129,5.203,1130,5.203]],["title/properties.html",[23,0.509,943,2.314]],["body/properties.html",[23,0.678,26,0.027,76,0.026,77,0.026,1131,5.275,1132,5.275]],["title/miscellaneous/variables.html",[963,1.809,1133,3.328]],["body/miscellaneous/variables.html",[15,1.191,22,0.203,25,0.971,26,0.029,27,1.01,28,2.041,29,1.892,68,1.19,76,0.012,77,0.012,81,1.285,82,1.039,83,1.468,85,2.303,87,2.072,88,2.06,90,1.575,92,1.285,118,1.285,121,2.883,156,1.039,161,2.06,162,1.468,163,2.06,164,1.468,166,2.419,201,1.608,209,1.394,268,2.387,274,1.901,330,2.086,357,2.084,359,2.384,366,2.946,450,3.227,451,3.632,561,3.879,595,2.06,616,4.073,623,1.285,686,1.148,690,2.06,691,2.06,692,2.06,693,1.84,708,1.468,796,2.06,797,2.06,832,1.468,851,1.468,859,2.946,869,1.285,870,3.936,871,2.354,872,1.468,873,2.578,874,1.468,875,1.468,876,1.468,877,1.468,878,2.354,879,1.468,880,1.468,881,2.946,882,2.946,883,1.468,884,2.354,885,1.468,886,1.468,887,1.468,896,1.468,898,2.354,901,1.468,902,2.354,903,2.354,904,2.354,905,1.468,906,2.354,916,1.468,917,2.06,922,1.468,923,2.354,924,1.468,925,2.354,926,2.354,927,2.354,928,2.354,929,2.354,930,2.354,931,2.354,932,2.354,933,2.354,934,2.354,936,1.468,937,2.354,938,2.354,939,2.354,940,3.936,963,1.148,988,2.946,997,1.468,1023,1.468,1059,1.468,1072,2.946,1122,1.468,1124,1.468,1133,1.468,1134,5.865,1135,1.747,1136,1.747,1137,3.504,1138,1.747,1139,1.747,1140,2.8,1141,2.8,1142,1.747,1143,4.918,1144,5.795,1145,5.795,1146,4.387,1147,4.682,1148,1.747,1149,1.747,1150,1.747,1151,1.747,1152,1.747,1153,1.747,1154,1.747,1155,1.747,1156,1.747,1157,1.747,1158,1.747,1159,1.747,1160,1.747,1161,2.8,1162,1.747,1163,1.747,1164,1.747,1165,1.747,1166,1.747,1167,2.8,1168,1.747,1169,1.747,1170,1.747,1171,1.747,1172,1.747,1173,2.8,1174,1.747,1175,1.747,1176,1.747,1177,1.747,1178,1.747,1179,1.747,1180,1.747,1181,1.747,1182,1.747,1183,1.747,1184,2.8,1185,1.747,1186,1.747,1187,1.747,1188,1.747,1189,1.747,1190,2.8,1191,3.504,1192,1.747,1193,1.747,1194,1.747,1195,2.8,1196,1.747,1197,2.8,1198,1.747,1199,4.008,1200,1.747,1201,3.504,1202,1.747,1203,1.747,1204,1.747,1205,1.747,1206,1.747,1207,1.747,1208,1.747,1209,1.747,1210,1.747,1211,1.747,1212,4.008,1213,1.747,1214,1.747,1215,1.747,1216,1.747,1217,1.747,1218,1.747,1219,1.747,1220,1.747]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/BroadcastMessage.html":{},"interfaces/CarRentalExpenseModel.html":{},"injectables/CommunicationService.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/ExpenseBaseModel.html":{},"interfaces/FlightExpenseModel.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/HotelExpenseModel.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"interfaces/TaxiExpenseModel.html":{},"injectables/ToastService.html":{},"components/ToasterComponent.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"injectables/TripEffects.html":{},"components/TripListComponent.html":{},"interfaces/TripModel.html":{},"injectables/TripService.html":{},"interfaces/TripState.html":{},"interfaces/UserModel.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":577,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1132,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":962,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":899,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":920,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":900,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":895,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":918,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":911,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":919,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":908,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":921,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":935,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1128,"title":{},"body":{"overview.html":{}}}],["10",{"_index":1130,"title":{},"body":{"overview.html":{}}}],["12",{"_index":1127,"title":{},"body":{"overview.html":{}}}],["17.2.0",{"_index":954,"title":{},"body":{"dependencies.html":{}}}],["17.3.0",{"_index":946,"title":{},"body":{"dependencies.html":{}}}],["17.3.10",{"_index":948,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":960,"title":{},"body":{"dependencies.html":{}}}],["25",{"_index":1157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":438,"title":{},"body":{"components/SidenavComponent.html":{}}}],["3000",{"_index":473,"title":{},"body":{"injectables/ToastService.html":{}}}],["3000ms",{"_index":474,"title":{},"body":{"injectables/ToastService.html":{}}}],["4/7",{"_index":913,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":802,"title":{},"body":{"components/TripListComponent.html":{}}}],["401",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["403",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["404",{"_index":420,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["5",{"_index":1129,"title":{},"body":{"overview.html":{}}}],["5/8",{"_index":915,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["57",{"_index":912,"title":{},"body":{"coverage.html":{}}}],["6/10",{"_index":910,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":909,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":914,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":958,"title":{},"body":{"dependencies.html":{}}}],["_actions",{"_index":688,"title":{},"body":{"injectables/TripEffects.html":{}}}],["_authservice",{"_index":219,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/LoginComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["_baseurl",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TripService.html":{}}}],["_calculatetotalexpense",{"_index":536,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["_calculatetotalexpense(trip",{"_index":541,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["_clearusersession",{"_index":101,"title":{},"body":{"injectables/AuthService.html":{}}}],["_communicationservice",{"_index":352,"title":{},"body":{"components/HeaderComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["_createtoastelement",{"_index":444,"title":{},"body":{"injectables/ToastService.html":{}}}],["_createtoastelement(type",{"_index":449,"title":{},"body":{"injectables/ToastService.html":{}}}],["_el",{"_index":499,"title":{},"body":{"directives/TogglePasswordDirective.html":{}}}],["_fb",{"_index":391,"title":{},"body":{"components/LoginComponent.html":{},"components/TripDetailComponent.html":{}}}],["_getfromlocalstorage",{"_index":102,"title":{},"body":{"injectables/AuthService.html":{}}}],["_getfromlocalstorage(key",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{}}}],["_getorcreatetoastcontainer",{"_index":445,"title":{},"body":{"injectables/ToastService.html":{}}}],["_handledeletetrip",{"_index":273,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["_handlelogout",{"_index":264,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["_handlemessage",{"_index":297,"title":{},"body":{"injectables/CommunicationService.html":{}}}],["_handlemessage(message",{"_index":248,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["_handlereloadtrips",{"_index":269,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["_http",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TripService.html":{}}}],["_loadtrips",{"_index":753,"title":{},"body":{"components/TripListComponent.html":{}}}],["_ngzone",{"_index":220,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["_removefromlocalstorage",{"_index":103,"title":{},"body":{"injectables/AuthService.html":{}}}],["_removefromlocalstorage(key",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{}}}],["_route",{"_index":528,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["_router",{"_index":218,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["_scheduletoastremoval",{"_index":446,"title":{},"body":{"injectables/ToastService.html":{}}}],["_scheduletoastremoval(toastelement",{"_index":460,"title":{},"body":{"injectables/ToastService.html":{}}}],["_settolocalstorage",{"_index":104,"title":{},"body":{"injectables/AuthService.html":{}}}],["_settolocalstorage(key",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{}}}],["_setusersession",{"_index":105,"title":{},"body":{"injectables/AuthService.html":{}}}],["_setusersession(userdata",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{}}}],["_store",{"_index":217,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["_toastcontainer",{"_index":443,"title":{},"body":{"injectables/ToastService.html":{}}}],["_toasterservice",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["_token",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{}}}],["_tripservice",{"_index":689,"title":{},"body":{"injectables/TripEffects.html":{}}}],["_user",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{}}}],["access",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors",{"_index":108,"title":{},"body":{"injectables/AuthService.html":{}}}],["action",{"_index":195,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["actionhandlers",{"_index":252,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["actionhandlers[message.action",{"_index":261,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["actionreducermap",{"_index":83,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":733,"title":{},"body":{"injectables/TripEffects.html":{},"components/TripListComponent.html":{}}}],["activatedroute",{"_index":592,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["activatedroutesnapshot",{"_index":1163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actual_component",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["add",{"_index":988,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["adding",{"_index":1062,"title":{},"body":{"index.html":{}}}],["addtrip",{"_index":690,"title":{},"body":{"injectables/TripEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["addtripfailure",{"_index":925,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["addtripsuccess",{"_index":926,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["addvalidators(validators.required",{"_index":634,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["again",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["airline",{"_index":337,"title":{},"body":{"interfaces/FlightExpenseModel.html":{},"components/TripDetailComponent.html":{},"index.html":{}}}],["alert",{"_index":490,"title":{},"body":{"injectables/ToastService.html":{}}}],["allow",{"_index":1179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowed",{"_index":1008,"title":{},"body":{"index.html":{}}}],["angular",{"_index":981,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":947,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":382,"title":{},"body":{"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TripService.html":{}}}],["angular/compiler",{"_index":949,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"injectables/ToastService.html":{},"components/ToasterComponent.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"injectables/TripEffects.html":{},"components/TripListComponent.html":{},"injectables/TripService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":406,"title":{},"body":{"components/LoginComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":950,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":361,"title":{},"body":{"components/HeaderComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["angular/material/core",{"_index":602,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["angular/material/datepicker",{"_index":601,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["angular/material/dialog",{"_index":321,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/TripListComponent.html":{}}}],["angular/material/form",{"_index":597,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["angular/material/icon",{"_index":362,"title":{},"body":{"components/HeaderComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["angular/material/input",{"_index":599,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["angular/material/paginator",{"_index":792,"title":{},"body":{"components/TripListComponent.html":{}}}],["angular/material/select",{"_index":600,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["angular/material/sort",{"_index":793,"title":{},"body":{"components/TripListComponent.html":{}}}],["angular/material/table",{"_index":794,"title":{},"body":{"components/TripListComponent.html":{}}}],["angular/platform",{"_index":951,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"dependencies.html":{}}}],["api",{"_index":1072,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["api/trips",{"_index":861,"title":{},"body":{"injectables/TripService.html":{}}}],["api/users",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.ts",{"_index":1077,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":1075,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":898,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appeffects",{"_index":923,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["append",{"_index":478,"title":{},"body":{"injectables/ToastService.html":{}}}],["application",{"_index":979,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applyfilter",{"_index":754,"title":{},"body":{"components/TripListComponent.html":{}}}],["applyfilter(event",{"_index":759,"title":{},"body":{"components/TripListComponent.html":{}}}],["appropriate",{"_index":244,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["approval",{"_index":655,"title":{},"body":{"components/TripDetailComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["approve",{"_index":685,"title":{},"body":{"components/TripDetailComponent.html":{},"index.html":{}}}],["approve/cancel",{"_index":1063,"title":{},"body":{"index.html":{}}}],["approved",{"_index":658,"title":{},"body":{"components/TripDetailComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["approver",{"_index":684,"title":{},"body":{"components/TripDetailComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["approvernotes",{"_index":838,"title":{},"body":{"interfaces/TripModel.html":{}}}],["approvers",{"_index":996,"title":{},"body":{"index.html":{}}}],["appstate",{"_index":79,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{},"components/TripListComponent.html":{},"coverage.html":{}}}],["apptogglepassword",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["arrival",{"_index":680,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["arrivaldate",{"_index":587,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["arrivaldatetime",{"_index":338,"title":{},"body":{"interfaces/FlightExpenseModel.html":{}}}],["arrivallocation",{"_index":339,"title":{},"body":{"interfaces/FlightExpenseModel.html":{}}}],["assets",{"_index":1078,"title":{},"body":{"index.html":{}}}],["associated",{"_index":237,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["auth.service",{"_index":407,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth/auth.service",{"_index":202,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/HeaderComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["authentication",{"_index":992,"title":{},"body":{"index.html":{}}}],["authreq",{"_index":1174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice",{"_index":90,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice.isloggedin",{"_index":366,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["authservice.logout",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice.token",{"_index":1182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice.user",{"_index":1165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice.user?.role",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto",{"_index":480,"title":{},"body":{"injectables/ToastService.html":{}}}],["b",{"_index":1115,"title":{},"body":{"index.html":{}}}],["back",{"_index":428,"title":{},"body":{"components/NotFoundComponent.html":{},"components/TripDetailComponent.html":{}}}],["backend",{"_index":1021,"title":{},"body":{"index.html":{}}}],["base.model",{"_index":296,"title":{},"body":{"interfaces/CarRentalExpenseModel.html":{},"interfaces/FlightExpenseModel.html":{},"interfaces/HotelExpenseModel.html":{},"interfaces/TaxiExpenseModel.html":{}}}],["base.model.ts",{"_index":329,"title":{},"body":{"interfaces/ExpenseBaseModel.html":{},"coverage.html":{}}}],["based",{"_index":991,"title":{},"body":{"index.html":{}}}],["baseurl",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearer",{"_index":1181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blog:token",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["blog:user",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"components/TripDetailComponent.html":{},"interfaces/TripState.html":{}}}],["bootstrap",{"_index":1086,"title":{},"body":{"index.html":{}}}],["both",{"_index":984,"title":{},"body":{"index.html":{}}}],["branch:example",{"_index":1113,"title":{},"body":{"index.html":{}}}],["break",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["broadcast",{"_index":247,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["broadcastchannel",{"_index":213,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["broadcastchannel(this.channelname",{"_index":223,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["broadcastmessage",{"_index":193,"title":{"interfaces/BroadcastMessage.html":{}},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"coverage.html":{}}}],["browser",{"_index":952,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":1089,"title":{},"body":{"index.html":{}}}],["built",{"_index":980,"title":{},"body":{"index.html":{}}}],["businesses",{"_index":987,"title":{},"body":{"index.html":{}}}],["calls",{"_index":1073,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":902,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["canactivatechild",{"_index":903,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["canactivatefn",{"_index":1160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancel",{"_index":1009,"title":{},"body":{"index.html":{}}}],["canceled",{"_index":669,"title":{},"body":{"components/TripDetailComponent.html":{},"miscellaneous/enumerations.html":{}}}],["canload",{"_index":904,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["car",{"_index":674,"title":{},"body":{"components/TripDetailComponent.html":{},"interfaces/TripModel.html":{},"index.html":{}}}],["carname",{"_index":290,"title":{},"body":{"interfaces/CarRentalExpenseModel.html":{},"components/TripDetailComponent.html":{}}}],["carrental",{"_index":581,"title":{},"body":{"components/TripDetailComponent.html":{},"interfaces/TripModel.html":{}}}],["carrentalexpense",{"_index":659,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["carrentalexpensemodel",{"_index":284,"title":{"interfaces/CarRentalExpenseModel.html":{}},"body":{"interfaces/CarRentalExpenseModel.html":{},"interfaces/TripModel.html":{},"coverage.html":{}}}],["case",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catcherror",{"_index":737,"title":{},"body":{"injectables/TripEffects.html":{}}}],["catcherror((error",{"_index":706,"title":{},"body":{"injectables/TripEffects.html":{}}}],["categorized",{"_index":989,"title":{},"body":{"index.html":{}}}],["category",{"_index":1000,"title":{},"body":{"index.html":{}}}],["cd",{"_index":1048,"title":{},"body":{"index.html":{}}}],["changedetection",{"_index":375,"title":{},"body":{"components/LayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{}}}],["changedetectionstrategy",{"_index":383,"title":{},"body":{"components/LayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":376,"title":{},"body":{"components/LayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{}}}],["changes:example",{"_index":1118,"title":{},"body":{"index.html":{}}}],["channel",{"_index":212,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["channelname",{"_index":214,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["check",{"_index":677,"title":{},"body":{"components/TripDetailComponent.html":{},"index.html":{}}}],["checkindate",{"_index":370,"title":{},"body":{"interfaces/HotelExpenseModel.html":{},"components/TripDetailComponent.html":{}}}],["checkout",{"_index":1114,"title":{},"body":{"index.html":{}}}],["checkoutdate",{"_index":371,"title":{},"body":{"interfaces/HotelExpenseModel.html":{},"components/TripDetailComponent.html":{}}}],["class",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"injectables/ToastService.html":{},"components/ToasterComponent.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"injectables/TripEffects.html":{},"components/TripListComponent.html":{},"injectables/TripService.html":{}}}],["cleans",{"_index":277,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["cli",{"_index":1040,"title":{},"body":{"index.html":{}}}],["click",{"_index":502,"title":{},"body":{"directives/TogglePasswordDirective.html":{}}}],["clone",{"_index":1042,"title":{},"body":{"index.html":{}}}],["closest('div",{"_index":512,"title":{},"body":{"directives/TogglePasswordDirective.html":{}}}],["codebase",{"_index":1098,"title":{},"body":{"index.html":{}}}],["comment",{"_index":578,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["commit",{"_index":1117,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":378,"title":{},"body":{"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["communicationactions",{"_index":197,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/HeaderComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["communicationactions.delete_trip",{"_index":258,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/TripListComponent.html":{}}}],["communicationactions.logout",{"_index":254,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["communicationactions.reload_trips",{"_index":256,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["communicationservice",{"_index":210,"title":{"injectables/CommunicationService.html":{}},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/HeaderComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"coverage.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"index.html":{},"overview.html":{}}}],["configurations",{"_index":1082,"title":{},"body":{"index.html":{}}}],["confirm",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["confirmdialogcomponent",{"_index":48,"title":{"components/ConfirmDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"coverage.html":{}}}],["connect",{"_index":1102,"title":{},"body":{"index.html":{}}}],["console.error",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.error('sendmessage",{"_index":239,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["console.error('session",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('http",{"_index":1185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.warn('received",{"_index":250,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["console.warn(`unhandled",{"_index":262,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["const",{"_index":87,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"injectables/ToastService.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"interfaces/TripState.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":216,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"injectables/ToastService.html":{}}}],["constructor(_store",{"_index":299,"title":{},"body":{"injectables/CommunicationService.html":{}}}],["container",{"_index":459,"title":{},"body":{"injectables/ToastService.html":{}}}],["container.classname",{"_index":485,"title":{},"body":{"injectables/ToastService.html":{}}}],["container.id",{"_index":484,"title":{},"body":{"injectables/ToastService.html":{}}}],["contributing",{"_index":1107,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":1108,"title":{},"body":{"index.html":{}}}],["control",{"_index":1059,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["core/services/communication.service",{"_index":608,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["core/services/toaster.service",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["core/services/trip.service",{"_index":739,"title":{},"body":{"injectables/TripEffects.html":{}}}],["coverage",{"_index":891,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":454,"title":{},"body":{"injectables/ToastService.html":{},"components/TripListComponent.html":{},"injectables/TripService.html":{},"index.html":{}}}],["createaction",{"_index":1144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[trip",{"_index":1148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["created",{"_index":648,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["createdby",{"_index":839,"title":{},"body":{"interfaces/TripModel.html":{}}}],["createeffect",{"_index":698,"title":{},"body":{"injectables/TripEffects.html":{}}}],["createfeatureselector('trip",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createreducer",{"_index":872,"title":{},"body":{"interfaces/TripState.html":{},"miscellaneous/variables.html":{}}}],["createselector",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectalltrips",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selecttripstate",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createtrip",{"_index":846,"title":{},"body":{"injectables/TripService.html":{}}}],["createtrip(trip",{"_index":849,"title":{},"body":{"injectables/TripService.html":{}}}],["creating",{"_index":1061,"title":{},"body":{"index.html":{}}}],["css",{"_index":1016,"title":{},"body":{"index.html":{}}}],["daisyui",{"_index":1017,"title":{},"body":{"index.html":{}}}],["dashboard",{"_index":324,"title":{},"body":{"components/DashboardComponent.html":{},"components/SidenavComponent.html":{}}}],["dashboard'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["dashboard.component.html",{"_index":325,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":326,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":51,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"coverage.html":{}}}],["data",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"injectables/TripService.html":{},"index.html":{}}}],["database",{"_index":1104,"title":{},"body":{"index.html":{}}}],["datasource",{"_index":748,"title":{},"body":{"components/TripListComponent.html":{}}}],["date",{"_index":295,"title":{},"body":{"interfaces/CarRentalExpenseModel.html":{},"interfaces/FlightExpenseModel.html":{},"interfaces/HotelExpenseModel.html":{},"interfaces/TaxiExpenseModel.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"interfaces/TripModel.html":{},"index.html":{}}}],["datetime",{"_index":441,"title":{},"body":{"interfaces/TaxiExpenseModel.html":{}}}],["dd/mm/yyyy",{"_index":831,"title":{},"body":{"components/TripListComponent.html":{}}}],["decorators",{"_index":504,"title":{},"body":{"directives/TogglePasswordDirective.html":{},"components/TripListComponent.html":{}}}],["default",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CommunicationService.html":{},"components/ConfirmDialogComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/ToastService.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"injectables/TripEffects.html":{},"components/TripListComponent.html":{},"injectables/TripService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CommunicationService.html":{},"components/ConfirmDialogComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/ToastService.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"injectables/TripEffects.html":{},"components/TripListComponent.html":{},"injectables/TripService.html":{}}}],["delete",{"_index":274,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/ConfirmDialogComponent.html":{},"components/TripListComponent.html":{},"injectables/TripService.html":{},"miscellaneous/variables.html":{}}}],["delete_trip",{"_index":208,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"miscellaneous/enumerations.html":{}}}],["deleted",{"_index":821,"title":{},"body":{"components/TripListComponent.html":{}}}],["deletetrip",{"_index":209,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"injectables/TripEffects.html":{},"injectables/TripService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["deletetrip(id",{"_index":852,"title":{},"body":{"injectables/TripService.html":{}}}],["deletetripfailure",{"_index":927,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["deletetripsuccess",{"_index":928,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["demo",{"_index":978,"title":{},"body":{"index.html":{}}}],["departure",{"_index":679,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["departure/arrival",{"_index":1003,"title":{},"body":{"index.html":{}}}],["departuredate",{"_index":586,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["departuredatetime",{"_index":340,"title":{},"body":{"interfaces/FlightExpenseModel.html":{}}}],["departurelocation",{"_index":341,"title":{},"body":{"interfaces/FlightExpenseModel.html":{}}}],["dependencies",{"_index":944,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["description",{"_index":304,"title":{},"body":{"injectables/CommunicationService.html":{},"injectables/ToastService.html":{},"injectables/TripService.html":{},"index.html":{}}}],["destroyed",{"_index":281,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["detail",{"_index":520,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["detail'},{'name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["detail.component.html",{"_index":526,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["detail.component.scss",{"_index":527,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["detail.component.ts",{"_index":518,"title":{},"body":{"components/TripDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:109",{"_index":544,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["detail.component.ts:153",{"_index":548,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["detail.component.ts:180",{"_index":547,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["detail.component.ts:207",{"_index":545,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["detail.component.ts:229",{"_index":546,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["detail.component.ts:233",{"_index":543,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["detail.component.ts:49",{"_index":570,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["detail.component.ts:50",{"_index":591,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["detail.component.ts:52",{"_index":553,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["detail.component.ts:53",{"_index":556,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["detail.component.ts:54",{"_index":551,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["detail.component.ts:55",{"_index":557,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["detail.component.ts:56",{"_index":554,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["detail.component.ts:57",{"_index":549,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["detail.component.ts:58",{"_index":550,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["detail.component.ts:60",{"_index":560,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["detail.component.ts:61",{"_index":566,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["detail.component.ts:62",{"_index":564,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["detail.component.ts:63",{"_index":568,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["detail.component.ts:64",{"_index":567,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["detail.component.ts:65",{"_index":562,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["detail.component.ts:67",{"_index":590,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["detail/trip",{"_index":517,"title":{},"body":{"components/TripDetailComponent.html":{},"coverage.html":{}}}],["details",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"components/TripDetailComponent.html":{}}}],["development",{"_index":1053,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":957,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["dialog",{"_index":313,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/TripListComponent.html":{}}}],["dialog'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["dialog.component",{"_index":799,"title":{},"body":{"components/TripListComponent.html":{}}}],["dialog.component.html",{"_index":315,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.scss",{"_index":316,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts",{"_index":312,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:12",{"_index":319,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog/confirm",{"_index":311,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/TripListComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":317,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/TripListComponent.html":{}}}],["different",{"_index":994,"title":{},"body":{"index.html":{}}}],["directive",{"_index":43,"title":{"directives/TogglePasswordDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["disabled",{"_index":574,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["dispatch",{"_index":270,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["display",{"_index":456,"title":{},"body":{"injectables/ToastService.html":{}}}],["displayedcolumns",{"_index":749,"title":{},"body":{"components/TripListComponent.html":{}}}],["document.body.appendchild(container",{"_index":488,"title":{},"body":{"injectables/ToastService.html":{}}}],["document.createelement('div",{"_index":483,"title":{},"body":{"injectables/ToastService.html":{}}}],["document.getelementbyid('toast",{"_index":482,"title":{},"body":{"injectables/ToastService.html":{}}}],["documentation",{"_index":892,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":425,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["doesn\\'t",{"_index":431,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["draft",{"_index":640,"title":{},"body":{"components/TripDetailComponent.html":{},"miscellaneous/enumerations.html":{}}}],["drawer",{"_index":436,"title":{},"body":{"components/SidenavComponent.html":{}}}],["drop",{"_index":675,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["dropoffdate",{"_index":583,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["dropoffdatetime",{"_index":291,"title":{},"body":{"interfaces/CarRentalExpenseModel.html":{}}}],["dropofflocation",{"_index":292,"title":{},"body":{"interfaces/CarRentalExpenseModel.html":{},"components/TripDetailComponent.html":{}}}],["duration",{"_index":461,"title":{},"body":{"injectables/ToastService.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"interfaces/TripModel.html":{},"index.html":{}}}],["dynamic",{"_index":953,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":236,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"index.html":{}}}],["edit",{"_index":835,"title":{},"body":{"components/TripListComponent.html":{},"index.html":{}}}],["effects",{"_index":1018,"title":{},"body":{"index.html":{}}}],["element",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"injectables/ToastService.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["elementref",{"_index":508,"title":{},"body":{"directives/TogglePasswordDirective.html":{}}}],["email",{"_index":889,"title":{},"body":{"interfaces/UserModel.html":{}}}],["end",{"_index":487,"title":{},"body":{"injectables/ToastService.html":{},"components/TripDetailComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["end_user",{"_index":973,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enddate",{"_index":572,"title":{},"body":{"components/TripDetailComponent.html":{},"interfaces/TripModel.html":{}}}],["ensure",{"_index":1035,"title":{},"body":{"index.html":{}}}],["entity",{"_index":1019,"title":{},"body":{"index.html":{}}}],["enum",{"_index":205,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["enumerations",{"_index":964,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/finance",{"_index":841,"title":{},"body":{"interfaces/TripModel.html":{}}}],["enums/role.enum",{"_index":890,"title":{},"body":{"interfaces/UserModel.html":{}}}],["enums/trip",{"_index":842,"title":{},"body":{"interfaces/TripModel.html":{}}}],["environment",{"_index":917,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environments",{"_index":1081,"title":{},"body":{"index.html":{}}}],["error",{"_index":451,"title":{},"body":{"injectables/ToastService.html":{},"injectables/TripEffects.html":{},"interfaces/TripState.html":{},"miscellaneous/variables.html":{}}}],["error.message",{"_index":708,"title":{},"body":{"injectables/TripEffects.html":{},"miscellaneous/variables.html":{}}}],["error.status",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eslint",{"_index":1026,"title":{},"body":{"index.html":{}}}],["event",{"_index":760,"title":{},"body":{"components/TripListComponent.html":{}}}],["event.target",{"_index":823,"title":{},"body":{"components/TripListComponent.html":{}}}],["example",{"_index":1044,"title":{},"body":{"index.html":{}}}],["exist",{"_index":426,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["existing",{"_index":860,"title":{},"body":{"injectables/TripService.html":{}}}],["expense",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CarRentalExpenseModel.html":{},"interfaces/FlightExpenseModel.html":{},"components/HeaderComponent.html":{},"interfaces/HotelExpenseModel.html":{},"interfaces/TaxiExpenseModel.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"interfaces/TripModel.html":{},"coverage.html":{},"index.html":{}}}],["expense.model",{"_index":843,"title":{},"body":{"interfaces/TripModel.html":{}}}],["expense.model.ts",{"_index":287,"title":{},"body":{"interfaces/CarRentalExpenseModel.html":{},"interfaces/FlightExpenseModel.html":{},"interfaces/TaxiExpenseModel.html":{},"coverage.html":{}}}],["expensebasemodel",{"_index":289,"title":{"interfaces/ExpenseBaseModel.html":{}},"body":{"interfaces/CarRentalExpenseModel.html":{},"interfaces/ExpenseBaseModel.html":{},"interfaces/FlightExpenseModel.html":{},"interfaces/HotelExpenseModel.html":{},"interfaces/TaxiExpenseModel.html":{},"coverage.html":{}}}],["expenses",{"_index":580,"title":{},"body":{"components/TripDetailComponent.html":{},"interfaces/TripModel.html":{},"index.html":{}}}],["expired",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/BroadcastMessage.html":{},"interfaces/CarRentalExpenseModel.html":{},"injectables/CommunicationService.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/ExpenseBaseModel.html":{},"interfaces/FlightExpenseModel.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/HotelExpenseModel.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"interfaces/TaxiExpenseModel.html":{},"injectables/ToastService.html":{},"components/ToasterComponent.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"injectables/TripEffects.html":{},"components/TripListComponent.html":{},"interfaces/TripModel.html":{},"injectables/TripService.html":{},"interfaces/TripState.html":{},"interfaces/UserModel.html":{}}}],["extends",{"_index":288,"title":{},"body":{"interfaces/CarRentalExpenseModel.html":{},"interfaces/FlightExpenseModel.html":{},"interfaces/HotelExpenseModel.html":{},"interfaces/TaxiExpenseModel.html":{}}}],["failure",{"_index":1146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":561,"title":{},"body":{"components/TripDetailComponent.html":{},"interfaces/TripState.html":{},"miscellaneous/variables.html":{}}}],["feature",{"_index":1116,"title":{},"body":{"index.html":{}}}],["features",{"_index":998,"title":{},"body":{"index.html":{}}}],["field",{"_index":598,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/BroadcastMessage.html":{},"interfaces/CarRentalExpenseModel.html":{},"injectables/CommunicationService.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/ExpenseBaseModel.html":{},"interfaces/FlightExpenseModel.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/HotelExpenseModel.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"interfaces/TaxiExpenseModel.html":{},"injectables/ToastService.html":{},"components/ToasterComponent.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"injectables/TripEffects.html":{},"components/TripListComponent.html":{},"interfaces/TripModel.html":{},"injectables/TripService.html":{},"interfaces/TripState.html":{},"interfaces/UserModel.html":{},"coverage.html":{},"index.html":{}}}],["filter",{"_index":593,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["filter((state",{"_index":615,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["filtervalue",{"_index":822,"title":{},"body":{"components/TripListComponent.html":{}}}],["filtervalue.trim().tolowercase",{"_index":826,"title":{},"body":{"components/TripListComponent.html":{}}}],["finance",{"_index":671,"title":{},"body":{"components/TripDetailComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["financestatus",{"_index":575,"title":{},"body":{"components/TripDetailComponent.html":{},"interfaces/TripModel.html":{},"miscellaneous/enumerations.html":{}}}],["flight",{"_index":585,"title":{},"body":{"components/TripDetailComponent.html":{},"interfaces/TripModel.html":{},"index.html":{}}}],["flightexpense",{"_index":663,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["flightexpensemodel",{"_index":335,"title":{"interfaces/FlightExpenseModel.html":{}},"body":{"interfaces/FlightExpenseModel.html":{},"interfaces/TripModel.html":{},"coverage.html":{}}}],["folder",{"_index":1066,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1110,"title":{},"body":{"index.html":{}}}],["following",{"_index":1036,"title":{},"body":{"index.html":{}}}],["footer",{"_index":343,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["footer.component.html",{"_index":344,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":345,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":386,"title":{},"body":{"components/LayoutComponent.html":{}}}],["footercomponent",{"_index":53,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"coverage.html":{}}}],["fork",{"_index":1112,"title":{},"body":{"index.html":{}}}],["form",{"_index":392,"title":{},"body":{"components/LoginComponent.html":{},"components/TripDetailComponent.html":{}}}],["format",{"_index":1097,"title":{},"body":{"index.html":{}}}],["formatting",{"_index":1025,"title":{},"body":{"index.html":{}}}],["formbuilder",{"_index":404,"title":{},"body":{"components/LoginComponent.html":{},"components/TripDetailComponent.html":{}}}],["formgroup",{"_index":399,"title":{},"body":{"components/LoginComponent.html":{},"components/TripDetailComponent.html":{}}}],["found",{"_index":419,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found'},{'name",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["found.component.ts",{"_index":418,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found/not",{"_index":417,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["frontend",{"_index":1013,"title":{},"body":{"index.html":{}}}],["full",{"_index":1058,"title":{},"body":{"index.html":{}}}],["functionalities",{"_index":995,"title":{},"body":{"index.html":{}}}],["further",{"_index":1006,"title":{},"body":{"index.html":{}}}],["general",{"_index":985,"title":{},"body":{"index.html":{}}}],["get('financestatus",{"_index":633,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["get(`${this._baseurl}?name=${user.name}&password=${user.password",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["getisloggedin",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["getting",{"_index":976,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettripbyid",{"_index":847,"title":{},"body":{"injectables/TripService.html":{}}}],["gettripbyid(id",{"_index":854,"title":{},"body":{"injectables/TripService.html":{}}}],["gettrips",{"_index":848,"title":{},"body":{"injectables/TripService.html":{}}}],["getuser",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["git",{"_index":1045,"title":{},"body":{"index.html":{}}}],["go",{"_index":427,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["handler",{"_index":260,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["handles",{"_index":242,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["header",{"_index":347,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["header.component.html",{"_index":350,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":351,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":385,"title":{},"body":{"components/LayoutComponent.html":{}}}],["headercomponent",{"_index":55,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"coverage.html":{}}}],["headers",{"_index":1176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["home",{"_index":429,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["hostlistener",{"_index":509,"title":{},"body":{"directives/TogglePasswordDirective.html":{}}}],["hostlistener('click",{"_index":505,"title":{},"body":{"directives/TogglePasswordDirective.html":{}}}],["hostlisteners",{"_index":501,"title":{},"body":{"directives/TogglePasswordDirective.html":{}}}],["hotel",{"_index":584,"title":{},"body":{"components/TripDetailComponent.html":{},"interfaces/TripModel.html":{},"index.html":{}}}],["hotelexpense",{"_index":661,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["hotelexpensemodel",{"_index":367,"title":{"interfaces/HotelExpenseModel.html":{}},"body":{"interfaces/HotelExpenseModel.html":{},"interfaces/TripModel.html":{},"coverage.html":{}}}],["hotelname",{"_index":372,"title":{},"body":{"interfaces/HotelExpenseModel.html":{},"components/TripDetailComponent.html":{}}}],["html",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"index.html":{}}}],["htmlelement",{"_index":457,"title":{},"body":{"injectables/ToastService.html":{}}}],["htmlinputelement).value",{"_index":824,"title":{},"body":{"components/TripListComponent.html":{}}}],["http",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:3000",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1056,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TripService.html":{}}}],["httperrorresponse",{"_index":1188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpinterceptorfn",{"_index":1171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpresponsehandlerinterceptor",{"_index":906,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["https://github.com/tom2132t/expense",{"_index":1046,"title":{},"body":{"index.html":{}}}],["husky",{"_index":1028,"title":{},"body":{"index.html":{}}}],["id",{"_index":330,"title":{},"body":{"interfaces/ExpenseBaseModel.html":{},"components/TripDetailComponent.html":{},"injectables/TripEffects.html":{},"components/TripListComponent.html":{},"interfaces/TripModel.html":{},"injectables/TripService.html":{},"interfaces/TripState.html":{},"interfaces/UserModel.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["images",{"_index":1080,"title":{},"body":{"index.html":{}}}],["implements",{"_index":211,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["import",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/BroadcastMessage.html":{},"interfaces/CarRentalExpenseModel.html":{},"injectables/CommunicationService.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FlightExpenseModel.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/HotelExpenseModel.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"interfaces/TaxiExpenseModel.html":{},"injectables/ToastService.html":{},"components/ToasterComponent.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"injectables/TripEffects.html":{},"components/TripListComponent.html":{},"interfaces/TripModel.html":{},"injectables/TripService.html":{},"interfaces/TripState.html":{},"interfaces/UserModel.html":{}}}],["imports",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["in/check",{"_index":1002,"title":{},"body":{"index.html":{}}}],["in_proccess",{"_index":971,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["incoming",{"_index":225,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/BroadcastMessage.html":{},"interfaces/CarRentalExpenseModel.html":{},"injectables/CommunicationService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ExpenseBaseModel.html":{},"interfaces/FlightExpenseModel.html":{},"components/HeaderComponent.html":{},"interfaces/HotelExpenseModel.html":{},"components/LoginComponent.html":{},"interfaces/TaxiExpenseModel.html":{},"injectables/ToastService.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"injectables/TripEffects.html":{},"components/TripListComponent.html":{},"interfaces/TripModel.html":{},"injectables/TripService.html":{},"interfaces/TripState.html":{},"interfaces/UserModel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":1083,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/BroadcastMessage.html":{},"interfaces/CarRentalExpenseModel.html":{},"injectables/CommunicationService.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/ExpenseBaseModel.html":{},"interfaces/FlightExpenseModel.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/HotelExpenseModel.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"interfaces/TaxiExpenseModel.html":{},"injectables/ToastService.html":{},"components/ToasterComponent.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"injectables/TripEffects.html":{},"components/TripListComponent.html":{},"interfaces/TripModel.html":{},"injectables/TripService.html":{},"interfaces/TripState.html":{},"interfaces/UserModel.html":{}}}],["initialstate",{"_index":873,"title":{},"body":{"interfaces/TripState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"injectables/TripEffects.html":{},"components/TripListComponent.html":{},"injectables/TripService.html":{}}}],["inject(actions",{"_index":694,"title":{},"body":{"injectables/TripEffects.html":{}}}],["inject(activatedroute",{"_index":552,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["inject(authservice",{"_index":359,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(communicationservice",{"_index":355,"title":{},"body":{"components/HeaderComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["inject(elementref",{"_index":506,"title":{},"body":{"directives/TogglePasswordDirective.html":{}}}],["inject(formbuilder",{"_index":396,"title":{},"body":{"components/LoginComponent.html":{},"components/TripDetailComponent.html":{}}}],["inject(httpclient",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TripService.html":{}}}],["inject(matdialog",{"_index":775,"title":{},"body":{"components/TripListComponent.html":{}}}],["inject(matdialogref",{"_index":318,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["inject(router",{"_index":357,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(store",{"_index":555,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["inject(toastservice",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["inject(tripservice",{"_index":696,"title":{},"body":{"injectables/TripEffects.html":{}}}],["injectable",{"_index":89,"title":{"injectables/AuthService.html":{},"injectables/CommunicationService.html":{},"injectables/ToastService.html":{},"injectables/TripEffects.html":{},"injectables/TripService.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"injectables/ToastService.html":{},"injectables/TripEffects.html":{},"injectables/TripService.html":{},"coverage.html":{}}}],["injectables",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommunicationService.html":{},"injectables/ToastService.html":{},"injectables/TripEffects.html":{},"injectables/TripService.html":{},"overview.html":{}}}],["inputelement",{"_index":510,"title":{},"body":{"directives/TogglePasswordDirective.html":{}}}],["inputelement.type",{"_index":514,"title":{},"body":{"directives/TogglePasswordDirective.html":{}}}],["install",{"_index":1049,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1033,"title":{},"body":{"index.html":{}}}],["installed",{"_index":1037,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":1187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interface",{"_index":78,"title":{"interfaces/AppState.html":{},"interfaces/BroadcastMessage.html":{},"interfaces/CarRentalExpenseModel.html":{},"interfaces/ExpenseBaseModel.html":{},"interfaces/FlightExpenseModel.html":{},"interfaces/HotelExpenseModel.html":{},"interfaces/TaxiExpenseModel.html":{},"interfaces/TripModel.html":{},"interfaces/TripState.html":{},"interfaces/UserModel.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/BroadcastMessage.html":{},"interfaces/CarRentalExpenseModel.html":{},"injectables/CommunicationService.html":{},"interfaces/ExpenseBaseModel.html":{},"interfaces/FlightExpenseModel.html":{},"interfaces/HotelExpenseModel.html":{},"interfaces/TaxiExpenseModel.html":{},"interfaces/TripModel.html":{},"interfaces/TripState.html":{},"interfaces/UserModel.html":{},"coverage.html":{}}}],["interfaces",{"_index":80,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/BroadcastMessage.html":{},"interfaces/CarRentalExpenseModel.html":{},"interfaces/ExpenseBaseModel.html":{},"interfaces/FlightExpenseModel.html":{},"interfaces/HotelExpenseModel.html":{},"interfaces/TaxiExpenseModel.html":{},"interfaces/TripModel.html":{},"interfaces/TripState.html":{},"interfaces/UserModel.html":{},"overview.html":{}}}],["invalid",{"_index":251,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["isapprover",{"_index":529,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["isdraft",{"_index":530,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["isenduser",{"_index":531,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["isfinance",{"_index":750,"title":{},"body":{"components/TripListComponent.html":{}}}],["isfinancer",{"_index":532,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["isloggedin",{"_index":111,"title":{},"body":{"injectables/AuthService.html":{}}}],["issues",{"_index":1096,"title":{},"body":{"index.html":{}}}],["istripapproved",{"_index":533,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["istripsentforapproval",{"_index":534,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["jasmine",{"_index":1031,"title":{},"body":{"index.html":{}}}],["json",{"_index":1022,"title":{},"body":{"index.html":{}}}],["json.parse(data",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(value",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["karma",{"_index":1030,"title":{},"body":{"index.html":{}}}],["key",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{}}}],["later",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["layout",{"_index":377,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["layout.component.html",{"_index":380,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout.component.scss",{"_index":381,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layoutcomponent",{"_index":57,"title":{"components/LayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"coverage.html":{}}}],["legend",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["limitations",{"_index":1099,"title":{},"body":{"index.html":{}}}],["lint",{"_index":1095,"title":{},"body":{"index.html":{}}}],["linting",{"_index":1024,"title":{},"body":{"index.html":{}}}],["list",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["list.component.html",{"_index":747,"title":{},"body":{"components/TripListComponent.html":{}}}],["list.component.scss",{"_index":746,"title":{},"body":{"components/TripListComponent.html":{}}}],["list.component.ts",{"_index":741,"title":{},"body":{"components/TripListComponent.html":{},"coverage.html":{}}}],["list.component.ts:106",{"_index":766,"title":{},"body":{"components/TripListComponent.html":{}}}],["list.component.ts:110",{"_index":764,"title":{},"body":{"components/TripListComponent.html":{}}}],["list.component.ts:126",{"_index":761,"title":{},"body":{"components/TripListComponent.html":{}}}],["list.component.ts:135",{"_index":758,"title":{},"body":{"components/TripListComponent.html":{}}}],["list.component.ts:51",{"_index":784,"title":{},"body":{"components/TripListComponent.html":{}}}],["list.component.ts:52",{"_index":787,"title":{},"body":{"components/TripListComponent.html":{}}}],["list.component.ts:54",{"_index":768,"title":{},"body":{"components/TripListComponent.html":{}}}],["list.component.ts:55",{"_index":771,"title":{},"body":{"components/TripListComponent.html":{}}}],["list.component.ts:56",{"_index":772,"title":{},"body":{"components/TripListComponent.html":{}}}],["list.component.ts:57",{"_index":770,"title":{},"body":{"components/TripListComponent.html":{}}}],["list.component.ts:58",{"_index":769,"title":{},"body":{"components/TripListComponent.html":{}}}],["list.component.ts:60",{"_index":780,"title":{},"body":{"components/TripListComponent.html":{}}}],["list.component.ts:61",{"_index":779,"title":{},"body":{"components/TripListComponent.html":{}}}],["list.component.ts:62",{"_index":781,"title":{},"body":{"components/TripListComponent.html":{}}}],["list.component.ts:64",{"_index":778,"title":{},"body":{"components/TripListComponent.html":{}}}],["list.component.ts:73",{"_index":774,"title":{},"body":{"components/TripListComponent.html":{}}}],["list.component.ts:75",{"_index":788,"title":{},"body":{"components/TripListComponent.html":{}}}],["list.component.ts:76",{"_index":789,"title":{},"body":{"components/TripListComponent.html":{}}}],["list.component.ts:77",{"_index":777,"title":{},"body":{"components/TripListComponent.html":{}}}],["list.component.ts:79",{"_index":776,"title":{},"body":{"components/TripListComponent.html":{}}}],["list.component.ts:81",{"_index":767,"title":{},"body":{"components/TripListComponent.html":{}}}],["list.component.ts:87",{"_index":762,"title":{},"body":{"components/TripListComponent.html":{}}}],["list/trip",{"_index":740,"title":{},"body":{"components/TripListComponent.html":{},"coverage.html":{}}}],["listen",{"_index":224,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["literal",{"_index":840,"title":{},"body":{"interfaces/TripModel.html":{}}}],["live",{"_index":1103,"title":{},"body":{"index.html":{}}}],["load",{"_index":1147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loading",{"_index":870,"title":{},"body":{"interfaces/TripState.html":{},"miscellaneous/variables.html":{}}}],["loadtripbyid",{"_index":691,"title":{},"body":{"injectables/TripEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadtripbyidfailure",{"_index":929,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadtripbyidsuccess",{"_index":930,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadtrips",{"_index":692,"title":{},"body":{"injectables/TripEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadtripsfailure",{"_index":931,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadtripssuccess",{"_index":932,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["localstorage.getitem(key",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(key",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(key",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["location",{"_index":373,"title":{},"body":{"interfaces/HotelExpenseModel.html":{},"components/TripDetailComponent.html":{},"index.html":{}}}],["log",{"_index":1196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logged_user",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logged_user_token",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logic",{"_index":245,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["login",{"_index":106,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["login(this.form.value",{"_index":412,"title":{},"body":{"components/LoginComponent.html":{}}}],["login(user",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":389,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":390,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":59,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"coverage.html":{}}}],["logonly",{"_index":1158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":107,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/HeaderComponent.html":{},"miscellaneous/enumerations.html":{}}}],["looking",{"_index":424,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["m",{"_index":1119,"title":{},"body":{"index.html":{}}}],["main",{"_index":1084,"title":{},"body":{"index.html":{}}}],["main.ts",{"_index":1085,"title":{},"body":{"index.html":{}}}],["manage",{"_index":1064,"title":{},"body":{"index.html":{}}}],["management",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["map",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TripEffects.html":{}}}],["map((newtrip",{"_index":703,"title":{},"body":{"injectables/TripEffects.html":{}}}],["map((trip",{"_index":717,"title":{},"body":{"injectables/TripEffects.html":{}}}],["map((trips",{"_index":723,"title":{},"body":{"injectables/TripEffects.html":{}}}],["map((users",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["mark",{"_index":1010,"title":{},"body":{"index.html":{}}}],["matbuttonmodule",{"_index":348,"title":{},"body":{"components/HeaderComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["matching",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/BroadcastMessage.html":{},"interfaces/CarRentalExpenseModel.html":{},"injectables/CommunicationService.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/ExpenseBaseModel.html":{},"interfaces/FlightExpenseModel.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/HotelExpenseModel.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"interfaces/TaxiExpenseModel.html":{},"injectables/ToastService.html":{},"components/ToasterComponent.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"injectables/TripEffects.html":{},"components/TripListComponent.html":{},"interfaces/TripModel.html":{},"injectables/TripService.html":{},"interfaces/TripState.html":{},"interfaces/UserModel.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":524,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["matdialog",{"_index":791,"title":{},"body":{"components/TripListComponent.html":{}}}],["matdialogmodule",{"_index":314,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["matdialogref",{"_index":320,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/TripListComponent.html":{}}}],["material",{"_index":1014,"title":{},"body":{"index.html":{}}}],["matformfieldmodule",{"_index":521,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["maticonmodule",{"_index":349,"title":{},"body":{"components/HeaderComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["matinputmodule",{"_index":522,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["matnativedatemodule",{"_index":525,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["matpaginator",{"_index":782,"title":{},"body":{"components/TripListComponent.html":{}}}],["matpaginatormodule",{"_index":743,"title":{},"body":{"components/TripListComponent.html":{}}}],["matselectmodule",{"_index":523,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["matsort",{"_index":785,"title":{},"body":{"components/TripListComponent.html":{}}}],["matsortmodule",{"_index":744,"title":{},"body":{"components/TripListComponent.html":{}}}],["mattabledatasource",{"_index":773,"title":{},"body":{"components/TripListComponent.html":{}}}],["mattabledatasource(res",{"_index":809,"title":{},"body":{"components/TripListComponent.html":{}}}],["mattablemodule",{"_index":742,"title":{},"body":{"components/TripListComponent.html":{}}}],["maxage",{"_index":1156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menu",{"_index":437,"title":{},"body":{"components/SidenavComponent.html":{}}}],["mergemap",{"_index":701,"title":{},"body":{"injectables/TripEffects.html":{}}}],["message",{"_index":228,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"injectables/ToastService.html":{}}}],["message.action",{"_index":249,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["message.payload",{"_index":263,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["messages",{"_index":226,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["methods",{"_index":100,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommunicationService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/ToastService.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"injectables/TripService.html":{}}}],["milliseconds",{"_index":468,"title":{},"body":{"injectables/ToastService.html":{}}}],["miscellaneous",{"_index":963,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":1020,"title":{},"body":{"index.html":{}}}],["model",{"_index":844,"title":{},"body":{"interfaces/TripModel.html":{}}}],["model.ts",{"_index":369,"title":{},"body":{"interfaces/HotelExpenseModel.html":{},"coverage.html":{}}}],["models",{"_index":1074,"title":{},"body":{"index.html":{}}}],["modifications",{"_index":1007,"title":{},"body":{"index.html":{}}}],["module",{"_index":1076,"title":{},"body":{"index.html":{}}}],["modules",{"_index":1125,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CommunicationService.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"injectables/ToastService.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"interfaces/TripModel.html":{},"injectables/TripService.html":{},"interfaces/UserModel.html":{},"index.html":{}}}],["navigate",{"_index":275,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["new",{"_index":222,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/TripListComponent.html":{},"injectables/TripService.html":{},"coverage.html":{},"index.html":{}}}],["newtrip",{"_index":705,"title":{},"body":{"injectables/TripEffects.html":{}}}],["next",{"_index":1173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(authreq).pipe",{"_index":1183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":1054,"title":{},"body":{"index.html":{}}}],["ngondestroy",{"_index":282,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["ngoninit",{"_index":537,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["ngrx",{"_index":271,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"index.html":{}}}],["ngrx/effects",{"_index":735,"title":{},"body":{"injectables/TripEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":955,"title":{},"body":{"dependencies.html":{}}}],["ngrx/router",{"_index":956,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":84,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"interfaces/TripState.html":{},"dependencies.html":{}}}],["ngzone",{"_index":198,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["node.js",{"_index":1038,"title":{},"body":{"index.html":{}}}],["notes",{"_index":331,"title":{},"body":{"interfaces/ExpenseBaseModel.html":{},"index.html":{}}}],["notfoundcomponent",{"_index":61,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"coverage.html":{}}}],["notification",{"_index":472,"title":{},"body":{"injectables/ToastService.html":{}}}],["npm",{"_index":1050,"title":{},"body":{"index.html":{}}}],["null",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{},"components/TripListComponent.html":{},"interfaces/TripState.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":334,"title":{},"body":{"interfaces/ExpenseBaseModel.html":{},"injectables/ToastService.html":{},"components/TripDetailComponent.html":{},"interfaces/TripModel.html":{},"interfaces/UserModel.html":{}}}],["object",{"_index":851,"title":{},"body":{"injectables/TripService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"injectables/TripService.html":{}}}],["occurred",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["of(tripactions.addtripfailure",{"_index":707,"title":{},"body":{"injectables/TripEffects.html":{}}}],["of(tripactions.deletetripfailure",{"_index":713,"title":{},"body":{"injectables/TripEffects.html":{}}}],["of(tripactions.loadtripbyidfailure",{"_index":719,"title":{},"body":{"injectables/TripEffects.html":{}}}],["of(tripactions.loadtripsfailure",{"_index":725,"title":{},"body":{"injectables/TripEffects.html":{}}}],["of(tripactions.updatetripfailure",{"_index":731,"title":{},"body":{"injectables/TripEffects.html":{}}}],["oftype",{"_index":734,"title":{},"body":{"injectables/TripEffects.html":{}}}],["oftype(tripactions.addtrip",{"_index":700,"title":{},"body":{"injectables/TripEffects.html":{}}}],["oftype(tripactions.deletetrip",{"_index":710,"title":{},"body":{"injectables/TripEffects.html":{}}}],["oftype(tripactions.loadtripbyid",{"_index":715,"title":{},"body":{"injectables/TripEffects.html":{}}}],["oftype(tripactions.loadtrips",{"_index":721,"title":{},"body":{"injectables/TripEffects.html":{}}}],["oftype(tripactions.updatetrip",{"_index":727,"title":{},"body":{"injectables/TripEffects.html":{}}}],["on(tripactions.addtripsuccess",{"_index":877,"title":{},"body":{"interfaces/TripState.html":{},"miscellaneous/variables.html":{}}}],["on(tripactions.deletetripsuccess",{"_index":883,"title":{},"body":{"interfaces/TripState.html":{},"miscellaneous/variables.html":{}}}],["on(tripactions.loadtripbyid",{"_index":885,"title":{},"body":{"interfaces/TripState.html":{},"miscellaneous/variables.html":{}}}],["on(tripactions.loadtripbyidfailure",{"_index":887,"title":{},"body":{"interfaces/TripState.html":{},"miscellaneous/variables.html":{}}}],["on(tripactions.loadtripbyidsuccess",{"_index":886,"title":{},"body":{"interfaces/TripState.html":{},"miscellaneous/variables.html":{}}}],["on(tripactions.loadtrips",{"_index":874,"title":{},"body":{"interfaces/TripState.html":{},"miscellaneous/variables.html":{}}}],["on(tripactions.loadtripsfailure",{"_index":876,"title":{},"body":{"interfaces/TripState.html":{},"miscellaneous/variables.html":{}}}],["on(tripactions.loadtripssuccess",{"_index":875,"title":{},"body":{"interfaces/TripState.html":{},"miscellaneous/variables.html":{}}}],["on(tripactions.updatetripsuccess",{"_index":879,"title":{},"body":{"interfaces/TripState.html":{},"miscellaneous/variables.html":{}}}],["onapprovetrip",{"_index":538,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["onback",{"_index":539,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["once",{"_index":1005,"title":{},"body":{"index.html":{}}}],["onclick",{"_index":500,"title":{},"body":{"directives/TogglePasswordDirective.html":{}}}],["ondelete",{"_index":755,"title":{},"body":{"components/TripListComponent.html":{}}}],["ondelete(id",{"_index":763,"title":{},"body":{"components/TripListComponent.html":{}}}],["ondestroy",{"_index":199,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["oninit",{"_index":519,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["onlogout",{"_index":353,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onsendforapproval",{"_index":540,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["onsubmit",{"_index":393,"title":{},"body":{"components/LoginComponent.html":{},"components/TripDetailComponent.html":{}}}],["onupdate",{"_index":756,"title":{},"body":{"components/TripListComponent.html":{}}}],["onupdate(id",{"_index":765,"title":{},"body":{"components/TripListComponent.html":{}}}],["oops",{"_index":421,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["open",{"_index":232,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["opendialog",{"_index":757,"title":{},"body":{"components/TripListComponent.html":{}}}],["optional",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"interfaces/ExpenseBaseModel.html":{},"injectables/ToastService.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"interfaces/TripModel.html":{},"injectables/TripService.html":{}}}],["origin",{"_index":1122,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":678,"title":{},"body":{"components/TripDetailComponent.html":{},"index.html":{}}}],["over",{"_index":1060,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1126,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":943,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":422,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["paginator",{"_index":751,"title":{},"body":{"components/TripListComponent.html":{}}}],["param",{"_index":234,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"injectables/ToastService.html":{},"injectables/TripService.html":{}}}],["parameters",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommunicationService.html":{},"injectables/ToastService.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"injectables/TripService.html":{}}}],["password",{"_index":402,"title":{},"body":{"components/LoginComponent.html":{},"directives/TogglePasswordDirective.html":{},"interfaces/UserModel.html":{}}}],["password.directive",{"_index":409,"title":{},"body":{"components/LoginComponent.html":{}}}],["password.directive.ts",{"_index":498,"title":{},"body":{"directives/TogglePasswordDirective.html":{},"coverage.html":{}}}],["password.directive.ts:10",{"_index":503,"title":{},"body":{"directives/TogglePasswordDirective.html":{}}}],["password.directive.ts:8",{"_index":507,"title":{},"body":{"directives/TogglePasswordDirective.html":{}}}],["payload",{"_index":196,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/TripDetailComponent.html":{}}}],["pending",{"_index":668,"title":{},"body":{"components/TripDetailComponent.html":{},"miscellaneous/enumerations.html":{}}}],["pending_approval",{"_index":975,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["perform",{"_index":235,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["permission",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pick",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{},"components/TripDetailComponent.html":{},"index.html":{}}}],["pickupdate",{"_index":582,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["pickupdatetime",{"_index":293,"title":{},"body":{"interfaces/CarRentalExpenseModel.html":{}}}],["pickuplocation",{"_index":294,"title":{},"body":{"interfaces/CarRentalExpenseModel.html":{},"components/TripDetailComponent.html":{}}}],["pipe",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["please",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prerequisites",{"_index":1034,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":1027,"title":{},"body":{"index.html":{}}}],["price",{"_index":676,"title":{},"body":{"components/TripDetailComponent.html":{},"index.html":{}}}],["private",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/ToastService.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"injectables/TripEffects.html":{},"components/TripListComponent.html":{},"injectables/TripService.html":{}}}],["process",{"_index":673,"title":{},"body":{"components/TripDetailComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["production",{"_index":1091,"title":{},"body":{"index.html":{}}}],["project",{"_index":1090,"title":{},"body":{"index.html":{}}}],["properties",{"_index":23,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/BroadcastMessage.html":{},"interfaces/CarRentalExpenseModel.html":{},"injectables/CommunicationService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ExpenseBaseModel.html":{},"interfaces/FlightExpenseModel.html":{},"components/HeaderComponent.html":{},"interfaces/HotelExpenseModel.html":{},"components/LoginComponent.html":{},"interfaces/TaxiExpenseModel.html":{},"injectables/ToastService.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"injectables/TripEffects.html":{},"components/TripListComponent.html":{},"interfaces/TripModel.html":{},"injectables/TripService.html":{},"interfaces/TripState.html":{},"interfaces/UserModel.html":{},"properties.html":{}}}],["props",{"_index":1145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideanimationsasync",{"_index":1159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"injectables/ToastService.html":{},"injectables/TripService.html":{}}}],["provideeffects(appeffects",{"_index":1154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providehttpclient(withfetch",{"_index":1152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":993,"title":{},"body":{"index.html":{}}}],["providestore(reducers",{"_index":1153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providestoredevtools",{"_index":1155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pull",{"_index":1123,"title":{},"body":{"index.html":{}}}],["push",{"_index":1121,"title":{},"body":{"index.html":{}}}],["queryselector('input",{"_index":513,"title":{},"body":{"directives/TogglePasswordDirective.html":{}}}],["reactiveformsmodule",{"_index":388,"title":{},"body":{"components/LoginComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["readonly",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/ConfirmDialogComponent.html":{},"components/TripListComponent.html":{},"injectables/TripService.html":{}}}],["received",{"_index":246,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["record",{"_index":253,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["reducers",{"_index":88,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refunded",{"_index":672,"title":{},"body":{"components/TripDetailComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["relativeto",{"_index":650,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["reload",{"_index":267,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["reload_trips",{"_index":206,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"miscellaneous/enumerations.html":{}}}],["reloadtrips",{"_index":207,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"miscellaneous/enumerations.html":{}}}],["removal",{"_index":464,"title":{},"body":{"injectables/ToastService.html":{}}}],["remove",{"_index":467,"title":{},"body":{"injectables/ToastService.html":{}}}],["remove_red_eye",{"_index":836,"title":{},"body":{"components/TripListComponent.html":{}}}],["rental",{"_index":286,"title":{},"body":{"interfaces/CarRentalExpenseModel.html":{},"components/TripDetailComponent.html":{},"interfaces/TripModel.html":{},"coverage.html":{},"index.html":{}}}],["repository",{"_index":1043,"title":{},"body":{"index.html":{}}}],["req",{"_index":1172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":1175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.headers",{"_index":1177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":1124,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":240,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["resource",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resources",{"_index":279,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["response",{"_index":1184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["result",{"_index":818,"title":{},"body":{"components/TripListComponent.html":{}}}],["results",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/BroadcastMessage.html":{},"interfaces/CarRentalExpenseModel.html":{},"injectables/CommunicationService.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/ExpenseBaseModel.html":{},"interfaces/FlightExpenseModel.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/HotelExpenseModel.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"interfaces/TaxiExpenseModel.html":{},"injectables/ToastService.html":{},"components/ToasterComponent.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"injectables/TripEffects.html":{},"components/TripListComponent.html":{},"interfaces/TripModel.html":{},"injectables/TripService.html":{},"interfaces/TripState.html":{},"interfaces/UserModel.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"injectables/ToastService.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"injectables/TripService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommunicationService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/ToastService.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"injectables/TripService.html":{}}}],["role",{"_index":603,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"interfaces/UserModel.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["role.approver",{"_index":559,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["role.end_user",{"_index":563,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["role.finance",{"_index":565,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["roles",{"_index":997,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["roles.includes(authservice.user.role",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"injectables/ToastService.html":{},"injectables/TripService.html":{},"index.html":{}}}],["root'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["route",{"_index":1162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["route.data['roles",{"_index":1164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router",{"_index":201,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/login",{"_index":1161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.navigate(['/unauthorized",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":379,"title":{},"body":{"components/LayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/TripListComponent.html":{}}}],["routeroutlet",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":243,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["run",{"_index":1051,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/TripDetailComponent.html":{},"injectables/TripEffects.html":{},"components/TripListComponent.html":{},"injectables/TripService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["save",{"_index":682,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["schedule",{"_index":463,"title":{},"body":{"injectables/ToastService.html":{}}}],["script",{"_index":1088,"title":{},"body":{"index.html":{}}}],["scripts",{"_index":1087,"title":{},"body":{"index.html":{}}}],["secure",{"_index":1106,"title":{},"body":{"index.html":{}}}],["select(selecttripbyid(id",{"_index":614,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["selectalltrips",{"_index":796,"title":{},"body":{"components/TripListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectapprovedtrips",{"_index":797,"title":{},"body":{"components/TripListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectedtrip",{"_index":871,"title":{},"body":{"interfaces/TripState.html":{},"miscellaneous/variables.html":{}}}],["selecterror",{"_index":937,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectloading",{"_index":938,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["selectselectedtrip",{"_index":939,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selecttripbyid",{"_index":595,"title":{},"body":{"components/TripDetailComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selecttripstate",{"_index":940,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["send",{"_index":683,"title":{},"body":{"components/TripDetailComponent.html":{},"index.html":{}}}],["sendmessage",{"_index":298,"title":{},"body":{"injectables/CommunicationService.html":{}}}],["sendmessage(action",{"_index":238,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["sends",{"_index":231,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["sent",{"_index":654,"title":{},"body":{"components/TripDetailComponent.html":{},"index.html":{}}}],["serve",{"_index":1055,"title":{},"body":{"index.html":{}}}],["server",{"_index":1023,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":280,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["services",{"_index":1070,"title":{},"body":{"index.html":{}}}],["services/communication.service",{"_index":363,"title":{},"body":{"components/HeaderComponent.html":{}}}],["set('access",{"_index":1178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["set('authorization",{"_index":1180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settimeout",{"_index":492,"title":{},"body":{"injectables/ToastService.html":{}}}],["setup",{"_index":1032,"title":{},"body":{"index.html":{}}}],["shared",{"_index":1071,"title":{},"body":{"index.html":{}}}],["shared/components/confirm",{"_index":798,"title":{},"body":{"components/TripListComponent.html":{}}}],["shared/directives/toggle",{"_index":408,"title":{},"body":{"components/LoginComponent.html":{}}}],["shared/enums/role.enum",{"_index":604,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["shared/enums/trip",{"_index":606,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["shared/models/trip.model",{"_index":594,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"injectables/TripService.html":{},"interfaces/TripState.html":{}}}],["shared/models/user.model",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["show",{"_index":471,"title":{},"body":{"injectables/ToastService.html":{}}}],["showtoast",{"_index":447,"title":{},"body":{"injectables/ToastService.html":{}}}],["showtoast(type",{"_index":469,"title":{},"body":{"injectables/ToastService.html":{}}}],["sidenav",{"_index":433,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav'},{'name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["sidenav.component.html",{"_index":434,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.component.scss",{"_index":435,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav/sidenav.component",{"_index":384,"title":{},"body":{"components/LayoutComponent.html":{}}}],["sidenavcomponent",{"_index":63,"title":{"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"coverage.html":{}}}],["simplify",{"_index":982,"title":{},"body":{"index.html":{}}}],["simulate",{"_index":1101,"title":{},"body":{"index.html":{}}}],["simulated",{"_index":1105,"title":{},"body":{"index.html":{}}}],["simulates",{"_index":990,"title":{},"body":{"index.html":{}}}],["sort",{"_index":752,"title":{},"body":{"components/TripListComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/BroadcastMessage.html":{},"interfaces/CarRentalExpenseModel.html":{},"injectables/CommunicationService.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/ExpenseBaseModel.html":{},"interfaces/FlightExpenseModel.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/HotelExpenseModel.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"interfaces/TaxiExpenseModel.html":{},"injectables/ToastService.html":{},"components/ToasterComponent.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"injectables/TripEffects.html":{},"components/TripListComponent.html":{},"interfaces/TripModel.html":{},"injectables/TripService.html":{},"interfaces/TripState.html":{},"interfaces/UserModel.html":{}}}],["specific",{"_index":465,"title":{},"body":{"injectables/ToastService.html":{},"index.html":{}}}],["src",{"_index":1068,"title":{},"body":{"index.html":{}}}],["src/.../app.config.ts",{"_index":1135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.effects.ts",{"_index":1136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.state.ts",{"_index":1142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":1137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.interceptor.ts",{"_index":1139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.service.ts",{"_index":1141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../communication.service.ts",{"_index":965,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.ts",{"_index":1138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../finance",{"_index":966,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.enum.ts",{"_index":968,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../trip",{"_index":969,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../trip.actions.ts",{"_index":1134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../trip.reducer.ts",{"_index":1140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../trip.selectors.ts",{"_index":1143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":896,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.service.ts",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.service.ts:15",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:17",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:19",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:22",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:23",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:25",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:29",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:33",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:37",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:56",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:60",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:67",{"_index":112,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:74",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:79",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:83",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/guards/auth.guard.ts",{"_index":901,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/interceptors/auth.interceptor.ts",{"_index":905,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/login/login.component.ts",{"_index":387,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:22",{"_index":397,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:23",{"_index":395,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:24",{"_index":398,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:26",{"_index":403,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:31",{"_index":394,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/core/layout/footer/footer.component.ts",{"_index":342,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/core/layout/header/header.component.ts",{"_index":346,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/core/layout/header/header.component.ts:19",{"_index":360,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/layout/header/header.component.ts:20",{"_index":358,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/layout/header/header.component.ts:21",{"_index":356,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/layout/header/header.component.ts:23",{"_index":354,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/layout/layout/layout.component.ts",{"_index":374,"title":{},"body":{"components/LayoutComponent.html":{},"coverage.html":{}}}],["src/app/core/layout/sidenav/sidenav.component.ts",{"_index":432,"title":{},"body":{"components/SidenavComponent.html":{},"coverage.html":{}}}],["src/app/core/services/communication.service.ts",{"_index":194,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/core/services/communication.service.ts:107",{"_index":306,"title":{},"body":{"injectables/CommunicationService.html":{}}}],["src/app/core/services/communication.service.ts:22",{"_index":309,"title":{},"body":{"injectables/CommunicationService.html":{}}}],["src/app/core/services/communication.service.ts:23",{"_index":300,"title":{},"body":{"injectables/CommunicationService.html":{}}}],["src/app/core/services/communication.service.ts:46",{"_index":307,"title":{},"body":{"injectables/CommunicationService.html":{}}}],["src/app/core/services/communication.service.ts:59",{"_index":303,"title":{},"body":{"injectables/CommunicationService.html":{}}}],["src/app/core/services/communication.service.ts:82",{"_index":302,"title":{},"body":{"injectables/CommunicationService.html":{}}}],["src/app/core/services/communication.service.ts:90",{"_index":305,"title":{},"body":{"injectables/CommunicationService.html":{}}}],["src/app/core/services/communication.service.ts:98",{"_index":301,"title":{},"body":{"injectables/CommunicationService.html":{}}}],["src/app/core/services/toaster.service.ts",{"_index":442,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/core/services/toaster.service.ts:19",{"_index":470,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/core/services/toaster.service.ts:36",{"_index":458,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/core/services/toaster.service.ts:52",{"_index":453,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/core/services/toaster.service.ts:67",{"_index":462,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/core/services/toaster.service.ts:7",{"_index":448,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/core/services/trip.service.ts",{"_index":845,"title":{},"body":{"injectables/TripService.html":{},"coverage.html":{}}}],["src/app/core/services/trip.service.ts:10",{"_index":862,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/core/services/trip.service.ts:12",{"_index":863,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/core/services/trip.service.ts:18",{"_index":856,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/core/services/trip.service.ts:27",{"_index":855,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/core/services/trip.service.ts:36",{"_index":850,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/core/services/trip.service.ts:46",{"_index":858,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/core/services/trip.service.ts:55",{"_index":853,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/environment.ts",{"_index":916,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/dashboard/dashboard.component.ts",{"_index":323,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/features/trip/trip",{"_index":516,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/confirm",{"_index":310,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/not",{"_index":416,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/toaster/toaster.component.ts",{"_index":495,"title":{},"body":{"components/ToasterComponent.html":{},"coverage.html":{}}}],["src/app/shared/directives/toggle",{"_index":497,"title":{},"body":{"directives/TogglePasswordDirective.html":{},"coverage.html":{}}}],["src/app/shared/enums/finance",{"_index":970,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/enums/role.enum.ts",{"_index":972,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/enums/trip",{"_index":974,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/models/car",{"_index":285,"title":{},"body":{"interfaces/CarRentalExpenseModel.html":{},"coverage.html":{}}}],["src/app/shared/models/expense",{"_index":328,"title":{},"body":{"interfaces/ExpenseBaseModel.html":{},"coverage.html":{}}}],["src/app/shared/models/flight",{"_index":336,"title":{},"body":{"interfaces/FlightExpenseModel.html":{},"coverage.html":{}}}],["src/app/shared/models/hotel",{"_index":368,"title":{},"body":{"interfaces/HotelExpenseModel.html":{},"coverage.html":{}}}],["src/app/shared/models/taxi",{"_index":440,"title":{},"body":{"interfaces/TaxiExpenseModel.html":{},"coverage.html":{}}}],["src/app/shared/models/trip.model.ts",{"_index":837,"title":{},"body":{"interfaces/TripModel.html":{},"coverage.html":{}}}],["src/app/shared/models/user.model.ts",{"_index":888,"title":{},"body":{"interfaces/UserModel.html":{},"coverage.html":{}}}],["src/app/store/app.effects.ts",{"_index":922,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/app.state.ts",{"_index":81,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/trip/trip.actions.ts",{"_index":924,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/trip/trip.effects.ts",{"_index":687,"title":{},"body":{"injectables/TripEffects.html":{},"coverage.html":{}}}],["src/app/store/trip/trip.effects.ts:10",{"_index":697,"title":{},"body":{"injectables/TripEffects.html":{}}}],["src/app/store/trip/trip.effects.ts:12",{"_index":726,"title":{},"body":{"injectables/TripEffects.html":{}}}],["src/app/store/trip/trip.effects.ts:26",{"_index":709,"title":{},"body":{"injectables/TripEffects.html":{}}}],["src/app/store/trip/trip.effects.ts:40",{"_index":714,"title":{},"body":{"injectables/TripEffects.html":{}}}],["src/app/store/trip/trip.effects.ts:54",{"_index":720,"title":{},"body":{"injectables/TripEffects.html":{}}}],["src/app/store/trip/trip.effects.ts:68",{"_index":732,"title":{},"body":{"injectables/TripEffects.html":{}}}],["src/app/store/trip/trip.effects.ts:9",{"_index":695,"title":{},"body":{"injectables/TripEffects.html":{}}}],["src/app/store/trip/trip.reducer.ts",{"_index":869,"title":{},"body":{"interfaces/TripState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/trip/trip.selectors.ts",{"_index":936,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["start",{"_index":667,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"index.html":{}}}],["start/end",{"_index":999,"title":{},"body":{"index.html":{}}}],["start:json",{"_index":1052,"title":{},"body":{"index.html":{}}}],["startdate",{"_index":571,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"interfaces/TripModel.html":{}}}],["started",{"_index":977,"title":{"index.html":{}},"body":{}}],["state",{"_index":616,"title":{},"body":{"components/TripDetailComponent.html":{},"interfaces/TripState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["state.error",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.id",{"_index":626,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["state.loading",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.selectedtrip",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.status",{"_index":620,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["state.trips",{"_index":878,"title":{},"body":{"interfaces/TripState.html":{},"miscellaneous/variables.html":{}}}],["state.trips.filter((t",{"_index":884,"title":{},"body":{"interfaces/TripState.html":{},"miscellaneous/variables.html":{}}}],["state.trips.map((t",{"_index":880,"title":{},"body":{"interfaces/TripState.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":894,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1079,"title":{},"body":{"index.html":{}}}],["status",{"_index":573,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"interfaces/TripModel.html":{}}}],["status.enum",{"_index":607,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"interfaces/TripModel.html":{}}}],["status.enum.ts",{"_index":967,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statuses",{"_index":1065,"title":{},"body":{"index.html":{}}}],["steps",{"_index":1111,"title":{},"body":{"index.html":{}}}],["store",{"_index":200,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"dependencies.html":{},"index.html":{}}}],["store/app.state",{"_index":795,"title":{},"body":{"components/TripListComponent.html":{}}}],["store/trip/trip.actions",{"_index":204,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["store/trip/trip.selectors",{"_index":596,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["string",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CarRentalExpenseModel.html":{},"injectables/CommunicationService.html":{},"interfaces/ExpenseBaseModel.html":{},"interfaces/FlightExpenseModel.html":{},"interfaces/HotelExpenseModel.html":{},"interfaces/TaxiExpenseModel.html":{},"injectables/ToastService.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"interfaces/TripModel.html":{},"injectables/TripService.html":{},"interfaces/TripState.html":{},"interfaces/UserModel.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":1067,"title":{},"body":{"index.html":{}}}],["styles",{"_index":415,"title":{},"body":{"components/NotFoundComponent.html":{},"components/ToasterComponent.html":{},"components/TripListComponent.html":{},"index.html":{}}}],["styleurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/TripDetailComponent.html":{}}}],["styleurls",{"_index":745,"title":{},"body":{"components/TripListComponent.html":{}}}],["subscribe",{"_index":414,"title":{},"body":{"components/LoginComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["subscription",{"_index":569,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["succesfully",{"_index":646,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["success",{"_index":450,"title":{},"body":{"injectables/ToastService.html":{},"components/TripDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["successful",{"_index":1186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["successfully",{"_index":656,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["sure",{"_index":322,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["switch",{"_index":1189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sync",{"_index":215,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["system",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["system.git",{"_index":1047,"title":{},"body":{"index.html":{}}}],["t",{"_index":118,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/TripState.html":{},"miscellaneous/variables.html":{}}}],["t.id",{"_index":881,"title":{},"body":{"interfaces/TripState.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["tabs/windows",{"_index":233,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["tailwind",{"_index":1015,"title":{},"body":{"index.html":{}}}],["tap",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"miscellaneous/variables.html":{}}}],["tap((res",{"_index":807,"title":{},"body":{"components/TripListComponent.html":{}}}],["tap((state",{"_index":617,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["tap((user",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["taxi",{"_index":588,"title":{},"body":{"components/TripDetailComponent.html":{},"interfaces/TripModel.html":{},"index.html":{}}}],["taxiexpense",{"_index":665,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["taxiexpensemodel",{"_index":439,"title":{"interfaces/TaxiExpenseModel.html":{}},"body":{"interfaces/TaxiExpenseModel.html":{},"interfaces/TripModel.html":{},"coverage.html":{}}}],["technologies",{"_index":1011,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["test",{"_index":1092,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1029,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1094,"title":{},"body":{"index.html":{}}}],["text",{"_index":515,"title":{},"body":{"directives/TogglePasswordDirective.html":{}}}],["this._actions$.pipe",{"_index":699,"title":{},"body":{"injectables/TripEffects.html":{}}}],["this._authservice",{"_index":411,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._authservice.logout",{"_index":265,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["this._authservice.user?.role",{"_index":558,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["this._calculatetotalexpense(tripdata",{"_index":638,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["this._clearusersession",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._communicationservice.sendmessage",{"_index":820,"title":{},"body":{"components/TripListComponent.html":{}}}],["this._communicationservice.sendmessage(communicationactions.logout",{"_index":365,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this._communicationservice.sendmessage(communicationactions.reload_trips",{"_index":643,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["this._createtoastelement(type",{"_index":477,"title":{},"body":{"injectables/ToastService.html":{}}}],["this._el.nativeelement",{"_index":511,"title":{},"body":{"directives/TogglePasswordDirective.html":{}}}],["this._fb.group",{"_index":400,"title":{},"body":{"components/LoginComponent.html":{},"components/TripDetailComponent.html":{}}}],["this._getfromlocalstorage(logged_user",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._getfromlocalstorage(logged_user_token",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._getorcreatetoastcontainer",{"_index":476,"title":{},"body":{"injectables/ToastService.html":{}}}],["this._handledeletetrip",{"_index":259,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["this._handlelogout",{"_index":255,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["this._handlemessage(message.data",{"_index":230,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["this._handlereloadtrips",{"_index":257,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["this._http",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._http.delete(`${this._baseurl}/${id",{"_index":868,"title":{},"body":{"injectables/TripService.html":{}}}],["this._http.get(`${this._baseurl}/${id",{"_index":865,"title":{},"body":{"injectables/TripService.html":{}}}],["this._http.get(this._baseurl",{"_index":864,"title":{},"body":{"injectables/TripService.html":{}}}],["this._http.post(this._baseurl",{"_index":866,"title":{},"body":{"injectables/TripService.html":{}}}],["this._http.put(`${this._baseurl}/${id",{"_index":867,"title":{},"body":{"injectables/TripService.html":{}}}],["this._loadtrips",{"_index":814,"title":{},"body":{"components/TripListComponent.html":{}}}],["this._ngzone.run",{"_index":229,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["this._removefromlocalstorage(logged_user",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._removefromlocalstorage(logged_user_token",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._route",{"_index":651,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["this._route.snapshot.parammap.get('trip_id",{"_index":609,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["this._router.navigate",{"_index":649,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["this._router.navigate(['/login",{"_index":266,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/HeaderComponent.html":{}}}],["this._router.navigate(['/trip",{"_index":413,"title":{},"body":{"components/LoginComponent.html":{},"components/TripListComponent.html":{}}}],["this._router.navigate(['/trip/list",{"_index":276,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/TripDetailComponent.html":{}}}],["this._scheduletoastremoval(toastelement",{"_index":481,"title":{},"body":{"injectables/ToastService.html":{}}}],["this._settolocalstorage(logged_user",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._settolocalstorage(logged_user_token",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._setusersession(user",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._store",{"_index":613,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["this._store.dispatch",{"_index":641,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["this._store.dispatch(tripactions.addtrip",{"_index":647,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["this._store.dispatch(tripactions.deletetrip",{"_index":819,"title":{},"body":{"components/TripListComponent.html":{}}}],["this._store.dispatch(tripactions.loadtripbyid",{"_index":610,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["this._store.dispatch(tripactions.loadtrips",{"_index":272,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/TripListComponent.html":{}}}],["this._store.select(selectalltrips",{"_index":805,"title":{},"body":{"components/TripListComponent.html":{}}}],["this._store.select(selectapprovedtrips",{"_index":806,"title":{},"body":{"components/TripListComponent.html":{}}}],["this._toastcontainer",{"_index":475,"title":{},"body":{"injectables/ToastService.html":{}}}],["this._toastcontainer.appendchild(toastelement",{"_index":479,"title":{},"body":{"injectables/ToastService.html":{}}}],["this._toastcontainer.contains(toastelement",{"_index":493,"title":{},"body":{"injectables/ToastService.html":{}}}],["this._toastcontainer.removechild(toastelement",{"_index":494,"title":{},"body":{"injectables/ToastService.html":{}}}],["this._toasterservice.showtoast",{"_index":653,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["this._toasterservice.showtoast('error",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._toasterservice.showtoast('success",{"_index":644,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["this._token",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._tripservice.createtrip(trip).pipe",{"_index":702,"title":{},"body":{"injectables/TripEffects.html":{}}}],["this._tripservice.deletetrip(id).pipe",{"_index":711,"title":{},"body":{"injectables/TripEffects.html":{}}}],["this._tripservice.gettripbyid(id).pipe",{"_index":716,"title":{},"body":{"injectables/TripEffects.html":{}}}],["this._tripservice.gettrips().pipe",{"_index":722,"title":{},"body":{"injectables/TripEffects.html":{}}}],["this._tripservice.updatetrip(id",{"_index":728,"title":{},"body":{"injectables/TripEffects.html":{}}}],["this._user",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.logout",{"_index":364,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.channel",{"_index":221,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["this.channel.close",{"_index":283,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["this.channel.onmessage",{"_index":227,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["this.channel.postmessage(message",{"_index":241,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{}}}],["this.datasource",{"_index":808,"title":{},"body":{"components/TripListComponent.html":{}}}],["this.datasource.filter",{"_index":825,"title":{},"body":{"components/TripListComponent.html":{}}}],["this.datasource.paginator",{"_index":810,"title":{},"body":{"components/TripListComponent.html":{}}}],["this.datasource.paginator.firstpage",{"_index":827,"title":{},"body":{"components/TripListComponent.html":{}}}],["this.datasource.sort",{"_index":812,"title":{},"body":{"components/TripListComponent.html":{}}}],["this.dialog.open(confirmdialogcomponent",{"_index":800,"title":{},"body":{"components/TripListComponent.html":{}}}],["this.dialogref",{"_index":815,"title":{},"body":{"components/TripListComponent.html":{}}}],["this.dialogref.afterclosed().subscribe((result",{"_index":817,"title":{},"body":{"components/TripListComponent.html":{}}}],["this.form.valid",{"_index":410,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.isapprover",{"_index":579,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["this.isdraft",{"_index":624,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["this.isenduser",{"_index":804,"title":{},"body":{"components/TripListComponent.html":{}}}],["this.isfinancer",{"_index":630,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["this.istripapproved",{"_index":622,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["this.istripsentforapproval",{"_index":619,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["this.opendialog",{"_index":816,"title":{},"body":{"components/TripListComponent.html":{}}}],["this.paginator",{"_index":811,"title":{},"body":{"components/TripListComponent.html":{}}}],["this.sort",{"_index":813,"title":{},"body":{"components/TripListComponent.html":{}}}],["this.trip",{"_index":612,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["this.tripform",{"_index":632,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["this.tripform.disable",{"_index":627,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["this.tripform.get('comment')?.addvalidators(validators.required",{"_index":629,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["this.tripform.get('comment')?.enable",{"_index":628,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["this.tripform.get('financestatus')?.enable",{"_index":631,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["this.tripform.getrawvalue",{"_index":637,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["this.tripform.invalid",{"_index":635,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["this.tripform.patchvalue",{"_index":652,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["this.tripform.patchvalue(state",{"_index":618,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["this.tripid",{"_index":611,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["this.trips",{"_index":803,"title":{},"body":{"components/TripListComponent.html":{}}}],["time",{"_index":681,"title":{},"body":{"components/TripDetailComponent.html":{},"index.html":{}}}],["timeanddate",{"_index":589,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["title",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["titlecase",{"_index":833,"title":{},"body":{"components/TripListComponent.html":{}}}],["toast",{"_index":455,"title":{},"body":{"injectables/ToastService.html":{}}}],["toastelement",{"_index":466,"title":{},"body":{"injectables/ToastService.html":{}}}],["toastelement.classname",{"_index":489,"title":{},"body":{"injectables/ToastService.html":{}}}],["toastelement.innerhtml",{"_index":491,"title":{},"body":{"injectables/ToastService.html":{}}}],["toaster",{"_index":496,"title":{},"body":{"components/ToasterComponent.html":{}}}],["toaster'},{'name",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["toastercomponent",{"_index":65,"title":{"components/ToasterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"coverage.html":{}}}],["toastservice",{"_index":159,"title":{"injectables/ToastService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/ToastService.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"coverage.html":{}}}],["togglepassworddirective",{"_index":73,"title":{"directives/TogglePasswordDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"coverage.html":{}}}],["token",{"_index":109,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/UserModel.html":{}}}],["top",{"_index":486,"title":{},"body":{"injectables/ToastService.html":{}}}],["total",{"_index":670,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"index.html":{}}}],["totalexpense",{"_index":576,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"interfaces/TripModel.html":{}}}],["totalprice",{"_index":332,"title":{},"body":{"interfaces/ExpenseBaseModel.html":{},"components/TripDetailComponent.html":{}}}],["tracking",{"_index":983,"title":{},"body":{"index.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["trip",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"injectables/TripEffects.html":{},"components/TripListComponent.html":{},"injectables/TripService.html":{},"interfaces/TripState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trip).pipe",{"_index":729,"title":{},"body":{"injectables/TripEffects.html":{}}}],["trip.actions",{"_index":736,"title":{},"body":{"injectables/TripEffects.html":{},"interfaces/TripState.html":{}}}],["trip.duration",{"_index":829,"title":{},"body":{"components/TripListComponent.html":{}}}],["trip.expenses?.carrental?.totalprice",{"_index":660,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["trip.expenses?.flight?.totalprice",{"_index":664,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["trip.expenses?.hotel?.totalprice",{"_index":662,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["trip.expenses?.taxi?.totalprice",{"_index":666,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["trip.id",{"_index":882,"title":{},"body":{"interfaces/TripState.html":{},"miscellaneous/variables.html":{}}}],["trip.name",{"_index":828,"title":{},"body":{"components/TripListComponent.html":{}}}],["trip.startdate",{"_index":830,"title":{},"body":{"components/TripListComponent.html":{}}}],["trip.status",{"_index":832,"title":{},"body":{"components/TripListComponent.html":{},"miscellaneous/variables.html":{}}}],["trip.totalexpense",{"_index":834,"title":{},"body":{"components/TripListComponent.html":{}}}],["trip/trip.reducer",{"_index":86,"title":{},"body":{"interfaces/AppState.html":{}}}],["tripactions",{"_index":203,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/TripDetailComponent.html":{},"injectables/TripEffects.html":{},"components/TripListComponent.html":{},"interfaces/TripState.html":{}}}],["tripactions.addtripsuccess",{"_index":704,"title":{},"body":{"injectables/TripEffects.html":{}}}],["tripactions.deletetripsuccess",{"_index":712,"title":{},"body":{"injectables/TripEffects.html":{}}}],["tripactions.loadtripbyidsuccess",{"_index":718,"title":{},"body":{"injectables/TripEffects.html":{}}}],["tripactions.loadtripssuccess",{"_index":724,"title":{},"body":{"injectables/TripEffects.html":{}}}],["tripactions.updatetrip",{"_index":642,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["tripactions.updatetripsuccess",{"_index":730,"title":{},"body":{"injectables/TripEffects.html":{}}}],["tripdata",{"_index":636,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["tripdata.status",{"_index":639,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["tripdetailcomponent",{"_index":67,"title":{"components/TripDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"coverage.html":{}}}],["tripeffects",{"_index":686,"title":{"injectables/TripEffects.html":{}},"body":{"injectables/TripEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tripform",{"_index":535,"title":{},"body":{"components/TripDetailComponent.html":{}}}],["tripid",{"_index":333,"title":{},"body":{"interfaces/ExpenseBaseModel.html":{},"components/TripDetailComponent.html":{}}}],["triplistcomponent",{"_index":70,"title":{"components/TripListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"coverage.html":{}}}],["tripmodel",{"_index":542,"title":{"interfaces/TripModel.html":{}},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"interfaces/TripModel.html":{},"injectables/TripService.html":{},"interfaces/TripState.html":{},"coverage.html":{}}}],["tripreducer",{"_index":85,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/TripState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["trips",{"_index":268,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/SidenavComponent.html":{},"injectables/TripEffects.html":{},"components/TripListComponent.html":{},"injectables/TripService.html":{},"interfaces/TripState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trips.filter((trip",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trips.trips.find((trip",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tripservice",{"_index":738,"title":{"injectables/TripService.html":{}},"body":{"injectables/TripEffects.html":{},"injectables/TripService.html":{},"coverage.html":{}}}],["tripstate",{"_index":82,"title":{"interfaces/TripState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TripState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tripstatus",{"_index":605,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"interfaces/TripModel.html":{},"miscellaneous/enumerations.html":{}}}],["tripstatus.approved",{"_index":623,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"miscellaneous/variables.html":{}}}],["tripstatus.draft",{"_index":625,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["tripstatus.pending_approval",{"_index":621,"title":{},"body":{"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["true",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"interfaces/TripState.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslib",{"_index":959,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/BroadcastMessage.html":{},"interfaces/CarRentalExpenseModel.html":{},"injectables/CommunicationService.html":{},"interfaces/ExpenseBaseModel.html":{},"interfaces/FlightExpenseModel.html":{},"interfaces/HotelExpenseModel.html":{},"components/LoginComponent.html":{},"interfaces/TaxiExpenseModel.html":{},"injectables/ToastService.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{},"interfaces/TripModel.html":{},"injectables/TripService.html":{},"interfaces/TripState.html":{},"interfaces/UserModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":1069,"title":{},"body":{"index.html":{}}}],["unexpected",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unhandled",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":1093,"title":{},"body":{"index.html":{}}}],["up",{"_index":278,"title":{},"body":{"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/TripDetailComponent.html":{}}}],["up/drop",{"_index":1001,"title":{},"body":{"index.html":{}}}],["update",{"_index":859,"title":{},"body":{"injectables/TripService.html":{},"miscellaneous/variables.html":{}}}],["updated",{"_index":645,"title":{},"body":{"components/TripDetailComponent.html":{},"injectables/TripService.html":{}}}],["updatedtrip",{"_index":657,"title":{},"body":{"components/TripDetailComponent.html":{},"injectables/TripService.html":{}}}],["updatetrip",{"_index":693,"title":{},"body":{"injectables/TripEffects.html":{},"injectables/TripService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updatetrip(id",{"_index":857,"title":{},"body":{"injectables/TripService.html":{}}}],["updatetripfailure",{"_index":933,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["updatetripsuccess",{"_index":934,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":1012,"title":{},"body":{"index.html":{}}}],["user",{"_index":110,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["userdata",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata.token",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["usermodel",{"_index":127,"title":{"interfaces/UserModel.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/UserModel.html":{},"coverage.html":{}}}],["users",{"_index":986,"title":{},"body":{"index.html":{}}}],["users.length",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["users[0",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["uses",{"_index":1100,"title":{},"body":{"index.html":{}}}],["using",{"_index":1057,"title":{},"body":{"index.html":{}}}],["v17.3.11",{"_index":1041,"title":{},"body":{"index.html":{}}}],["v22.5.1",{"_index":1039,"title":{},"body":{"index.html":{}}}],["validators",{"_index":405,"title":{},"body":{"components/LoginComponent.html":{},"components/TripDetailComponent.html":{}}}],["validators.required",{"_index":401,"title":{},"body":{"components/LoginComponent.html":{},"components/TripDetailComponent.html":{}}}],["value",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CommunicationService.html":{},"components/ConfirmDialogComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/ToastService.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"injectables/TripEffects.html":{},"components/TripListComponent.html":{},"injectables/TripService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["variable",{"_index":897,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1133,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1131,"title":{},"body":{"properties.html":{}}}],["view",{"_index":1004,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":790,"title":{},"body":{"components/TripListComponent.html":{}}}],["viewchild(matpaginator",{"_index":783,"title":{},"body":{"components/TripListComponent.html":{}}}],["viewchild(matsort",{"_index":786,"title":{},"body":{"components/TripListComponent.html":{}}}],["void",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/BroadcastMessage.html":{},"injectables/CommunicationService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/ToastService.html":{},"directives/TogglePasswordDirective.html":{},"components/TripDetailComponent.html":{},"components/TripListComponent.html":{}}}],["warning",{"_index":452,"title":{},"body":{"injectables/ToastService.html":{}}}],["welcome",{"_index":1109,"title":{},"body":{"index.html":{}}}],["width",{"_index":801,"title":{},"body":{"components/TripListComponent.html":{}}}],["works",{"_index":327,"title":{},"body":{"components/DashboardComponent.html":{}}}],["wrong",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["xyz",{"_index":1120,"title":{},"body":{"index.html":{}}}],["yes",{"_index":308,"title":{},"body":{"injectables/CommunicationService.html":{},"components/ConfirmDialogComponent.html":{}}}],["you're",{"_index":423,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["you\\'re",{"_index":430,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["zone.js",{"_index":961,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'expense-management-system'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'expense-management-system';\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'ToasterComponent', 'selector': 'app-toaster'},{'name': 'TripDetailComponent', 'selector': 'app-trip-detail'},{'name': 'TripListComponent', 'selector': 'app-trip-list'}];\n    var DIRECTIVES = [{'name': 'TogglePasswordDirective', 'selector': '[appTogglePassword]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/app.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            trip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        trip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trip:         TripState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TripState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap } from '@ngrx/store';\nimport { tripReducer, TripState } from './trip/trip.reducer';\n\nexport interface AppState {\n  trip: TripState;\n}\n\nexport const reducers: ActionReducerMap = {\n  trip: tripReducer\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _baseUrl\n                            \n                            \n                                    Private\n                                _http\n                            \n                            \n                                    Private\n                                _toasterService\n                            \n                            \n                                    Private\n                                _token\n                            \n                            \n                                    Private\n                                _user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _clearUserSession\n                            \n                            \n                                    Private\n                                _getFromLocalStorage\n                            \n                            \n                                    Private\n                                _removeFromLocalStorage\n                            \n                            \n                                    Private\n                                _setToLocalStorage\n                            \n                            \n                                    Private\n                                _setUserSession\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    token\n                                \n                                \n                                    user\n                                \n                                \n                                    isLoggedIn\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _clearUserSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    _clearUserSession()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _getFromLocalStorage\n                        \n                    \n                \n            \n            \n                \n                        \n                    _getFromLocalStorage(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:74\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _removeFromLocalStorage\n                        \n                    \n                \n            \n            \n                \n                        \n                    _removeFromLocalStorage(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _setToLocalStorage\n                        \n                    \n                \n            \n            \n                \n                        \n                    _setToLocalStorage(key: string, value: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:79\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _setUserSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    _setUserSession(userData: UserModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                            UserModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(user: Pick)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Pick\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : `api/users`\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _toasterService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : this._getFromLocalStorage(LOGGED_USER_TOKEN)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserModel | null\n\n                    \n                \n                \n                    \n                        Default value : this._getFromLocalStorage(LOGGED_USER)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        token\n                    \n                \n\n                \n                    \n                        gettoken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/auth.service.ts:25\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/auth.service.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isLoggedIn\n                    \n                \n\n                \n                    \n                        getisLoggedIn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/auth.service.ts:33\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { UserModel } from '../shared/models/user.model';\nimport { ToastService } from '../core/services/toaster.service';\n\nexport const LOGGED_USER_TOKEN = 'blog:token';\nexport const LOGGED_USER = 'blog:user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private readonly _baseUrl: string = `api/users`;\n\n  private _token: string | null =\n    this._getFromLocalStorage(LOGGED_USER_TOKEN);\n  private _user: UserModel | null =\n    this._getFromLocalStorage(LOGGED_USER);\n\n  private _http = inject(HttpClient);\n  private _toasterService = inject(ToastService);\n\n  get token(): string | null {\n    return this._token;\n  }\n\n  get user(): UserModel | null {\n    return this._user;\n  }\n\n  get isLoggedIn(): boolean {\n    return !!(this._token && this._user);\n  }\n\n  login(\n    user: Pick\n  ): Observable {\n    return this._http\n      .get(`${this._baseUrl}?name=${user.name}&password=${user.password}`)\n      .pipe(\n        map((users: UserModel[]) => (users.length ? users[0] : null)),\n        tap((user: UserModel | null) => {\n          if (user) {\n            this._setUserSession(user);\n          } else {\n            this._toasterService.showToast('error', 'Wrong Details');\n          }\n        })\n      );\n  }\n\n  logout(): void {\n    this._clearUserSession();\n  }\n\n  private _setUserSession(userData: UserModel): void {\n    this._token = userData.token;\n    this._user = userData;\n    this._setToLocalStorage(LOGGED_USER_TOKEN, this._token);\n    this._setToLocalStorage(LOGGED_USER, this._user);\n  }\n\n  private _clearUserSession(): void {\n    this._token = null;\n    this._user = null;\n    this._removeFromLocalStorage(LOGGED_USER_TOKEN);\n    this._removeFromLocalStorage(LOGGED_USER);\n  }\n\n  private _getFromLocalStorage(key: string): T | null {\n    const data = localStorage.getItem(key);\n    return data ? (JSON.parse(data) as T) : null;\n  }\n\n  private _setToLocalStorage(key: string, value: T): void {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  private _removeFromLocalStorage(key: string): void {\n    localStorage.removeItem(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BroadcastMessage.html":{"url":"interfaces/BroadcastMessage.html","title":"interface - BroadcastMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BroadcastMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/communication.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payload\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         CommunicationActions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CommunicationActions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payload:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NgZone, OnDestroy } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../auth/auth.service';\nimport * as TripActions from '../../store/trip/trip.actions';\n\nexport enum CommunicationActions {\n  LOGOUT = 'logout',\n  RELOAD_TRIPS = 'reloadTrips',\n  DELETE_TRIP = 'deleteTrip'\n}\n\ninterface BroadcastMessage {\n  action: CommunicationActions;\n  payload?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommunicationService implements OnDestroy {\n  private channel: BroadcastChannel;\n  private readonly channelName = 'trip-sync-channel';\n\n  constructor(\n    private _store: Store,\n    private _router: Router,\n    private _authService: AuthService,\n    private _ngZone: NgZone\n  ) {\n    this.channel = new BroadcastChannel(this.channelName);\n\n    // Listen for incoming messages\n    this.channel.onmessage = (message) => {\n      this._ngZone.run(() =>\n        this._handleMessage(message.data as BroadcastMessage)\n      );\n    };\n  }\n\n  /**\n   * Sends a message to all open tabs/windows.\n   * @param action The action to perform (e.g., logout, reloadTrips).\n   * @param payload Optional data associated with the action.\n   */\n  sendMessage(action: CommunicationActions, payload?: any): void {\n    if (!action) {\n      console.error('sendMessage: action is required');\n      return;\n    }\n    const message: BroadcastMessage = { action, payload };\n    this.channel.postMessage(message);\n  }\n\n  /**\n   * Handles incoming messages and routes them to the appropriate logic.\n   * @param message The received broadcast message.\n   */\n  private _handleMessage(message: BroadcastMessage): void {\n    if (!message || !message.action) {\n      console.warn('Received an invalid message:', message);\n      return;\n    }\n\n    const actionHandlers: Record void> = {\n      [CommunicationActions.LOGOUT]: () => this._handleLogout(),\n      [CommunicationActions.RELOAD_TRIPS]: () => this._handleReloadTrips(),\n      [CommunicationActions.DELETE_TRIP]: () => this._handleDeleteTrip()\n    };\n\n    const handler = actionHandlers[message.action];\n    if (handler) {\n      handler();\n    } else {\n      console.warn(`Unhandled action: ${message.action}`, message.payload);\n    }\n  }\n\n  /**\n   * Handles the logout action.\n   */\n  private _handleLogout(): void {\n    this._authService.logout();\n    this._router.navigate(['/login']);\n  }\n\n  /**\n   * Handles the reload trips action.\n   */\n  private _handleReloadTrips(): void {\n    // Dispatch the NgRx action to reload trips\n    this._store.dispatch(TripActions.loadTrips());\n  }\n\n  /**\n   * Handles the reload trips action.\n   */\n  private _handleDeleteTrip(): void {\n    // Dispatch the NgRx action to delete trip and navigate to list\n    this._store.dispatch(TripActions.loadTrips());\n    this._router.navigate(['/trip/list']);\n  }\n\n  /**\n   * Cleans up resources when the service is destroyed.\n   */\n  ngOnDestroy(): void {\n    this.channel.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CarRentalExpenseModel.html":{"url":"interfaces/CarRentalExpenseModel.html","title":"interface - CarRentalExpenseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CarRentalExpenseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/car-rental-expense.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ExpenseBaseModel\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            carName\n                                        \n                                \n                                \n                                        \n                                            dropOffDateTime\n                                        \n                                \n                                \n                                        \n                                            dropOffLocation\n                                        \n                                \n                                \n                                        \n                                            pickUpDateTime\n                                        \n                                \n                                \n                                        \n                                            pickUpLocation\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        carName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        carName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dropOffDateTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dropOffDateTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dropOffLocation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dropOffLocation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pickUpDateTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pickUpDateTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pickUpLocation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pickUpLocation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ExpenseBaseModel } from \"./expense-base.model\";\n\nexport interface CarRentalExpenseModel extends ExpenseBaseModel {\n    carName: string;\n    pickUpDateTime: Date;\n    dropOffDateTime: Date;\n    pickUpLocation: string;\n    dropOffLocation: string;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommunicationService.html":{"url":"injectables/CommunicationService.html","title":"injectable - CommunicationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommunicationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/communication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                    Readonly\n                                channelName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _handleDeleteTrip\n                            \n                            \n                                    Private\n                                _handleLogout\n                            \n                            \n                                    Private\n                                _handleMessage\n                            \n                            \n                                    Private\n                                _handleReloadTrips\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_store: Store, _router: Router, _authService: AuthService, _ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/communication.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _handleDeleteTrip\n                        \n                    \n                \n            \n            \n                \n                        \n                    _handleDeleteTrip()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/communication.service.ts:98\n                        \n                    \n\n\n            \n                \n                        Handles the reload trips action.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _handleLogout\n                        \n                    \n                \n            \n            \n                \n                        \n                    _handleLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/communication.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Handles the logout action.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _handleMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    _handleMessage(message: BroadcastMessage)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/communication.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Handles incoming messages and routes them to the appropriate logic.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            BroadcastMessage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The received broadcast message.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _handleReloadTrips\n                        \n                    \n                \n            \n            \n                \n                        \n                    _handleReloadTrips()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/communication.service.ts:90\n                        \n                    \n\n\n            \n                \n                        Handles the reload trips action.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/communication.service.ts:107\n                        \n                    \n\n\n            \n                \n                        Cleans up resources when the service is destroyed.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(action: CommunicationActions, payload?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/communication.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Sends a message to all open tabs/windows.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                            CommunicationActions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The action to perform (e.g., logout, reloadTrips).\n\n                                            \n                                        \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Optional data associated with the action.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BroadcastChannel\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/communication.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        channelName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'trip-sync-channel'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/communication.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone, OnDestroy } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../auth/auth.service';\nimport * as TripActions from '../../store/trip/trip.actions';\n\nexport enum CommunicationActions {\n  LOGOUT = 'logout',\n  RELOAD_TRIPS = 'reloadTrips',\n  DELETE_TRIP = 'deleteTrip'\n}\n\ninterface BroadcastMessage {\n  action: CommunicationActions;\n  payload?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommunicationService implements OnDestroy {\n  private channel: BroadcastChannel;\n  private readonly channelName = 'trip-sync-channel';\n\n  constructor(\n    private _store: Store,\n    private _router: Router,\n    private _authService: AuthService,\n    private _ngZone: NgZone\n  ) {\n    this.channel = new BroadcastChannel(this.channelName);\n\n    // Listen for incoming messages\n    this.channel.onmessage = (message) => {\n      this._ngZone.run(() =>\n        this._handleMessage(message.data as BroadcastMessage)\n      );\n    };\n  }\n\n  /**\n   * Sends a message to all open tabs/windows.\n   * @param action The action to perform (e.g., logout, reloadTrips).\n   * @param payload Optional data associated with the action.\n   */\n  sendMessage(action: CommunicationActions, payload?: any): void {\n    if (!action) {\n      console.error('sendMessage: action is required');\n      return;\n    }\n    const message: BroadcastMessage = { action, payload };\n    this.channel.postMessage(message);\n  }\n\n  /**\n   * Handles incoming messages and routes them to the appropriate logic.\n   * @param message The received broadcast message.\n   */\n  private _handleMessage(message: BroadcastMessage): void {\n    if (!message || !message.action) {\n      console.warn('Received an invalid message:', message);\n      return;\n    }\n\n    const actionHandlers: Record void> = {\n      [CommunicationActions.LOGOUT]: () => this._handleLogout(),\n      [CommunicationActions.RELOAD_TRIPS]: () => this._handleReloadTrips(),\n      [CommunicationActions.DELETE_TRIP]: () => this._handleDeleteTrip()\n    };\n\n    const handler = actionHandlers[message.action];\n    if (handler) {\n      handler();\n    } else {\n      console.warn(`Unhandled action: ${message.action}`, message.payload);\n    }\n  }\n\n  /**\n   * Handles the logout action.\n   */\n  private _handleLogout(): void {\n    this._authService.logout();\n    this._router.navigate(['/login']);\n  }\n\n  /**\n   * Handles the reload trips action.\n   */\n  private _handleReloadTrips(): void {\n    // Dispatch the NgRx action to reload trips\n    this._store.dispatch(TripActions.loadTrips());\n  }\n\n  /**\n   * Handles the reload trips action.\n   */\n  private _handleDeleteTrip(): void {\n    // Dispatch the NgRx action to delete trip and navigate to list\n    this._store.dispatch(TripActions.loadTrips());\n    this._router.navigate(['/trip/list']);\n  }\n\n  /**\n   * Cleans up resources when the service is destroyed.\n   */\n  ngOnDestroy(): void {\n    this.channel.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDialogComponent.html":{"url":"components/ConfirmDialogComponent.html","title":"component - ConfirmDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/confirm-dialog/confirm-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-dialog\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./confirm-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./confirm-dialog.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                dialogRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {MatDialogModule} from '@angular/material/dialog';\n@Component({\n  selector: 'app-confirm-dialog',\n  standalone: true,\n  imports: [MatDialogModule],\n  templateUrl: './confirm-dialog.component.html',\n  styleUrl: './confirm-dialog.component.scss'\n})\nexport class ConfirmDialogComponent {\n  readonly dialogRef = inject(MatDialogRef);\n}\n\n    \n\n    \n        Delete trip\n\n   Are you sure you like to delete this trip?\n\n\n    \n        No\n        Yes\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Delete trip   Are you sure you like to delete this trip?            No        Yes    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'ToasterComponent', 'selector': 'app-toaster'},{'name': 'TripDetailComponent', 'selector': 'app-trip-detail'},{'name': 'TripListComponent', 'selector': 'app-trip-list'}];\n    var DIRECTIVES = [{'name': 'TogglePasswordDirective', 'selector': '[appTogglePassword]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dashboard.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [],\n  templateUrl: './dashboard.component.html',\n  styleUrl: './dashboard.component.scss'\n})\nexport class DashboardComponent {}\n\n    \n\n    \n        dashboard works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'dashboard works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'ToasterComponent', 'selector': 'app-toaster'},{'name': 'TripDetailComponent', 'selector': 'app-trip-detail'},{'name': 'TripListComponent', 'selector': 'app-trip-list'}];\n    var DIRECTIVES = [{'name': 'TogglePasswordDirective', 'selector': '[appTogglePassword]'}];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExpenseBaseModel.html":{"url":"interfaces/ExpenseBaseModel.html","title":"interface - ExpenseBaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExpenseBaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/expense-base.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            notes\n                                        \n                                \n                                \n                                        \n                                            totalPrice\n                                        \n                                \n                                \n                                        \n                                            tripId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tripId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tripId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ExpenseBaseModel {\n  id: string;\n  tripId: string;\n  totalPrice: number;\n  notes?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FlightExpenseModel.html":{"url":"interfaces/FlightExpenseModel.html","title":"interface - FlightExpenseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FlightExpenseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/flight-expense.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ExpenseBaseModel\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            airline\n                                        \n                                \n                                \n                                        \n                                            arrivalDateTime\n                                        \n                                \n                                \n                                        \n                                            arrivalLocation\n                                        \n                                \n                                \n                                        \n                                            departureDateTime\n                                        \n                                \n                                \n                                        \n                                            departureLocation\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        airline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        airline:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrivalDateTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        arrivalDateTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrivalLocation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        arrivalLocation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departureDateTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        departureDateTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departureLocation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        departureLocation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ExpenseBaseModel } from './expense-base.model';\n\nexport interface FlightExpenseModel extends ExpenseBaseModel {\n  airline: string;\n  departureLocation: string;\n  arrivalLocation: string;\n  departureDateTime: Date;\n  arrivalDateTime: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/layout/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss'\n})\nexport class FooterComponent {\n\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'ToasterComponent', 'selector': 'app-toaster'},{'name': 'TripDetailComponent', 'selector': 'app-trip-detail'},{'name': 'TripListComponent', 'selector': 'app-trip-list'}];\n    var DIRECTIVES = [{'name': 'TogglePasswordDirective', 'selector': '[appTogglePassword]'}];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/layout/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButtonModule\n                            MatIconModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _communicationService\n                            \n                            \n                                    Private\n                                _router\n                            \n                            \n                                authService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onLogout\n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/layout/header/header.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _communicationService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CommunicationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/layout/header/header.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/layout/header/header.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/layout/header/header.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { AuthService } from '../../../auth/auth.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Router } from '@angular/router';\nimport {\n  CommunicationActions,\n  CommunicationService\n} from '../../services/communication.service';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [MatButtonModule, MatIconModule],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss'\n})\nexport class HeaderComponent {\n  authService = inject(AuthService);\n  private _router = inject(Router);\n  private _communicationService = inject(CommunicationService);\n\n  onLogout(): void {\n    this.authService.logout();\n    this._communicationService.sendMessage(CommunicationActions.LOGOUT);\n    this._router.navigate(['/login']);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Expense Management System\n      \n    \n  \n\n  @if (authService.isLoggedIn) {\n    \n      \n        logout\n        Logout\n      \n    \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Expense Management System              @if (authService.isLoggedIn) {                  logout        Logout            }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'ToasterComponent', 'selector': 'app-toaster'},{'name': 'TripDetailComponent', 'selector': 'app-trip-detail'},{'name': 'TripListComponent', 'selector': 'app-trip-list'}];\n    var DIRECTIVES = [{'name': 'TogglePasswordDirective', 'selector': '[appTogglePassword]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotelExpenseModel.html":{"url":"interfaces/HotelExpenseModel.html","title":"interface - HotelExpenseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotelExpenseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/hotel-expense-model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ExpenseBaseModel\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            checkInDate\n                                        \n                                \n                                \n                                        \n                                            checkOutDate\n                                        \n                                \n                                \n                                        \n                                            hotelName\n                                        \n                                \n                                \n                                        \n                                            location\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        checkInDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        checkInDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checkOutDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        checkOutDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hotelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hotelName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ExpenseBaseModel } from \"./expense-base.model\";\n\nexport interface HotelExpenseModel extends ExpenseBaseModel {\n    hotelName: string;\n    location: string;\n    checkInDate: Date;\n    checkOutDate: Date;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutComponent.html":{"url":"components/LayoutComponent.html","title":"component - LayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/layout/layout/layout.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                SidenavComponent\n                            RouterModule\n                                HeaderComponent\n                                FooterComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./layout.component.html\n            \n\n\n\n            \n                styleUrl\n                ./layout.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { SidenavComponent } from '../sidenav/sidenav.component';\nimport { RouterModule } from '@angular/router';\nimport { HeaderComponent } from '../header/header.component';\nimport { FooterComponent } from '../footer/footer.component';\n\n@Component({\n  selector: 'app-layout',\n  standalone: true,\n  imports: [\n    CommonModule,\n    SidenavComponent,\n    RouterModule,\n    HeaderComponent,\n    FooterComponent\n  ],\n  templateUrl: './layout.component.html',\n  styleUrl: './layout.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LayoutComponent {}\n\n    \n\n    \n        \n  \n    \n    \n\n    \n    \n  \n\n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'ToasterComponent', 'selector': 'app-toaster'},{'name': 'TripDetailComponent', 'selector': 'app-trip-detail'},{'name': 'TripListComponent', 'selector': 'app-trip-list'}];\n    var DIRECTIVES = [{'name': 'TogglePasswordDirective', 'selector': '[appTogglePassword]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                                TogglePasswordDirective\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _authService\n                            \n                            \n                                    Private\n                                _fb\n                            \n                            \n                                    Private\n                                _router\n                            \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login/login.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this._fb.group({\n    name: ['', Validators.required],\n    password: ['', Validators.required]\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators\n} from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { tap } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { TogglePasswordDirective } from '../../shared/directives/toggle-password.directive';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [ReactiveFormsModule, CommonModule, TogglePasswordDirective],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss'\n})\nexport class LoginComponent {\n  private _fb = inject(FormBuilder);\n  private _authService = inject(AuthService);\n  private _router = inject(Router);\n\n  form: FormGroup = this._fb.group({\n    name: ['', Validators.required],\n    password: ['', Validators.required]\n  });\n\n  onSubmit(): void {\n    if (this.form.valid) {\n      this._authService\n        .login(this.form.value)\n        .pipe(\n          tap(() => {\n            this._router.navigate(['/trip']);\n          })\n        )\n        .subscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Login\n    \n      \n      \n        \n          Name\n        \n        \n        \n          \n          \n        \n      \n\n      \n      \n        \n          Password\n        \n        \n          \n          \n            \n            \n              \n              \n            \n          \n        \n        \n          \n          \n        \n      \n\n      \n      \n        Login\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Login                                  Name                                                                                        Password                                                                                                                                                                                    Login            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'ToasterComponent', 'selector': 'app-toaster'},{'name': 'TripDetailComponent', 'selector': 'app-trip-detail'},{'name': 'TripListComponent', 'selector': 'app-trip-list'}];\n    var DIRECTIVES = [{'name': 'TogglePasswordDirective', 'selector': '[appTogglePassword]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/not-found/not-found.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                \n            \n\n\n            \n                styles\n                \n            \n\n            \n                template\n                \n    404\n    \n      Oops! The page you're looking for doesn't exist.\n    \n    \n      Go Back Home\n    \n  \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-not-found',\n  standalone: true,\n  imports: [RouterModule],\n  template: `\n    404\n    \n      Oops! The page you're looking for doesn't exist.\n    \n    \n      Go Back Home\n    \n   `,\n  styles: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NotFoundComponent {}\n\n    \n\n\n    \n            \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    404          Oops! The page you\\'re looking for doesn\\'t exist.              Go Back Home      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'ToasterComponent', 'selector': 'app-toaster'},{'name': 'TripDetailComponent', 'selector': 'app-trip-detail'},{'name': 'TripListComponent', 'selector': 'app-trip-list'}];\n    var DIRECTIVES = [{'name': 'TogglePasswordDirective', 'selector': '[appTogglePassword]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/layout/sidenav/sidenav.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sidenav.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-sidenav',\n  standalone: true,\n  imports: [RouterModule],\n  templateUrl: './sidenav.component.html',\n  styleUrl: './sidenav.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SidenavComponent {}\n\n    \n\n    \n        \n  \n  \n    \n    \n    \n      Open drawer\n    \n  \n  \n    \n    \n      \n        \n        \n          \n            \n            \n            \n            \n          \n        \n        \n      \n      \n      \n        Trips\n        Dashboard\n        Menu 3\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Open drawer                                                                                                                                                    Trips        Dashboard        Menu 3            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'ToasterComponent', 'selector': 'app-toaster'},{'name': 'TripDetailComponent', 'selector': 'app-trip-detail'},{'name': 'TripListComponent', 'selector': 'app-trip-list'}];\n    var DIRECTIVES = [{'name': 'TogglePasswordDirective', 'selector': '[appTogglePassword]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaxiExpenseModel.html":{"url":"interfaces/TaxiExpenseModel.html","title":"interface - TaxiExpenseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TaxiExpenseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/taxi-expense.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ExpenseBaseModel\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dateTime\n                                        \n                                \n                                \n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dateTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ExpenseBaseModel } from \"./expense-base.model\";\n\nexport interface TaxiExpenseModel extends ExpenseBaseModel {\n  from: string;\n  to: string;\n  dateTime: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/toaster.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _toastContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _createToastElement\n                            \n                            \n                                    Private\n                                _getOrCreateToastContainer\n                            \n                            \n                                    Private\n                                _scheduleToastRemoval\n                            \n                            \n                                showToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/toaster.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _createToastElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    _createToastElement(type: \"info\" | \"success\" | \"error\" | \"warning\", message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/toaster.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Create a toast element.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                        \"info\" | \"success\" | \"error\" | \"warning\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Type of the toast.\n\n                                            \n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Message to display.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HTMLElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _getOrCreateToastContainer\n                        \n                    \n                \n            \n            \n                \n                        \n                    _getOrCreateToastContainer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/toaster.service.ts:36\n                        \n                    \n\n\n            \n                \n                        Get or create the toast container element.\n\n\n                        \n                            Returns :     HTMLElement\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _scheduleToastRemoval\n                        \n                    \n                \n            \n            \n                \n                        \n                    _scheduleToastRemoval(toastElement: HTMLElement, duration: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/toaster.service.ts:67\n                        \n                    \n\n\n            \n                \n                        Schedule removal of a toast element after a specific duration.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                toastElement\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Toast element to remove.\n\n                                            \n                                        \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Duration in milliseconds.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showToast\n                        \n                    \n                \n            \n            \n                \nshowToast(type: \"info\" | \"success\" | \"error\" | \"warning\", message: string, duration: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/toaster.service.ts:19\n                        \n                    \n\n\n            \n                \n                        Show a toast notification.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                        \"info\" | \"success\" | \"error\" | \"warning\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    Type of the toast ('info', 'success', 'error', 'warning').\n\n                                            \n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    Message to display.\n\n                                            \n                                        \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3000\n                                            \n\n                                            \n                                                    Duration in milliseconds (default: 3000ms).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _toastContainer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/toaster.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n  private _toastContainer: HTMLElement;\n\n  constructor() {\n    this._toastContainer = this._getOrCreateToastContainer();\n  }\n\n  /**\n   * Show a toast notification.\n   * @param type Type of the toast ('info', 'success', 'error', 'warning').\n   * @param message Message to display.\n   * @param duration Duration in milliseconds (default: 3000ms).\n   */\n  showToast(\n    type: 'info' | 'success' | 'error' | 'warning',\n    message: string,\n    duration = 3000\n  ): void {\n    const toastElement = this._createToastElement(type, message);\n\n    // Append toast to container\n    this._toastContainer.appendChild(toastElement);\n\n    // Auto-remove toast after duration\n    this._scheduleToastRemoval(toastElement, duration);\n  }\n\n  /**\n   * Get or create the toast container element.\n   */\n  private _getOrCreateToastContainer(): HTMLElement {\n    let container = document.getElementById('toast-container');\n    if (!container) {\n      container = document.createElement('div');\n      container.id = 'toast-container';\n      container.className = 'toast toast-top toast-end';\n      document.body.appendChild(container);\n    }\n    return container;\n  }\n\n  /**\n   * Create a toast element.\n   * @param type Type of the toast.\n   * @param message Message to display.\n   */\n  private _createToastElement(\n    type: 'info' | 'success' | 'error' | 'warning',\n    message: string\n  ): HTMLElement {\n    const toastElement = document.createElement('div');\n    toastElement.className = `alert alert-${type}`;\n    toastElement.innerHTML = `${message}`;\n    return toastElement;\n  }\n\n  /**\n   * Schedule removal of a toast element after a specific duration.\n   * @param toastElement Toast element to remove.\n   * @param duration Duration in milliseconds.\n   */\n  private _scheduleToastRemoval(\n    toastElement: HTMLElement,\n    duration: number\n  ): void {\n    setTimeout(() => {\n      if (this._toastContainer.contains(toastElement)) {\n        this._toastContainer.removeChild(toastElement);\n      }\n    }, duration);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToasterComponent.html":{"url":"components/ToasterComponent.html","title":"component - ToasterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToasterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/toaster/toaster.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toaster\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n            \n                styles\n                \n            \n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'app-toaster',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` `,\n  styles: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToasterComponent {}\n\n    \n\n\n    \n            \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'ToasterComponent', 'selector': 'app-toaster'},{'name': 'TripDetailComponent', 'selector': 'app-trip-detail'},{'name': 'TripListComponent', 'selector': 'app-trip-list'}];\n    var DIRECTIVES = [{'name': 'TogglePasswordDirective', 'selector': '[appTogglePassword]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToasterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TogglePasswordDirective.html":{"url":"directives/TogglePasswordDirective.html","title":"directive - TogglePasswordDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  TogglePasswordDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/toggle-password.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appTogglePassword]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _el\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                onClick\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/toggle-password.directive.ts:10\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onClick()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click')\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/directives/toggle-password.directive.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _el\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ElementRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/directives/toggle-password.directive.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, HostListener, inject } from '@angular/core';\n\n@Directive({\n  selector: '[appTogglePassword]',\n  standalone: true\n})\nexport class TogglePasswordDirective {\n  private _el = inject(ElementRef);\n\n  @HostListener('click') onClick() {\n    const inputElement = this._el.nativeElement\n      .closest('div')\n      .querySelector('input');\n\n    if (inputElement) {\n      inputElement.type =\n        inputElement.type === 'password' ? 'text' : 'password';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TripDetailComponent.html":{"url":"components/TripDetailComponent.html","title":"component - TripDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TripDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/trip/trip-detail/trip-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trip-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            MatFormFieldModule\n                            MatInputModule\n                            MatSelectModule\n                            MatButtonModule\n                            MatIconModule\n                            MatDatepickerModule\n                            MatNativeDateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./trip-detail.component.html\n            \n\n\n\n            \n                styleUrl\n                ./trip-detail.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _authService\n                            \n                            \n                                    Private\n                                _communicationService\n                            \n                            \n                                    Private\n                                _fb\n                            \n                            \n                                    Private\n                                _route\n                            \n                            \n                                    Private\n                                _router\n                            \n                            \n                                    Private\n                                _store\n                            \n                            \n                                    Private\n                                _toasterService\n                            \n                            \n                                isApprover\n                            \n                            \n                                isDraft\n                            \n                            \n                                isEndUser\n                            \n                            \n                                isFinancer\n                            \n                            \n                                isTripApproved\n                            \n                            \n                                isTripSentForApproval\n                            \n                            \n                                trip$\n                            \n                            \n                                tripForm\n                            \n                            \n                                tripId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _calculateTotalExpense\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onApproveTrip\n                            \n                            \n                                onBack\n                            \n                            \n                                onSendForApproval\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _calculateTotalExpense\n                        \n                    \n                \n            \n            \n                \n                        \n                    _calculateTotalExpense(trip: TripModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/trip/trip-detail/trip-detail.component.ts:233\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                trip\n                                            \n                                                            TripModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/trip/trip-detail/trip-detail.component.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onApproveTrip\n                        \n                    \n                \n            \n            \n                \nonApproveTrip()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/trip/trip-detail/trip-detail.component.ts:207\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBack\n                        \n                    \n                \n            \n            \n                \nonBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/trip/trip-detail/trip-detail.component.ts:229\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSendForApproval\n                        \n                    \n                \n            \n            \n                \nonSendForApproval()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/trip/trip-detail/trip-detail.component.ts:180\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/trip/trip-detail/trip-detail.component.ts:153\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-detail/trip-detail.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _communicationService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CommunicationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-detail/trip-detail.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-detail/trip-detail.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-detail/trip-detail.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-detail/trip-detail.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _store\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Store)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-detail/trip-detail.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _toasterService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastService)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-detail/trip-detail.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isApprover\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._authService.user?.role === Role.APPROVER\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-detail/trip-detail.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDraft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-detail/trip-detail.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEndUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._authService.user?.role === Role.END_USER\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-detail/trip-detail.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFinancer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._authService.user?.role === Role.FINANCE\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-detail/trip-detail.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTripApproved\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-detail/trip-detail.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTripSentForApproval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-detail/trip-detail.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trip$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable | Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-detail/trip-detail.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tripForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this._fb.group({\n    name: ['', [Validators.required]],\n    duration: ['', [Validators.required]],\n    startDate: ['', [Validators.required]],\n    endDate: ['', [Validators.required]],\n    status: [{ value: '', disabled: true }, [Validators.required]],\n    financeStatus: [{ value: '', disabled: true }],\n    totalExpense: [{ value: 0, disabled: true }],\n    comment: [{ value: '', disabled: !this.isApprover }, [Validators.required]],\n    expenses: this._fb.group({\n      carRental: this._fb.group({\n        carName: [''],\n        pickUpDate: [''],\n        dropOffDate: [''],\n        pickUpLocation: [''],\n        dropOffLocation: [''],\n        totalPrice: [0]\n      }),\n      hotel: this._fb.group({\n        hotelName: [''],\n        location: [''],\n        checkInDate: [''],\n        checkOutDate: [''],\n        totalPrice: [0]\n      }),\n      flight: this._fb.group({\n        airline: [''],\n        from: [''],\n        to: [''],\n        departureDate: [''],\n        arrivalDate: [''],\n        totalPrice: [0]\n      }),\n      taxi: this._fb.group({\n        from: [''],\n        to: [''],\n        timeAndDate: [''],\n        totalPrice: [0]\n      })\n    })\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-detail/trip-detail.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tripId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-detail/trip-detail.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, inject, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  ReactiveFormsModule,\n  Validators\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { filter, Observable, Subscription, tap } from 'rxjs';\nimport { TripModel } from '../../../shared/models/trip.model';\nimport { selectTripById } from '../../../store/trip/trip.selectors';\nimport * as TripActions from '../../../store/trip/trip.actions';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ToastService } from '../../../core/services/toaster.service';\nimport { AuthService } from '../../../auth/auth.service';\nimport { Role } from '../../../shared/enums/role.enum';\nimport { TripStatus } from '../../../shared/enums/trip-status.enum';\nimport {\n  CommunicationActions,\n  CommunicationService\n} from '../../../core/services/communication.service';\n\n@Component({\n  selector: 'app-trip-detail',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDatepickerModule,\n    MatNativeDateModule\n  ],\n  templateUrl: './trip-detail.component.html',\n  styleUrl: './trip-detail.component.scss'\n})\nexport class TripDetailComponent implements OnInit {\n  trip$!: Observable | Subscription;\n  tripId!: string;\n\n  private _route = inject(ActivatedRoute);\n  private _store = inject(Store);\n  private _fb = inject(FormBuilder);\n  private _toasterService = inject(ToastService);\n  private _router = inject(Router);\n  private _authService = inject(AuthService);\n  private _communicationService = inject(CommunicationService);\n\n  isApprover = this._authService.user?.role === Role.APPROVER;\n  isFinancer = this._authService.user?.role === Role.FINANCE;\n  isEndUser = this._authService.user?.role === Role.END_USER;\n  isTripSentForApproval: boolean = false;\n  isTripApproved: boolean = false;\n  isDraft: boolean = false;\n\n  tripForm: FormGroup = this._fb.group({\n    name: ['', [Validators.required]],\n    duration: ['', [Validators.required]],\n    startDate: ['', [Validators.required]],\n    endDate: ['', [Validators.required]],\n    status: [{ value: '', disabled: true }, [Validators.required]],\n    financeStatus: [{ value: '', disabled: true }],\n    totalExpense: [{ value: 0, disabled: true }],\n    comment: [{ value: '', disabled: !this.isApprover }, [Validators.required]],\n    expenses: this._fb.group({\n      carRental: this._fb.group({\n        carName: [''],\n        pickUpDate: [''],\n        dropOffDate: [''],\n        pickUpLocation: [''],\n        dropOffLocation: [''],\n        totalPrice: [0]\n      }),\n      hotel: this._fb.group({\n        hotelName: [''],\n        location: [''],\n        checkInDate: [''],\n        checkOutDate: [''],\n        totalPrice: [0]\n      }),\n      flight: this._fb.group({\n        airline: [''],\n        from: [''],\n        to: [''],\n        departureDate: [''],\n        arrivalDate: [''],\n        totalPrice: [0]\n      }),\n      taxi: this._fb.group({\n        from: [''],\n        to: [''],\n        timeAndDate: [''],\n        totalPrice: [0]\n      })\n    })\n  });\n\n  ngOnInit(): void {\n    const id = this._route.snapshot.paramMap.get('TRIP_ID');\n\n    if (id) {\n      this._store.dispatch(TripActions.loadTripById({ id }));\n      this.tripId = id;\n\n      this.trip$ = this._store\n        .select(selectTripById(id || ''))\n        .pipe(\n          filter((state): state is TripModel => !!state),\n          tap((state) => {\n            this.tripForm.patchValue(state);\n\n            this.isTripSentForApproval =\n              state.status === TripStatus.PENDING_APPROVAL;\n            this.isTripApproved = state.status === TripStatus.APPROVED;\n            this.isDraft = state.status === TripStatus.DRAFT;\n\n            if (\n              (state.id && state.status === TripStatus.APPROVED) ||\n              state.status === TripStatus.PENDING_APPROVAL\n            ) {\n              this.tripForm.disable();\n            }\n            if (\n              state.status === TripStatus.PENDING_APPROVAL &&\n              this.isApprover\n            ) {\n              this.tripForm.get('comment')?.enable();\n              this.tripForm.get('comment')?.addValidators(Validators.required);\n            }\n            if (this.isFinancer && state.status === TripStatus.APPROVED) {\n              this.tripForm.get('financeStatus')?.enable();\n              this.tripForm\n                .get('financeStatus')\n                ?.addValidators(Validators.required);\n            }\n          })\n        )\n        .subscribe();\n    }\n  }\n\n  onSubmit(): void {\n    if (this.tripForm.invalid) {\n      return;\n    }\n\n    const tripData = this.tripForm.getRawValue();\n\n    const payload = {\n      ...tripData,\n      totalExpense: this._calculateTotalExpense(tripData),\n      status: tripData.status || 'draft'\n    };\n\n    if (this.tripId) {\n      this._store.dispatch(\n        TripActions.updateTrip({ id: this.tripId, trip: payload })\n      );\n      this._communicationService.sendMessage(CommunicationActions.RELOAD_TRIPS);\n      this._toasterService.showToast('success', 'Trip Updated Succesfully');\n    } else {\n      this._store.dispatch(TripActions.addTrip({ trip: payload }));\n      this._communicationService.sendMessage(CommunicationActions.RELOAD_TRIPS);\n      this._toasterService.showToast('success', 'Trip created Succesfully');\n      this._router.navigate(['../'], { relativeTo: this._route });\n    }\n  }\n\n  onSendForApproval(): void {\n    const tripData = this.tripForm.getRawValue();\n    const payload = {\n      ...tripData,\n      totalExpense: this._calculateTotalExpense(tripData),\n      status: TripStatus.PENDING_APPROVAL\n    };\n\n    this._store.dispatch(\n      TripActions.updateTrip({ id: this.tripId, trip: payload })\n    );\n\n    this._communicationService.sendMessage(CommunicationActions.RELOAD_TRIPS);\n\n    this.tripForm.patchValue({\n      status: TripStatus.PENDING_APPROVAL\n    });\n\n    this.tripForm.disable();\n    this.isTripSentForApproval = true;\n    this.isDraft = false;\n    this._toasterService.showToast(\n      'success',\n      'Trip sent for approval successfully'\n    );\n  }\n\n  onApproveTrip(): void {\n    const form = this.tripForm.getRawValue();\n    const updatedTrip = {\n      ...form,\n      status: TripStatus.APPROVED\n    };\n\n    this._store.dispatch(\n      TripActions.updateTrip({ id: this.tripId, trip: updatedTrip })\n    );\n\n    this._communicationService.sendMessage(CommunicationActions.RELOAD_TRIPS);\n\n    this.tripForm.patchValue({\n      status: TripStatus.APPROVED\n    });\n\n    this.tripForm.disable();\n    this.isTripApproved = true;\n    this._toasterService.showToast('success', 'Trip approved successfully');\n  }\n\n  onBack() {\n    this._router.navigate(['/trip/list']);\n  }\n\n  private _calculateTotalExpense(trip: TripModel): number {\n    const carRentalExpense = trip.expenses?.carRental?.totalPrice || 0;\n    const hotelExpense = trip.expenses?.hotel?.totalPrice || 0;\n    const flightExpense = trip.expenses?.flight?.totalPrice || 0;\n    const taxiExpense = trip.expenses?.taxi?.totalPrice || 0;\n\n    return carRentalExpense + hotelExpense + flightExpense + taxiExpense;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      Trip Details\n\n      \n        Trip Name\n        \n      \n\n      \n        Duration\n        \n      \n\n      \n        Start Date\n        \n        \n        \n      \n\n      \n        End Date\n        \n        \n        \n      \n\n      \n        Status\n        \n          Draft\n          Pending Approval\n          Approved\n          Canceled\n        \n      \n\n      \n        Total Expense\n        \n      \n    \n\n    \n      Finance Status\n      \n        Refunded\n        In Process\n      \n    \n\n    \n      \n      \n        Car Rental\n        \n          \n            Car Name\n            \n          \n\n          \n            Pick-Up Date\n            \n            \n            \n          \n\n          \n            Drop-Off Date\n            \n            \n            \n          \n\n          \n            Pick-Up Location\n            \n          \n\n          \n            Drop-Off Location\n            \n          \n\n          \n            Total Price\n            \n          \n        \n      \n\n      \n      \n        Hotel\n        \n          \n            Hotel Name\n            \n          \n\n          \n            Location\n            \n          \n\n          \n            Check-In Date\n            \n            \n            \n          \n\n          \n            Check-Out Date\n            \n            \n            \n          \n\n          \n            Total Price\n            \n          \n        \n      \n\n      \n      \n        Flight\n        \n          \n            Airline\n            \n          \n\n          \n            From\n            \n          \n\n          \n            To\n            \n          \n\n          \n            Departure Date\n            \n            \n            \n          \n\n          \n            Arrival Date\n            \n            \n            \n          \n\n          \n            Total Price\n            \n          \n        \n      \n\n      \n      \n        Taxi\n        \n          \n            From\n            \n          \n\n          \n            To\n            \n          \n\n          \n            Time and Date\n            \n            \n            \n          \n\n          \n            Total Price\n            \n          \n        \n      \n    \n\n    \n      \n      \n        Comment\n        \n      \n    \n\n    \n      \n        Back\n      \n      \n        @if (\n          (isEndUser && !isTripApproved && !isTripSentForApproval) || isFinancer\n        ) {\n          \n            Save\n          \n        }\n        @if (isEndUser && isDraft && tripId) {\n          \n            Send to Approver\n          \n        }\n        @if (isApprover && !isTripApproved && tripId) {\n          \n            Approve\n          \n        }\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Trip Details              Trip Name                            Duration                            Start Date                                            End Date                                            Status                  Draft          Pending Approval          Approved          Canceled                            Total Expense                            Finance Status              Refunded        In Process                                  Car Rental                              Car Name                                            Pick-Up Date                                                                    Drop-Off Date                                                                    Pick-Up Location                                            Drop-Off Location                                            Total Price                                                        Hotel                              Hotel Name                                            Location                                            Check-In Date                                                                    Check-Out Date                                                                    Total Price                                                        Flight                              Airline                                            From                                            To                                            Departure Date                                                                    Arrival Date                                                                    Total Price                                                        Taxi                              From                                            To                                            Time and Date                                                                    Total Price                                                                Comment                                    Back                    @if (          (isEndUser && !isTripApproved && !isTripSentForApproval) || isFinancer        ) {                      Save                  }        @if (isEndUser && isDraft && tripId) {                      Send to Approver                  }        @if (isApprover && !isTripApproved && tripId) {                      Approve                  }            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'ToasterComponent', 'selector': 'app-toaster'},{'name': 'TripDetailComponent', 'selector': 'app-trip-detail'},{'name': 'TripListComponent', 'selector': 'app-trip-list'}];\n    var DIRECTIVES = [{'name': 'TogglePasswordDirective', 'selector': '[appTogglePassword]'}];\n    var ACTUAL_COMPONENT = {'name': 'TripDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TripEffects.html":{"url":"injectables/TripEffects.html","title":"injectable - TripEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TripEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/trip/trip.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _actions$\n                            \n                            \n                                    Private\n                                _tripService\n                            \n                            \n                                addTrip$\n                            \n                            \n                                deleteTrip$\n                            \n                            \n                                loadTripById$\n                            \n                            \n                                loadTrips$\n                            \n                            \n                                updateTrip$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _actions$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Actions)\n                    \n                \n                    \n                        \n                                Defined in src/app/store/trip/trip.effects.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _tripService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TripService)\n                    \n                \n                    \n                        \n                                Defined in src/app/store/trip/trip.effects.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTrip$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this._actions$.pipe(\n      ofType(TripActions.addTrip),\n      mergeMap(({ trip }) =>\n        this._tripService.createTrip(trip).pipe(\n          map((newTrip) => TripActions.addTripSuccess({ trip: newTrip })),\n          catchError((error) =>\n            of(TripActions.addTripFailure({ error: error.message }))\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/store/trip/trip.effects.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTrip$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this._actions$.pipe(\n      ofType(TripActions.deleteTrip),\n      mergeMap(({ id }) =>\n        this._tripService.deleteTrip(id).pipe(\n          map(() => TripActions.deleteTripSuccess({ id })),\n          catchError((error) =>\n            of(TripActions.deleteTripFailure({ error: error.message }))\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/store/trip/trip.effects.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTripById$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this._actions$.pipe(\n      ofType(TripActions.loadTripById),\n      mergeMap(({ id }) =>\n        this._tripService.getTripById(id).pipe(\n          map((trip) => TripActions.loadTripByIdSuccess({ trip })),\n          catchError((error) =>\n            of(TripActions.loadTripByIdFailure({ error: error.message }))\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/store/trip/trip.effects.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTrips$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this._actions$.pipe(\n      ofType(TripActions.loadTrips),\n      mergeMap(() =>\n        this._tripService.getTrips().pipe(\n          map((trips) => TripActions.loadTripsSuccess({ trips })),\n          catchError((error) =>\n            of(TripActions.loadTripsFailure({ error: error.message }))\n          )\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/store/trip/trip.effects.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTrip$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this._actions$.pipe(\n      ofType(TripActions.updateTrip),\n      mergeMap(({ id, trip }) =>\n        this._tripService.updateTrip(id, trip).pipe(\n          map(() => TripActions.updateTripSuccess({ trip })),\n          catchError((error) => of(TripActions.updateTripFailure({ error })))\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/store/trip/trip.effects.ts:68\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\nimport * as TripActions from './trip.actions';\nimport { catchError, map, mergeMap, of } from 'rxjs';\nimport { TripService } from '../../core/services/trip.service';\n\n@Injectable()\nexport class TripEffects {\n  private _actions$ = inject(Actions);\n  private _tripService = inject(TripService);\n\n  loadTrips$ = createEffect(() =>\n    this._actions$.pipe(\n      ofType(TripActions.loadTrips),\n      mergeMap(() =>\n        this._tripService.getTrips().pipe(\n          map((trips) => TripActions.loadTripsSuccess({ trips })),\n          catchError((error) =>\n            of(TripActions.loadTripsFailure({ error: error.message }))\n          )\n        )\n      )\n    )\n  );\n\n  addTrip$ = createEffect(() =>\n    this._actions$.pipe(\n      ofType(TripActions.addTrip),\n      mergeMap(({ trip }) =>\n        this._tripService.createTrip(trip).pipe(\n          map((newTrip) => TripActions.addTripSuccess({ trip: newTrip })),\n          catchError((error) =>\n            of(TripActions.addTripFailure({ error: error.message }))\n          )\n        )\n      )\n    )\n  );\n\n  deleteTrip$ = createEffect(() =>\n    this._actions$.pipe(\n      ofType(TripActions.deleteTrip),\n      mergeMap(({ id }) =>\n        this._tripService.deleteTrip(id).pipe(\n          map(() => TripActions.deleteTripSuccess({ id })),\n          catchError((error) =>\n            of(TripActions.deleteTripFailure({ error: error.message }))\n          )\n        )\n      )\n    )\n  );\n\n  loadTripById$ = createEffect(() =>\n    this._actions$.pipe(\n      ofType(TripActions.loadTripById),\n      mergeMap(({ id }) =>\n        this._tripService.getTripById(id).pipe(\n          map((trip) => TripActions.loadTripByIdSuccess({ trip })),\n          catchError((error) =>\n            of(TripActions.loadTripByIdFailure({ error: error.message }))\n          )\n        )\n      )\n    )\n  );\n\n  updateTrip$ = createEffect(() =>\n    this._actions$.pipe(\n      ofType(TripActions.updateTrip),\n      mergeMap(({ id, trip }) =>\n        this._tripService.updateTrip(id, trip).pipe(\n          map(() => TripActions.updateTripSuccess({ trip })),\n          catchError((error) => of(TripActions.updateTripFailure({ error })))\n        )\n      )\n    )\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TripListComponent.html":{"url":"components/TripListComponent.html","title":"component - TripListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TripListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/trip/trip-list/trip-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trip-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                            MatTableModule\n                            MatPaginatorModule\n                            MatSortModule\n                            MatButtonModule\n                            MatIconModule\n                            MatInputModule\n                            MatFormFieldModule\n                \n            \n\n            \n                styleUrls\n                ./trip-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./trip-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _authService\n                            \n                            \n                                    Private\n                                _communicationService\n                            \n                            \n                                    Private\n                                _router\n                            \n                            \n                                    Private\n                                _store\n                            \n                            \n                                    Private\n                                _toasterService\n                            \n                            \n                                dataSource\n                            \n                            \n                                    Readonly\n                                dialog\n                            \n                            \n                                dialogRef\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                isApprover\n                            \n                            \n                                isEndUser\n                            \n                            \n                                isFinance\n                            \n                            \n                                    \n                                paginator\n                            \n                            \n                                    \n                                sort\n                            \n                            \n                                trips$\n                            \n                            \n                                tripStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _loadTrips\n                            \n                            \n                                applyFilter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDelete\n                            \n                            \n                                onUpdate\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _loadTrips\n                        \n                    \n                \n            \n            \n                \n                        \n                    _loadTrips()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/trip/trip-list/trip-list.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/trip/trip-list/trip-list.component.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/trip/trip-list/trip-list.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/trip/trip-list/trip-list.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpdate\n                        \n                    \n                \n            \n            \n                \nonUpdate(id: TripModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/trip/trip-list/trip-list.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            TripModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/trip/trip-list/trip-list.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         MatDialogRef\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-list/trip-list.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _communicationService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CommunicationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-list/trip-list.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-list/trip-list.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _store\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Store)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-list/trip-list.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _toasterService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastService)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-list/trip-list.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MatTableDataSource()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-list/trip-list.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatDialog)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-list/trip-list.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-list/trip-list.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'name',\n    'duration',\n    'startDate',\n    'status',\n    'totalExpense',\n    'actions'\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-list/trip-list.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isApprover\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._authService.user?.role === Role.APPROVER\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-list/trip-list.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEndUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._authService.user?.role === Role.END_USER\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-list/trip-list.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFinance\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._authService.user?.role === Role.FINANCE\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-list/trip-list.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-list/trip-list.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-list/trip-list.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trips$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-list/trip-list.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tripStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TripStatus\n                    \n                \n                    \n                        \n                                Defined in src/app/features/trip/trip-list/trip-list.component.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, inject, OnInit, ViewChild } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable, tap } from 'rxjs';\nimport { AuthService } from '../../../auth/auth.service';\nimport { ToastService } from '../../../core/services/toaster.service';\nimport { Role } from '../../../shared/enums/role.enum';\nimport { TripStatus } from '../../../shared/enums/trip-status.enum';\nimport { TripModel } from '../../../shared/models/trip.model';\nimport { AppState } from '../../../store/app.state';\nimport * as TripActions from '../../../store/trip/trip.actions';\nimport {\n  selectAllTrips,\n  selectApprovedTrips\n} from '../../../store/trip/trip.selectors';\nimport { ConfirmDialogComponent } from '../../../shared/components/confirm-dialog/confirm-dialog.component';\nimport {\n  CommunicationActions,\n  CommunicationService\n} from '../../../core/services/communication.service';\n\n@Component({\n  selector: 'app-trip-list',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatFormFieldModule\n  ],\n  templateUrl: './trip-list.component.html',\n  styleUrls: ['./trip-list.component.scss']\n})\nexport class TripListComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  private _authService = inject(AuthService);\n  private _store = inject(Store);\n  private _toasterService = inject(ToastService);\n  private _router = inject(Router);\n  private _communicationService = inject(CommunicationService);\n\n  isEndUser = this._authService.user?.role === Role.END_USER;\n  isApprover = this._authService.user?.role === Role.APPROVER;\n  isFinance = this._authService.user?.role === Role.FINANCE;\n\n  displayedColumns: string[] = [\n    'name',\n    'duration',\n    'startDate',\n    'status',\n    'totalExpense',\n    'actions'\n  ];\n\n  dataSource = new MatTableDataSource();\n\n  trips$!: Observable;\n  tripStatus = TripStatus;\n  dialogRef!: MatDialogRef | null;\n\n  readonly dialog = inject(MatDialog);\n\n  openDialog(): MatDialogRef {\n    return this.dialog.open(ConfirmDialogComponent, {\n      width: '400px'\n    });\n  }\n\n  ngOnInit(): void {\n    this.trips$ =\n      this.isEndUser || this.isApprover\n        ? this._store.select(selectAllTrips)\n        : this._store.select(selectApprovedTrips);\n\n    this.trips$\n      .pipe(\n        tap((res) => {\n          this.dataSource = new MatTableDataSource(res);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        })\n      )\n      .subscribe();\n\n    this._loadTrips();\n  }\n\n  onUpdate(id: TripModel): void {\n    this._router.navigate(['/trip', id]);\n  }\n\n  onDelete(id: string): void {\n    this.dialogRef = this.openDialog();\n\n    this.dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        this._store.dispatch(TripActions.deleteTrip({ id }));\n        this._communicationService.sendMessage(\n          CommunicationActions.DELETE_TRIP\n        );\n        this._toasterService.showToast('success', 'Trip is deleted');\n        this._loadTrips();\n      }\n      this.dialogRef = null;\n    });\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  private _loadTrips(): void {\n    this._store.dispatch(TripActions.loadTrips());\n  }\n}\n\n    \n\n    \n        \n  \n    Filter\n    \n  \n  \n    @if (isEndUser) {\n      \n        Create Trip\n      \n    }\n  \n  \n    \n    \n      Trip Name\n      {{ trip.name }}\n    \n\n    \n    \n      Duration\n      {{ trip.duration }}\n    \n\n    \n    \n      Start Date\n      \n        {{ trip.startDate | date: 'dd/MM/yyyy' }}\n      \n    \n\n    \n    \n      Status\n      {{ trip.status | titlecase }}\n    \n\n    \n    \n      Total Expense\n      \n        {{ trip.totalExpense ? trip.totalExpense : 0 }}\n      \n    \n\n    \n    \n      Actions\n      \n        \n          \n            @if (\n              (isEndUser && trip.status === tripStatus.DRAFT) ||\n              (isApprover && trip.status === tripStatus.PENDING_APPROVAL) ||\n              (isFinance && trip.status === tripStatus.APPROVED)\n            ) {\n              edit\n            } @else {\n              remove_red_eye\n            }\n          \n        \n        @if (isEndUser && trip.status === tripStatus.DRAFT) {\n          \n            delete\n          \n        }\n      \n    \n\n    \n    \n    \n  \n\n  \n  \n  \n\n\n    \n\n    \n                \n                    ./trip-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Filter            @if (isEndUser) {              Create Trip          }                  Trip Name      {{ trip.name }}                  Duration      {{ trip.duration }}                  Start Date              {{ trip.startDate | date: \\'dd/MM/yyyy\\' }}                        Status      {{ trip.status | titlecase }}                  Total Expense              {{ trip.totalExpense ? trip.totalExpense : 0 }}                        Actions                                    @if (              (isEndUser && trip.status === tripStatus.DRAFT) ||              (isApprover && trip.status === tripStatus.PENDING_APPROVAL) ||              (isFinance && trip.status === tripStatus.APPROVED)            ) {              edit            } @else {              remove_red_eye            }                          @if (isEndUser && trip.status === tripStatus.DRAFT) {                      delete                  }                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'ToasterComponent', 'selector': 'app-toaster'},{'name': 'TripDetailComponent', 'selector': 'app-trip-detail'},{'name': 'TripListComponent', 'selector': 'app-trip-list'}];\n    var DIRECTIVES = [{'name': 'TogglePasswordDirective', 'selector': '[appTogglePassword]'}];\n    var ACTUAL_COMPONENT = {'name': 'TripListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TripModel.html":{"url":"interfaces/TripModel.html","title":"interface - TripModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TripModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/trip.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            approverNotes\n                                        \n                                \n                                \n                                        \n                                            createdBy\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            endDate\n                                        \n                                \n                                \n                                        \n                                            expenses\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            financeStatus\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            startDate\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            totalExpense\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        approverNotes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        approverNotes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expenses\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expenses:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        financeStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        financeStatus:         FinanceStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FinanceStatus\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         TripStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TripStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalExpense\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalExpense:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FinanceStatus } from '../enums/finance-status.enum';\nimport { TripStatus } from '../enums/trip-status.enum';\nimport { CarRentalExpenseModel } from './car-rental-expense.model';\nimport { FlightExpenseModel } from './flight-expense.model';\nimport { HotelExpenseModel } from './hotel-expense-model';\nimport { TaxiExpenseModel } from './taxi-expense.model';\n\nexport interface TripModel {\n  id: string;\n  name: string;\n  duration: number;\n  startDate: Date;\n  endDate: Date;\n  status: TripStatus;\n  createdBy: string;\n  approverNotes?: string;\n  financeStatus?: FinanceStatus;\n  totalExpense: number;\n  expenses: {\n    carRental: CarRentalExpenseModel;\n    hotel: HotelExpenseModel;\n    flight: FlightExpenseModel;\n    taxi: TaxiExpenseModel;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TripService.html":{"url":"injectables/TripService.html","title":"injectable - TripService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TripService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/trip.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _baseUrl\n                            \n                            \n                                    Private\n                                _http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTrip\n                            \n                            \n                                deleteTrip\n                            \n                            \n                                getTripById\n                            \n                            \n                                getTrips\n                            \n                            \n                                updateTrip\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTrip\n                        \n                    \n                \n            \n            \n                \ncreateTrip(trip: TripModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/trip.service.ts:36\n                        \n                    \n\n\n            \n                \n                        Create a new trip\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                trip\n                                            \n                                                            TripModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Trip object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTrip\n                        \n                    \n                \n            \n            \n                \ndeleteTrip(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/trip.service.ts:55\n                        \n                    \n\n\n            \n                \n                        Delete a trip by ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Trip ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTripById\n                        \n                    \n                \n            \n            \n                \ngetTripById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/trip.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Get a trip by ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Trip ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTrips\n                        \n                    \n                \n            \n            \n                \ngetTrips()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/trip.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Get all trips\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTrip\n                        \n                    \n                \n            \n            \n                \nupdateTrip(id: string, updatedTrip: TripModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/trip.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Update an existing trip\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Trip ID\n\n                                            \n                                        \n                                        \n                                                updatedTrip\n                                            \n                                                            TripModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Updated trip data\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api/trips'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/trip.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/trip.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TripModel } from '../../shared/models/trip.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TripService {\n  private readonly _baseUrl = 'api/trips';\n\n  private _http = inject(HttpClient);\n\n  /**\n   * Get all trips\n   * @returns Observable\n   */\n  getTrips(): Observable {\n    return this._http.get(this._baseUrl);\n  }\n\n  /**\n   * Get a trip by ID\n   * @param id Trip ID\n   * @returns Observable\n   */\n  getTripById(id: string): Observable {\n    return this._http.get(`${this._baseUrl}/${id}`);\n  }\n\n  /**\n   * Create a new trip\n   * @param trip Trip object\n   * @returns Observable\n   */\n  createTrip(trip: TripModel): Observable {\n    return this._http.post(this._baseUrl, trip);\n  }\n\n  /**\n   * Update an existing trip\n   * @param id Trip ID\n   * @param updatedTrip Updated trip data\n   * @returns Observable\n   */\n  updateTrip(id: string, updatedTrip: TripModel): Observable {\n    return this._http.put(`${this._baseUrl}/${id}`, updatedTrip);\n  }\n\n  /**\n   * Delete a trip by ID\n   * @param id Trip ID\n   * @returns Observable\n   */\n  deleteTrip(id: string): Observable {\n    return this._http.delete(`${this._baseUrl}/${id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TripState.html":{"url":"interfaces/TripState.html","title":"interface - TripState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TripState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/trip/trip.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            loading\n                                        \n                                \n                                \n                                        \n                                            selectedTrip\n                                        \n                                \n                                \n                                        \n                                            trips\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedTrip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedTrip:         TripModel | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TripModel | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trips\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trips:         TripModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TripModel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport * as TripActions from './trip.actions';\nimport { TripModel } from '../../shared/models/trip.model';\n\nexport interface TripState {\n  trips: TripModel[];\n  selectedTrip: TripModel | null;\n  loading: boolean;\n  error: string | null;\n}\n\nexport const initialState: TripState = {\n  trips: [],\n  selectedTrip: null,\n  loading: false,\n  error: null\n};\n\nexport const tripReducer = createReducer(\n  initialState,\n  on(TripActions.loadTrips, (state) => ({ ...state, loading: true })),\n  on(TripActions.loadTripsSuccess, (state, { trips }) => ({\n    ...state,\n    loading: false,\n    trips\n  })),\n  on(TripActions.loadTripsFailure, (state, { error }) => ({\n    ...state,\n    loading: false,\n    error\n  })),\n  on(TripActions.addTripSuccess, (state, { trip }) => ({\n    ...state,\n    trips: [...state.trips, trip]\n  })),\n  on(TripActions.updateTripSuccess, (state, { trip }) => ({\n    ...state,\n    trips: state.trips.map((t) => (t.id === trip.id ? trip : t))\n  })),\n  on(TripActions.deleteTripSuccess, (state, { id }) => ({\n    ...state,\n    trips: state.trips.filter((t) => t.id !== id)\n  })),\n  on(TripActions.loadTripById, (state) => ({\n    ...state,\n    loading: true,\n    error: null\n  })),\n  on(TripActions.loadTripByIdSuccess, (state, { trip }) => ({\n    ...state,\n    trips: [...state.trips.filter((t) => t.id !== trip.id), trip],\n  })),\n  on(TripActions.loadTripByIdFailure, (state, { error }) => ({\n    ...state,\n    selectedTrip: null,\n    loading: false,\n    error\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserModel.html":{"url":"interfaces/UserModel.html","title":"interface - UserModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from '../enums/role.enum';\n\nexport interface UserModel {\n  id: number;\n  name: string;\n  email: string;\n  password: string;\n  token: string;\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                        src/app/auth/auth.service.ts\n            \n            variable\n            LOGGED_USER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/auth/auth.service.ts\n            \n            variable\n            LOGGED_USER_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/auth/guards/auth.guard.ts\n            \n            variable\n            canActivate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/auth/guards/auth.guard.ts\n            \n            variable\n            canActivateChild\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/auth/guards/auth.guard.ts\n            \n            variable\n            canLoad\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/auth/interceptors/auth.interceptor.ts\n            \n            variable\n            httpResponseHandlerInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/layout/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/layout/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/layout/layout/layout.component.ts\n            \n            component\n            LayoutComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/layout/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/communication.service.ts\n            \n            injectable\n            CommunicationService\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                src/app/core/services/communication.service.ts\n            \n            interface\n            BroadcastMessage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/toaster.service.ts\n            \n            injectable\n            ToastService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/core/services/trip.service.ts\n            \n            injectable\n            TripService\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                        src/app/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/trip/trip-detail/trip-detail.component.ts\n            \n            component\n            TripDetailComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/features/trip/trip-list/trip-list.component.ts\n            \n            component\n            TripListComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/shared/components/confirm-dialog/confirm-dialog.component.ts\n            \n            component\n            ConfirmDialogComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/components/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/components/toaster/toaster.component.ts\n            \n            component\n            ToasterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/directives/toggle-password.directive.ts\n            \n            directive\n            TogglePasswordDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/models/car-rental-expense.model.ts\n            \n            interface\n            CarRentalExpenseModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/models/expense-base.model.ts\n            \n            interface\n            ExpenseBaseModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/flight-expense.model.ts\n            \n            interface\n            FlightExpenseModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/models/hotel-expense-model.ts\n            \n            interface\n            HotelExpenseModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/taxi-expense.model.ts\n            \n            interface\n            TaxiExpenseModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/models/trip.model.ts\n            \n            interface\n            TripModel\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/shared/models/user.model.ts\n            \n            interface\n            UserModel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/store/app.effects.ts\n            \n            variable\n            appEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/app.state.ts\n            \n            interface\n            AppState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/store/app.state.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/store/trip/trip.actions.ts\n            \n            variable\n            addTrip\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/store/trip/trip.actions.ts\n            \n            variable\n            addTripFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/store/trip/trip.actions.ts\n            \n            variable\n            addTripSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/store/trip/trip.actions.ts\n            \n            variable\n            deleteTrip\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/store/trip/trip.actions.ts\n            \n            variable\n            deleteTripFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/store/trip/trip.actions.ts\n            \n            variable\n            deleteTripSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/store/trip/trip.actions.ts\n            \n            variable\n            loadTripById\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/store/trip/trip.actions.ts\n            \n            variable\n            loadTripByIdFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/store/trip/trip.actions.ts\n            \n            variable\n            loadTripByIdSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/store/trip/trip.actions.ts\n            \n            variable\n            loadTrips\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/store/trip/trip.actions.ts\n            \n            variable\n            loadTripsFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/store/trip/trip.actions.ts\n            \n            variable\n            loadTripsSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/store/trip/trip.actions.ts\n            \n            variable\n            updateTrip\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/store/trip/trip.actions.ts\n            \n            variable\n            updateTripFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/store/trip/trip.actions.ts\n            \n            variable\n            updateTripSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/trip/trip.effects.ts\n            \n            injectable\n            TripEffects\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/store/trip/trip.reducer.ts\n            \n            interface\n            TripState\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/store/trip/trip.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/store/trip/trip.reducer.ts\n            \n            variable\n            tripReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/store/trip/trip.selectors.ts\n            \n            variable\n            selectAllTrips\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/store/trip/trip.selectors.ts\n            \n            variable\n            selectApprovedTrips\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/store/trip/trip.selectors.ts\n            \n            variable\n            selectError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/store/trip/trip.selectors.ts\n            \n            variable\n            selectLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/store/trip/trip.selectors.ts\n            \n            variable\n            selectSelectedTrip\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/store/trip/trip.selectors.ts\n            \n            variable\n            selectTripById\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/store/trip/trip.selectors.ts\n            \n            variable\n            selectTripState\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.3.0\n        \n            @angular/cdk : ^17.3.10\n        \n            @angular/common : ^17.3.0\n        \n            @angular/compiler : ^17.3.0\n        \n            @angular/core : ^17.3.0\n        \n            @angular/forms : ^17.3.0\n        \n            @angular/material : ^17.3.10\n        \n            @angular/platform-browser : ^17.3.0\n        \n            @angular/platform-browser-dynamic : ^17.3.0\n        \n            @angular/router : ^17.3.0\n        \n            @ngrx/effects : ^17.2.0\n        \n            @ngrx/entity : ^17.2.0\n        \n            @ngrx/router-store : ^17.2.0\n        \n            @ngrx/store : ^17.2.0\n        \n            @ngrx/store-devtools : ^17.2.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CommunicationActions   (src/.../communication.service.ts)\n                        \n                        \n                            FinanceStatus   (src/.../finance-status.enum.ts)\n                        \n                        \n                            Role   (src/.../role.enum.ts)\n                        \n                        \n                            TripStatus   (src/.../trip-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/services/communication.service.ts\n    \n        \n            \n                \n                    \n                        \n                        CommunicationActions\n                    \n                \n                        \n                            \n                                 LOGOUT\n                            \n                        \n                        \n                            \n                                Value : logout\n                            \n                        \n                        \n                            \n                                 RELOAD_TRIPS\n                            \n                        \n                        \n                            \n                                Value : reloadTrips\n                            \n                        \n                        \n                            \n                                 DELETE_TRIP\n                            \n                        \n                        \n                            \n                                Value : deleteTrip\n                            \n                        \n            \n        \n\n    src/app/shared/enums/finance-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        FinanceStatus\n                    \n                \n                        \n                            \n                                 REFUNDED\n                            \n                        \n                        \n                            \n                                Value : refunded\n                            \n                        \n                        \n                            \n                                 IN_PROCCESS\n                            \n                        \n                        \n                            \n                                Value : in-process\n                            \n                        \n            \n        \n\n    src/app/shared/enums/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 END_USER\n                            \n                        \n                        \n                            \n                                Value : end-user\n                            \n                        \n                        \n                            \n                                 APPROVER\n                            \n                        \n                        \n                            \n                                Value : approver\n                            \n                        \n                        \n                            \n                                 FINANCE\n                            \n                        \n                        \n                            \n                                Value : finance\n                            \n                        \n            \n        \n\n    src/app/shared/enums/trip-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TripStatus\n                    \n                \n                        \n                            \n                                 DRAFT\n                            \n                        \n                        \n                            \n                                Value : draft\n                            \n                        \n                        \n                            \n                                 PENDING_APPROVAL\n                            \n                        \n                        \n                            \n                                Value : pending-approval\n                            \n                        \n                        \n                            \n                                 APPROVED\n                            \n                        \n                        \n                            \n                                Value : approved\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : canceled\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nExpense Management System\nDescription\nThe Expense Management System is a demo application built with Angular to simplify expense tracking and management for both general users and businesses. Users can create trips, add categorized expenses, and send them for approval. The app simulates role-based authentication and provides different functionalities for End Users, Approvers, and Finance roles.\n\nFeatures\nEnd User\n\nCreate a trip:\nTrip Name\nTrip Duration\nTrip Start/End Date\n\n\nAdd expenses to a trip by category:\nCar Rental:\nCar Name\nPick-up/Drop-off time, date, and location\nTotal Price\n\n\nHotel:\nHotel Name\nLocation\nCheck-in/Check-out date\nTotal Price\n\n\nFlight:\nAirline\nDeparture/Arrival time, date, and location\nTotal Price\n\n\nTaxi:\nFrom, To\nTime and date\nTotal Price\n\n\n\n\nEdit and view expenses\nSend a trip for approval:\nOnce sent, no further modifications are allowed.\n\n\n\nApprover\n\nView all trips and their expenses\nAdd notes\nApprove or cancel a trip\n\nFinance\n\nView all approved trips\nMark trips as \"Refunded\" or \"In Process\"\n\n\nTechnologies Used\n\nFrontend: Angular, Angular Material, Tailwind CSS, DaisyUI\nState Management: NgRx (Store, Effects, Entity, Router Store, DevTools)\nMock Backend: JSON-server\nLinting & Formatting: ESLint, Prettier, Husky\nTesting: Karma, Jasmine\n\n\nSetup & Installation\nPrerequisites\nEnsure you have the following installed:\n\nNode.js (v22.5.1)\nAngular CLI (v17.3.11)\n\nInstallation\n\nClone the repository:\nExample :git clone https://github.com/Tom2132t/expense-management-system.git\ncd expense-management-system\nInstall dependencies:\nExample :npm install\nStart the JSON-server (mock backend):\nExample :npm run start:json-server\nStart the Angular development server:\nExample :ng serve\nOpen your browser at http://localhost:4200.\n\n\n\nRoles & Authentication\nThe app simulates role-based authentication using JSON-server:\n\nEnd User: Full control over creating trips and adding expenses.\nApprover: Can view trips, add notes, and approve/cancel them.\nFinance: Can view approved trips and manage their statuses.\n\n\nFolder Structure\nExample :src/\n├── app/\n│   ├── components/       # UI Components\n│   ├── services/         # Shared services (e.g., API calls)\n│   ├── store/            # NgRx store setup\n│   ├── models/           # Data models\n│   ├── app.module.ts     # Root module\n│   └── app.component.ts  # Root component\n├── assets/               # Static assets (e.g., images, styles)\n├── environments/         # Environment-specific configurations\n├── index.html            # Main HTML file\n└── main.ts               # Application bootstrap\nScripts\n\n\n\nScript\nDescription\n\n\n\n\nng serve\nStart the development server\n\n\nnpm run start:json-server\nStart the mock backend server\n\n\nng build\nBuild the project for production\n\n\nng test\nRun unit tests\n\n\nng lint\nCheck for linting issues\n\n\nnpm run format\nFormat the codebase using Prettier\n\n\n\n\nLimitations\n\nThe app uses json-server to simulate a backend. It does not connect to a live database or API.\nRole-based authentication is simulated and not secure for production environments.\n\n\nContributing\nContributions are welcome! Follow these steps:\n\nFork the repository.\nCreate a new branch:Example :git checkout -b feature-name\nCommit your changes:Example :git commit -m \"Add feature XYZ\"\nPush to the branch:Example :git push origin feature-name\nCreate a pull request.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addTrip   (src/.../trip.actions.ts)\n                        \n                        \n                            addTripFailure   (src/.../trip.actions.ts)\n                        \n                        \n                            addTripSuccess   (src/.../trip.actions.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            appEffects   (src/.../app.effects.ts)\n                        \n                        \n                            canActivate   (src/.../auth.guard.ts)\n                        \n                        \n                            canActivateChild   (src/.../auth.guard.ts)\n                        \n                        \n                            canLoad   (src/.../auth.guard.ts)\n                        \n                        \n                            deleteTrip   (src/.../trip.actions.ts)\n                        \n                        \n                            deleteTripFailure   (src/.../trip.actions.ts)\n                        \n                        \n                            deleteTripSuccess   (src/.../trip.actions.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            httpResponseHandlerInterceptor   (src/.../auth.interceptor.ts)\n                        \n                        \n                            initialState   (src/.../trip.reducer.ts)\n                        \n                        \n                            loadTripById   (src/.../trip.actions.ts)\n                        \n                        \n                            loadTripByIdFailure   (src/.../trip.actions.ts)\n                        \n                        \n                            loadTripByIdSuccess   (src/.../trip.actions.ts)\n                        \n                        \n                            loadTrips   (src/.../trip.actions.ts)\n                        \n                        \n                            loadTripsFailure   (src/.../trip.actions.ts)\n                        \n                        \n                            loadTripsSuccess   (src/.../trip.actions.ts)\n                        \n                        \n                            LOGGED_USER   (src/.../auth.service.ts)\n                        \n                        \n                            LOGGED_USER_TOKEN   (src/.../auth.service.ts)\n                        \n                        \n                            reducers   (src/.../app.state.ts)\n                        \n                        \n                            selectAllTrips   (src/.../trip.selectors.ts)\n                        \n                        \n                            selectApprovedTrips   (src/.../trip.selectors.ts)\n                        \n                        \n                            selectError   (src/.../trip.selectors.ts)\n                        \n                        \n                            selectLoading   (src/.../trip.selectors.ts)\n                        \n                        \n                            selectSelectedTrip   (src/.../trip.selectors.ts)\n                        \n                        \n                            selectTripById   (src/.../trip.selectors.ts)\n                        \n                        \n                            selectTripState   (src/.../trip.selectors.ts)\n                        \n                        \n                            tripReducer   (src/.../trip.reducer.ts)\n                        \n                        \n                            updateTrip   (src/.../trip.actions.ts)\n                        \n                        \n                            updateTripFailure   (src/.../trip.actions.ts)\n                        \n                        \n                            updateTripSuccess   (src/.../trip.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/trip/trip.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        addTrip\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Trip] Add Trip',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTripFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Trip] Add Trip Failure',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTripSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Trip] Add Trip Success',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTrip\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Trip] Delete Trip',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTripFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Trip] Delete Trip Failure',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTripSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Trip] Delete Trip Success',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTripById\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Trip API] Load Trip By ID',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTripByIdFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Trip API] Load Trip By ID Failure',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTripByIdSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Trip API] Load Trip By ID Success',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTrips\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Trip] Load Trips')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTripsFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Trip] Load Trips Failure',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTripsSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Trip] Load Trips Success',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTrip\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Trip] Update Trip',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTripFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Trip] Update Trip Failure',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTripSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Trip] Update Trip Success',\n  props()\n)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideRouter(routes),\n    provideHttpClient(withFetch()),\n    provideStore(reducers),\n    provideEffects(appEffects),\n    provideStoreDevtools({ maxAge: 25, logOnly: false }),\n    provideAnimationsAsync()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/store/app.effects.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appEffects\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [TripEffects]\n                    \n                \n\n\n        \n    \n\n    src/app/auth/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : () => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n\n  if (!authService.isLoggedIn) {\n    router.navigate(['/login']);\n    return false;\n  }\n\n  return true;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canActivateChild\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (route: ActivatedRouteSnapshot) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n\n  const roles = route.data['roles'] as string[];\n\n  if (authService.isLoggedIn && authService.user) {\n    if (roles.includes(authService.user.role)) {\n      return true;\n    } else {\n      router.navigate(['/unauthorized']);\n      return false;\n    }\n  } else {\n    router.navigate(['/login']);\n    return false;\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canLoad\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n\n  if (authService.isLoggedIn && authService.user?.role) {\n    return true;\n  } else {\n    router.navigate(['/unauthorized']);\n    return false;\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  baseUrl: 'http://localhost:3000'\n}\n                    \n                \n\n\n        \n    \n\n    src/app/auth/interceptors/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        httpResponseHandlerInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  req,\n  next\n) => {\n  const authService = inject(AuthService);\n\n  const authReq = req.clone({\n    headers: req.headers\n      .set('Access-Control-Allow-Origin', '*')\n      .set('Authorization', `Bearer ${authService.token ?? ''}`)\n  });\n\n  return next(authReq).pipe(\n    tap({\n      next: (response) => {\n        console.log('HTTP request successful', response);\n      },\n      error: (error) => {\n        if (error instanceof HttpErrorResponse) {\n          switch (error.status) {\n            case 401:\n              console.error('Session expired. Please log in again.');\n              authService.logout();\n              break;\n            case 403:\n              console.error(\n                'You do not have permission to access this resource.'\n              );\n              break;\n            case 500:\n              console.error(\n                'An unexpected error occurred on the server. Please try again later.'\n              );\n              break;\n            default:\n              console.error(\n                `Unhandled HTTP error: ${error.status} - ${error.message}`\n              );\n              break;\n          }\n        }\n      }\n    })\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/app/store/trip/trip.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TripState\n\n                    \n                \n                \n                    \n                        Default value : {\n  trips: [],\n  selectedTrip: null,\n  loading: false,\n  error: null\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tripReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n  on(TripActions.loadTrips, (state) => ({ ...state, loading: true })),\n  on(TripActions.loadTripsSuccess, (state, { trips }) => ({\n    ...state,\n    loading: false,\n    trips\n  })),\n  on(TripActions.loadTripsFailure, (state, { error }) => ({\n    ...state,\n    loading: false,\n    error\n  })),\n  on(TripActions.addTripSuccess, (state, { trip }) => ({\n    ...state,\n    trips: [...state.trips, trip]\n  })),\n  on(TripActions.updateTripSuccess, (state, { trip }) => ({\n    ...state,\n    trips: state.trips.map((t) => (t.id === trip.id ? trip : t))\n  })),\n  on(TripActions.deleteTripSuccess, (state, { id }) => ({\n    ...state,\n    trips: state.trips.filter((t) => t.id !== id)\n  })),\n  on(TripActions.loadTripById, (state) => ({\n    ...state,\n    loading: true,\n    error: null\n  })),\n  on(TripActions.loadTripByIdSuccess, (state, { trip }) => ({\n    ...state,\n    trips: [...state.trips.filter((t) => t.id !== trip.id), trip],\n  })),\n  on(TripActions.loadTripByIdFailure, (state, { error }) => ({\n    ...state,\n    selectedTrip: null,\n    loading: false,\n    error\n  }))\n)\n                    \n                \n\n\n        \n    \n\n    src/app/auth/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOGGED_USER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'blog:user'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LOGGED_USER_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'blog:token'\n                    \n                \n\n\n        \n    \n\n    src/app/store/app.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActionReducerMap\n\n                    \n                \n                \n                    \n                        Default value : {\n  trip: tripReducer\n}\n                    \n                \n\n\n        \n    \n\n    src/app/store/trip/trip.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectAllTrips\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectTripState,\n  (state) => state.trips || []\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectApprovedTrips\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(selectAllTrips, (trips) =>\n  trips.filter((trip) => trip.status === TripStatus.APPROVED)\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectTripState,\n  (state) => state.error\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectTripState,\n  (state) => state.loading\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectSelectedTrip\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectTripState,\n  (state) => state.selectedTrip\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectTripById\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (id: string) =>\n  createSelector(selectTripState, (trips) => {\n    return trips.trips.find((trip) => trip.id === id) || null;\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectTripState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector('trip')\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
